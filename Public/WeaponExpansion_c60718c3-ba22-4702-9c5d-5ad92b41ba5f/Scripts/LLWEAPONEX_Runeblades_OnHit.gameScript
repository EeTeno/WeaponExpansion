INIT
	INT:%LLWEAPONEX_Runeblade_Air_Chance = 101
	INT:%LLWEAPONEX_Runeblade_Air_Chance_Wet = 501
	INT:%LLWEAPONEX_Runeblade_Avalanche_Chance = 401
	INT:%LLWEAPONEX_Runeblade_Blood_Chance = 201
	INT:%LLWEAPONEX_Runeblade_BloodDisease_Chance = 401
	INT:%LLWEAPONEX_Runeblade_BloodEarth_Chance = 101
	INT:%LLWEAPONEX_Runeblade_BloodEarth_Chance_Undead = 501
	INT:%LLWEAPONEX_Runeblade_Dust_Chance = 301
	INT:%LLWEAPONEX_Runeblade_Earth_Chance = 201
	INT:%LLWEAPONEX_Runeblade_Explosion_Chance = 401
	INT:%LLWEAPONEX_Runeblade_Gas_Chance = 501
	INT:%LLWEAPONEX_Runeblade_Ice_Chance = 201
	INT:%LLWEAPONEX_Runeblade_Lava_Chance = 601
	INT:%LLWEAPONEX_Runeblade_Quake_Chance = 201
	INT:%LLWEAPONEX_Runeblade_Searing_Chance = 401
	INT:%LLWEAPONEX_Runeblade_Tar_Chance = 401
	INT:%LLWEAPONEX_Runeblade_Thunderbolt_Chance = 201
	INT:%LLWEAPONEX_Runeblade_Thunderbolt_Chance_Wet = 801
	INT:%LLWEAPONEX_Runeblade_Water_Chance = 501
	
	INT:%LLWEAPONEX_Runeblade_Gas_MaxSurfaceTurns = 4
	INT:%LLWEAPONEX_Runeblade_Inferno_MaxStacks = 4
	INT:%LLWEAPONEX_Runeblade_Venom_MaxStacks = 4
EVENTS

//Bonuses not determined by chance
EVENT LLWEAPONEX_Runeblade_OnHit_ApplyBonuses
VARS
	CHARACTER:_Target
	CHARACTER:_Source
	INT:_IntVar
ON
	OnCharacterCharacterEvent(_Source, _Target, "LLWEAPONEX_Runeblade_ApplyBonusOnHit")
ACTIONS
IF "c1"
	CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_FIRE)
THEN
	CharacterApplyStatus(_Target, BURNING, 1, 0, _Source)
ENDIF
IF "c1&c2&!c3"
	CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_HEATBURST)
	CharacterHasStatus(_Source, BURNING)
	CharacterHasStatus(_Target, LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD)
THEN
	CharacterApplyStatus(_Target, LLWEAPONEX_RUNEBLADE_HEATBURST_SPREAD, 1, 0, _Source)
ENDIF

IF "c1"
	CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_WATER)
THEN
	CharacterApplyStatus(_Target, WET, 1, 0, _Source)
ENDIF

IF "c1&c2"
	CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_SEARING)
	CharacterHasStatus(_Target, WET)
THEN
	CharacterRemoveStatus(_Target, WET, LLWEAPONEX_EVAPORATE_WATER, 1)
	CharacterApplyStatus(_Target, LLWEAPONEX_EVAPORATE_WATER, 0, 0, _Source)
	CharacterApplyStatus(_Target, LLWEAPONEX_EVAPORATE_FIRE, 0, 0, _Source)
ENDIF

IF "c1"
	CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_POISON)
THEN
	CharacterApplyStatus(_Target, POISONED, 1, 0, _Source)
ENDIF


//Enemy-only effects
IF "c1"
	CharacterIsEnemy(_Target, _Source)
THEN
	IF "c1&!c2&!c3&!c4&!c5"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_DEATH)
		CharacterHasStatus(_Target, LLWEAPONEX_REVENANT)
		IsBoss(_Target)
		CharacterHasStatus(_Target, LLWEAPONEX_DEATH_SENTENCE)
		CharacterHasStatus(_Target, LLWEAPONEX_DEATH_SENTENCE_BLOCKED)
	THEN
		CharacterApplyStatus(_Target, LLWEAPONEX_DEATH_SENTENCE, 1, 0, _Source)
	ENDIF
ENDIF	

IF "c1"
	CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_PLUS)
THEN
	IF "!c1"
		GetVar(_IntVar, _Source, "LLWEAPONEX_BloodPlusAttacks")
	THEN
		Set(_IntVar, 0)
	ENDIF
	
	Add(_IntVar, 1)
	IF "c1|c2"
		IsEqual(_IntVar, 2)
		IsGreaterThen(_IntVar, 2)
	THEN
		SetVar(_Source, "LLWEAPONEX_BloodPlusAttacks", INT:0)
		CharacterAddToInventory(_Source, "WPN_LLWEAPONEX_Throwing_BloodBall", 1)
		StatusText(_Source, "Added Blood Ball?")
	ELSE
		SetVar(_Source, "LLWEAPONEX_BloodPlusAttacks", _IntVar)
	ENDIF
ENDIF

//Prevent double procs when dual-wielding
//LLWEAPONEX_PREVENT_DOUBLE_HITS is applied in the next chance-based event
IF "!c1"
	CharacterHasStatus(_Target, LLWEAPONEX_PREVENT_DOUBLE_HITS)
THEN
	IF "c1"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_CONDUCTION)
	THEN
		IF "c1|c2"
			CharacterHasStatus(_Target, STUNNED)
			CharacterHasStatus(_Target, SHOCKED)
		THEN
			CharacterApplyStatus(_Target, LLWEAPONEX_RUNEBLADE_CONDUCTION_CHAINLIGHTNING, 0, 0, _Source)
			//ExplodeAt(_Target, Projectile_LLWEAPONEX_Runeblade_Conduction_ChainLightning, -1, _Source)
		ENDIF
		IF "c1"
			CharacterHasStatus(_Target, WET)
		THEN
			IF "!c1"
				CharacterHasStatus(_Target, LLWEAPONEX_SHOCKED_RESISTANCE_RUNEBLADE)
			THEN
				CharacterApplyStatus(_Target, SHOCKED, 1, 0, _Source)
				CharacterApplyStatus(_Target, LLWEAPONEX_SHOCKED_RESISTANCE_RUNEBLADE, 3, 0, _Target)
			ENDIF
		ELSE
			CharacterApplyStatus(_Target, WET, 1, 0, _Source)
		ENDIF
	ENDIF
	
	IF "c1&c2&!c3"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_CONTAMINATION)
		CharacterHasStatus(_Target, POISONED)
		CharacterHasStatus(_Target, LLWEAPONEX_RUNEBLADE_CONTAMINATION_SPREAD)
	THEN
		CharacterApplyStatus(_Target, LLWEAPONEX_RUNEBLADE_CONTAMINATION_SPREAD, 1, 0, _Source)
	ENDIF
	
	IF "c1"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_INFERNO)
	THEN
		IF "c1"
			GetStatusTurns(_Target, BURNING, _IntVar)
		THEN
			Add(_IntVar, 1)
			Clamp(_IntVar, 1, %LLWEAPONEX_Runeblade_Inferno_MaxStacks)
			CharacterApplyStatus(_Target, BURNING, _IntVar, 0, _Source)
		ELSE
			CharacterApplyStatus(_Target, BURNING, 1, 0, _Source)
		ENDIF
	ENDIF
	
	IF "c1"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_VENOM)
	THEN
		IF "c1"
			GetStatusTurns(_Target, POISONED, _IntVar)
		THEN
			Add(_IntVar, 1)
			Clamp(_IntVar, 1, %LLWEAPONEX_Runeblade_Venom_MaxStacks)
			CharacterApplyStatus(_Target, POISONED, _IntVar, 0, _Source)
		ELSE
			CharacterApplyStatus(_Target, POISONED, 1, 0, _Source)
		ENDIF
	ENDIF
	
	IF "c1"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_AIR)
	THEN
		CharacterApplyStatus(_Source, LLWEAPONEX_RUNEBLADE_BLOOD_AIR_REGEN_AURA, 1, 0, _Source)
	ENDIF
	
	IF "c1"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_FIRE)
	THEN
		CharacterApplyStatus(_Target, LLWEAPONEX_SOUL_BURN_PROC, 0, 0, _Source)
	ENDIF
ENDIF

EVENT LLWEAPONEX_Runeblade_OnHit_RollingDone
VARS
	CHARACTER:_Target
	CHARACTER:_Source
	INT:_Ran
	INT:_IntVar
	STRING:_Msg
	FIXEDSTRING:_MsgF
	SURFACE:_Surface
	INT:_SurfaceTurns
	INT:_CellMin
	INT:_CellMax
	INT:_GrowMin
	INT:_GrowMax
	INT:_SkipNext
ON
	//OnCharacterCharacterEvent(_Source, _Target, "LLWEAPONEX_Events_Runeblade_RandomSet")
	OnCharacterCharacterEvent(_Source, _Target, "LLWEAPONEX_Runeblade_ApplyBonusOnHit")
ACTIONS
	Set(_SkipNext, 0)
IF "c1|c2"
	CharacterIsDead(_Source)
	CharacterIsDead(_Target)
THEN
	Set(_SkipNext, 1)
	Goto("End")
ENDIF

IF "!c1"
	IsEqual(_SkipNext, 1)
THEN
	GetRandomBetween(_Ran, 0, 999)
	// Skip checks
	GotoIfEqual(_Ran, 0, "End")

	IF "c1&c2"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD)
		IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Blood_Chance)
	THEN
		CharacterApplyStatus(_Target, LLWEAPONEX_MAGIC_BLEEDING_CHECK, 1, 0, _Source)
	ENDIF

	IF "c1&c2"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_LAVA)
		IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Lava_Chance)
	THEN
		CharacterApplyStatus(_Target, LLWEAPONEX_RUNEBLADE_LAVA_EXPLODE, 0, 0, _Source)
	ENDIF

	IF "c1&c2"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_SEARING)
		IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Searing_Chance)
	THEN
		CharacterApplyStatus(_Target, LLWEAPONEX_WATER_BURN, 2, 0, _Source)
	ENDIF

	IF "c1&c2"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_AVALANCHE)
		IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Avalanche_Chance)
	THEN
		CharacterApplyStatus(_Target, LLWEAPONEX_RUNEBLADE_AVALANCHE_SNOW, 1, 0, _Source)
	ENDIF

	IF "c1&c2"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_EARTH)
		IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Earth_Chance)
	THEN
		CharacterApplyStatus(_Target, SLOWED, 1, 0, _Source)
	ENDIF

	IF "c1&c2"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_QUAKE)
		IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Quake_Chance)
	THEN
		CharacterApplyStatus(_Target, LLWEAPONEX_MAGIC_KNOCKDOWN_CHECK, 1, 0, _Source)
	ENDIF

	IF "c1&!c2&c3"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_DUST)
		CharacterHasStatus(_Source, LLWEAPONEX_RUNEBLADE_DUST_COOLDOWN)
		IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Dust_Chance)
	THEN
		ShootLocalConeAt(Cone_LLWEAPONEX_Runeblade_DustBlast, _Source, null, _Target, -1, _Source)
		CharacterApplyStatus(_Source, LLWEAPONEX_RUNEBLADE_DUST_COOLDOWN, 1, 0, _Source)
		CharacterPlayEffect(_Source, "LLWEAPONEX_FX_Skills_Runeblade_DustBlast_Cast_01", "")
	ENDIF

	IF "c1&!c2"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_THUNDERBOLT)
		CharacterHasStatus(_Target, LLWEAPONEX_RUNEBLADE_THUNDERBOLT_COOLDOWN)
	THEN
		IF "c1&c2"
			CharacterHasStatus(_Target, WET)
			IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Thunderbolt_Chance_Wet)
		THEN
			CharacterApplyStatus(_Target, LLWEAPONEX_RUNEBLADE_THUNDERBOLT_EXPLODE, 0, 0, _Source)
			CharacterApplyStatus(_Target, LLWEAPONEX_RUNEBLADE_THUNDERBOLT_COOLDOWN, 1, 0, _Source)
		ELIF "!c1&c2"
			CharacterHasStatus(_Target, WET)
			IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Thunderbolt_Chance)
		THEN
			CharacterApplyStatus(_Target, LLWEAPONEX_RUNEBLADE_THUNDERBOLT_EXPLODE, 0, 0, _Source)
			CharacterApplyStatus(_Target, LLWEAPONEX_RUNEBLADE_THUNDERBOLT_COOLDOWN, 1, 0, _Source)
		ENDIF
	ENDIF

	IF "c1&c2"
		CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_EXPLOSIVE)
		IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Explosion_Chance)
	THEN
		CharacterApplyStatus(_Target, LLWEAPONEX_RUNEBLADE_EXPLODE, 0, 0, _Source)
	ENDIF

	//Enemy-only effects
	IF "c1"
		CharacterIsEnemy(_Target, _Source)
	THEN
		IF "c1&c2"
			CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_TAR)
			IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Tar_Chance)
		THEN
			CharacterApplyStatus(_Target, LLWEAPONEX_TARRED, 2, 0, _Source)
		ENDIF

		IF "c1&c2"
			CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_POISON)
			IsLessThen(_Ran, %LLWEAPONEX_Runeblade_BloodDisease_Chance)
		THEN
			CharacterApplyStatus(_Target, INFECTIOUS_DISEASED, 1, 0, _Source)
		ENDIF
	ENDIF	

	//Prevent double procs when dual-wielding
	IF "!c1"
		CharacterHasStatus(_Target, LLWEAPONEX_PREVENT_DOUBLE_HITS)
	THEN
		IF "c1&!c2"
			CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_AIR)
			CharacterHasStatus(_Target, LLWEAPONEX_SHOCKED_RESISTANCE_RUNEBLADE)
		THEN
			IF "c1&c2"
				CharacterHasStatus(_Target, WET)
				IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Air_Chance_Wet)
			THEN
				CharacterApplyStatus(_Target, SHOCKED, 1, 0, _Source)
				CharacterApplyStatus(_Target, LLWEAPONEX_SHOCKED_RESISTANCE_RUNEBLADE, 3, 0, _Target)
			ELIF "!c1&c2"
				CharacterHasStatus(_Target, WET)
				IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Air_Chance)
			THEN
				CharacterApplyStatus(_Target, SHOCKED, 1, 0, _Source)
				CharacterApplyStatus(_Target, LLWEAPONEX_SHOCKED_RESISTANCE_RUNEBLADE, 3, 0, _Target)
			ENDIF
		ENDIF

		IF "c1&!c2&c3"
			CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_GAS)
			CharacterHasStatus(_Source, LLWEAPONEX_RUNEBLADE_GAS_COOLDOWN)
			IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Gas_Chance)
		THEN
			IF "c1&c2"
				GetSurfaceCloudAt(_Target, _Surface)
				IsEqual(_Surface, SurfacePoisonCloud)
			THEN
				StatusText(_Target, "<font color='#f7ba14'>Gas Expansion</font>")
				Set(_IntVar, 2)
			ELSE
				StatusText(_Target, "<font color='#65c900'>Gas Creation</font>")
				Set(_IntVar, 1)
			ENDIF
			
			Set(_CellMin, 20)
			Set(_CellMax, 35)
			Set(_GrowMin, 2)
			Set(_GrowMax, 5)
			Multiply(_CellMax, _IntVar)
			Multiply(_GrowMax, _IntVar)

			CreatePuddleAt(_Target, SurfacePoisonCloud, _CellMin, _CellMax, _GrowMin, _GrowMax, 0.01, 3)
			CharacterApplyStatus(_Source, LLWEAPONEX_RUNEBLADE_GAS_COOLDOWN, 1, 0, _Source)
			CharacterPlayEffect(_Target, "RS3_FX_Skills_Earth_Cast_Target_Air_Hand_01", "Dummy_BodyFX")
			//PlaySound(_Target, "Skill_Earth_Cast_Target_Air_Poison")
		ENDIF
		
		IF "c1"
			CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_ICE)
		THEN
			IF "c1"
				CharacterHasStatus(_Target, CHILLED)
			THEN
				IF "c1"
					IsLessThen(_Ran, %LLWEAPONEX_Runeblade_Ice_Chance)
				THEN
					CharacterApplyStatus(_Target, FROZEN, 1, 0, _Source)
				ENDIF
			ELSE
				CharacterApplyStatus(_Target, CHILLED, 1, 0, _Source)
			ENDIF
		ENDIF
		
		IF "c1"
			CharacterHasStatus(_Source, LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_EARTH)
		THEN
			IF "c1|c2|c3"
				IsTagged(_Target, "UNDEAD")
				IsTagged(_Target, "UNDEAD_BEAST")
				CharacterHasTalent(_Target, Zombie)
			THEN
				CharacterApplyStatus(_Target, LLWEAPONEX_UNDEAD_BONUS_DAMAGE, 0, 0, _Source)
				IF "c1"
					IsLessThen(_Ran, %LLWEAPONEX_Runeblade_BloodEarth_Chance_Undead)
				THEN
					CharacterApplyStatus(_Target, ENTANGLED, 1, 0, _Source)
				ENDIF
			ELIF "c1"
				IsLessThen(_Ran, %LLWEAPONEX_Runeblade_BloodEarth_Chance)
			THEN
				CharacterApplyStatus(_Target, ENTANGLED, 1, 0, _Source)
			ENDIF
		ENDIF

		//Removed after 500ms
		CharacterApplyStatus(_Target, LLWEAPONEX_PREVENT_DOUBLE_HITS, 1, 0, _Source)
	ENDIF
ENDIF
//Label("LLWEAPONEX_Runeblade_CriticalFailure")