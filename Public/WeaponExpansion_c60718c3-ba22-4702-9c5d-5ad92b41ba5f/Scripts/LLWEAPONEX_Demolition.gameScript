INIT
	LIST<SKILL>:%LLWEAPONEX_Demolition_BonusSkills
	
	CHARACTER:%LLWEAPONEX_Demolition_DisplacementIteratorOwner = null
EVENTS

EVENT LLWEAPONEX_Demolition_AddToList
VARS
	SKILL:_Skill
	SKILL:_SkillCheck
	INT:_Index
	INT:_Size
	INT:_FoundSkill
	CHARACTER:_Middleman
ON
	//OnSkillAdded(S_LLWEAPONEX_VendingMachine_A_680d2702-721c-412d-b083-4f5e816b945a, _Skill, _)
	OnCharacterEvent(_Middleman, "LLWEAPONEX_VendingMachine_SkillJustAdded")
ACTIONS
	Set(_Index, 0)
	Set(_FoundSkill, 0)
IF "c1&!c2"
	GetVar(_Skill, _Middleman, "LLWEAPONEX_VendingMachine_SkillAdded")
	IsEqual(_Skill, null)
THEN
	IF "c1&c2"
		ListGetSize(%LLWEAPONEX_Demolition_BonusSkills, _Size)
		IsGreaterThen(_Size, 0)
	THEN
		Set(_Index, 1)
		WHILE "!c1&!c2"
			IsGreaterThen(_Index, _Size)
			IsEqual(_FoundSkill, 1)
		DO
			IF "c1&c2"
				ListGet(%LLWEAPONEX_Demolition_BonusSkills, _Index, _SkillCheck)
				IsEqual(_SkillCheck, _Skill)
			THEN
				Set(_FoundSkill, 1)
			ELSE
				Add(_Index, 1)
			ENDIF
		ENDWHILE
	ENDIF

	IF "c1"
		IsEqual(_FoundSkill, 0)
	THEN
		ListAdd(%LLWEAPONEX_Demolition_BonusSkills, _Skill)
		IF "c1"
			ListGetSize(%LLWEAPONEX_Demolition_BonusSkills, _Index)
		THEN
		ENDIF
	ELSE
		Set(_Index, 0)
	ENDIF
ENDIF
	SetVar(_Middleman, "LLWEAPONEX_Demolition_LastListIndex", _Index)
	CharacterEvent(_Middleman, "LLWEAPONEX_Demolition_SkillAddedToList")
/*
EVENT LLWEAPONEX_Demolition_InitList
ON
	OnFunction("LLWEAPONEX_Demolition_InitList")
ACTIONS
	ListClear(%LLWEAPONEX_Demolition_BonusSkills)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_ArmorPiercing)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_NailBomb)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_Flashbang)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_Molotov)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_CursedMolotov)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_Love)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_MindMaggot)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_ChemicalWarfare)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_Terror)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_Ice)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_BlessedIce)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_Holy)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_Tremor)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_Taser)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_WaterBalloon)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_WaterBlessedBalloon)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_SmokeBomb)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_MustardGas)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_OilFlask)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_BlessedOilFlask)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_PoisonFlask)
	ListAdd(%LLWEAPONEX_Demolition_BonusSkills, Projectile_LLWEAPONEX_Status_Demolition_CursedPoisonFlask)
*/

/*
EVENT LLWEAPONEX_Demolition_InitList_Start
VARS
	INT:_Size
ON
	OnItemEvent(_, "LeaderLib_Initialized")
	OnFunction("LLWEAPONEX_Demolition_CheckInit")
	OnGlobalFlagSet("LLWEAPONEX_DemolitionBackpackEquipped")
ACTIONS
IF "!c1|(c1&c2)"
	ListGetSize(%LLWEAPONEX_Demolition_BonusSkills, _Size)
	IsEqual(_Size, 0)
THEN
	CallFunction("LLWEAPONEX_Demolition_InitList")
ENDIF
*/

EVENT LLWEAPONEX_Demolition_Sabotage
VARS
	CHARACTER:_Player
	FLOAT3:_Pos
ON
	OnCharacterEvent(_Player, "LLWEAPONEX_DemolitionBonus_Sabotage")
ACTIONS
IF "c1&!c2"
	GetVar(_Pos, _Player, "LLWEAPONEX_Demolition_BonusPosition")
	IsEqual(_Pos, null)
THEN
	ExplodeAt(_Pos, Projectile_LLWEAPONEX_Status_Demolition_Sabotage_EnemyOnly, 1, _Player)
ENDIF

EVENT LLWEAPONEX_Demolition_GrenadeBonus_Default
VARS
	CHARACTER:_Player
	FLOAT3:_Pos
	INT:_Level
	FLOAT:_LevelF
ON
	OnCharacterEvent(_Player, "LLWEAPONEX_DemolitionBonus_DefaultGrenadeSkill")
ACTIONS
IF "c1&!c2"
	GetVar(_Pos, _Player, "LLWEAPONEX_Demolition_BonusPosition")
	IsEqual(_Pos, null)
THEN
	IF "c1"
		CharacterGetStat(_LevelF, _Player, Level)
	THEN
		Cast(_Level, _LevelF)
	ELSE
		Set(_Level, 1)
	ENDIF
	ExplodeAt(_Pos, Projectile_LLWEAPONEX_Status_Demolition_Default, _Level, _Player)
ENDIF

EVENT LLWEAPONEX_Demolition_SkillBonus
VARS
	CHARACTER:_Player
	FLOAT3:_Pos
	INT:_SkillIndex
	SKILL:_Skill
	INT:_Level
	FLOAT:_LevelF
	FIXEDSTRING:_SkillName
	FIXEDSTRING:_SkillNameCheck
	INT:_Index
	INT:_Size
	INT:_FoundSkill
ON
	OnCharacterEvent(_Player, "LLWEAPONEX_DemolitionBonus_SkillBonus")
ACTIONS
IF "c1&!c2"
	GetVar(_Pos, _Player, "LLWEAPONEX_Demolition_BonusPosition")
	IsEqual(_Pos, null)
THEN
	IF "c1"
		CharacterGetStat(_LevelF, _Player, Level)
	THEN
		Cast(_Level, _LevelF)
	ELSE
		Set(_Level, 1)
	ENDIF
	
	IF "c1&!c2&c3"
		GetVar(_SkillIndex, _Player, "LLWEAPONEX_Demolition_SkillIndex")
		IsEqual(_SkillIndex, null)
		ListGet(%LLWEAPONEX_Demolition_BonusSkills, _SkillIndex, _Skill)
	THEN
		//Success!
	ENDIF
	
	/*
	IF "c1&!c2&c3"
		GetVar(_SkillName, _Player, "LLWEAPONEX_Demolition_BonusSkillName")
		IsEqual(_SkillName, null)
		ListGetSize(%LLWEAPONEX_Demolition_BonusSkillNames, _Size)
	THEN
		Set(_Index, 1)
		Set(_FoundSkill, 0)
		WHILE "!c1|!c2"
			IsGreaterThen(_Index, _Size)
			IsEqual(_FoundSkill, 1)
		DO
			IF "c1&c2"
				ListGet(%LLWEAPONEX_Demolition_BonusSkillNames, _Index, _SkillNameCheck)
				IsEqual(_SkillName, _SkillNameCheck)
			THEN
				Set(_FoundSkill, 1)
			ELSE
				Add(_Index, 1)
			ENDIF
		ENDWHILE
		IF "c1&c2"
			IsEqual(_FoundSkill, 1)
			ListGet(%LLWEAPONEX_Demolition_BonusSkills, _Index, _Skill)
		THEN
			//Success!
		ENDIF
	ENDIF
	*/
	IF "c1"
		IsEqual(_Skill, null)
	THEN
		Set(_Skill, Projectile_LLWEAPONEX_Status_Demolition_Default)
	ENDIF
	ExplodeAt(_Pos, _Skill, _Level, _Player)
ENDIF

EVENT LLWEAPONEX_Demolition_DetonateGrenade
VARS
	ITEM:_Grenade
	CHARACTER:_Character
ON
	//OnItemStatus(_Grenade, LLWEAPONEX_REMOTEMINE_DETONATE)
	OnCharacterItemEvent(_Character, _Grenade, "LLWEAPONEX_Demolition_DetonateGrenade")
ACTIONS
	SetVar(_Grenade, "Caster", _Character)
	ItemDestroy(_Grenade)

EVENT LLWEAPONEX_RemoteMines_Breached_OpenDoor
VARS
	ITEM:_Object
ON
	OnItemStatus(_Object, LLWEAPONEX_REMOTEMINE_BREACHED)
ACTIONS
IF "c1&!c2&!c3"
	ItemHasStatus(_Object, UNLOCK)
	ItemIsOpen(_Object)
	ItemIsOpening(_Object)
THEN
	ItemOpen(_Object)
ENDIF

EVENT LLWEAPONEX_RemoteMines_DisplacedFX
VARS
	CHARACTER:_Character
	ITEM:_RemoteMine
ON
	OnCharacterItemEvent(_Character, _RemoteMine, "LLWEAPONEX_RemoteMines_DisplacementSuccess")
	OnCharacterEvent(_Character, "LLWEAPONEX_RemoteMines_DisplacementSuccess")
ACTIONS
	CharacterPlayEffect(_Character, "RS3_FX_Skills_Void_Netherswap_Reappear_01")

EVENT LLWEAPONEX_RemoteMine_Detonate_Character
VARS
	FLOAT3:_Pos
	CHARACTER:_Target
	ITEM:_RemoteMine
ON
	OnCharacterItemEvent(_Target, _RemoteMine, "LLWEAPONEX_RemoteMine_StartDetonation_Character")
ACTIONS
IF "c1"
	GetPosition(_Target, _Pos)
THEN
	SetVar(_RemoteMine, "LLWEAPONEX_Mine_ExplodePos", _Pos)
ELIF "c1"
	GetPosition(_RemoteMine, _Pos)
THEN
	SetVar(_RemoteMine, "LLWEAPONEX_Mine_ExplodePos", _Pos)
ENDIF
	//CharacterItemEvent(_Target, _RemoteMine, "LLWEAPONEX_RemoteMine_Detonate")
	CharacterItemEvent(_Target, _RemoteMine, "LLWEAPONEX_RemoteMine_DetonateFromInventory")

EVENT LLWEAPONEX_RemoteMine_Detonate_Container
VARS
	FLOAT3:_Pos
	CHARACTER:_Source
	ITEM:_RemoteMine
	ITEM:_Inventory
ON
	OnCharacterItemEvent(_Source, _RemoteMine, "LLWEAPONEX_RemoteMine_StartDetonation_Container")
ACTIONS
IF "c1&!c2&c3"
	GetVar(_Inventory, _RemoteMine, "LLWEAPONEX_Mine_Inventory")
	IsEqual(_Inventory, null)
	GetPosition(_Inventory, _Pos)
THEN
	SetVar(_RemoteMine, "LLWEAPONEX_Mine_ExplodePos", _Pos)
ELIF "c1"
	GetPosition(_RemoteMine, _Pos)
THEN
	SetVar(_RemoteMine, "LLWEAPONEX_Mine_ExplodePos", _Pos)
ENDIF
	CharacterItemEvent(_Source, _RemoteMine, "LLWEAPONEX_RemoteMine_DetonateFromInventory")

EVENT LLWEAPONEX_RemoteMine_Detonate_FromInventory
VARS
	INT:_Level
	FLOAT:_LevelF
	SKILL:_CheckSkill
	SKILL:_Skill
	ITEM:_RemoteMine
	CHARACTER:_Source
	CHARACTER:_Owner
	INT:_UseSelfAsSource
	FLOAT3:_Pos
ON
	OnCharacterItemEvent(_Source, _RemoteMine, "LLWEAPONEX_RemoteMine_DetonateFromInventory")
ACTIONS
	SetVar(_RemoteMine, "LLWEAPONEX_Mine_Exploding", INT:1)
	Set(_Level, 1)

	IF "!c1|(c1&c2)"
		GetVar(_Owner, _RemoteMine, "LLWEAPONEX_Mine_Owner")
		IsEqual(_Owner, null)
	THEN
		Set(_Owner, _Source)
	ENDIF
	IF "c1"
		CharacterGetStat(_LevelF, _Owner, Level)
	THEN
		Cast(_Level, _LevelF)
	ENDIF
	
	IF "!c1&c2"
		IsTagged(_Owner, "LLWEAPONEX_AnyWeaponEquipped")
		GetVar(_CheckSkill, _RemoteMine, "LLWEAPONEX_Mine_Skill_NoWeapon")
	THEN
		Set(_Skill, _CheckSkill)
	ELIF "c1"
		GetVar(_CheckSkill, _RemoteMine, "LLWEAPONEX_Mine_Skill")
	THEN
		Set(_Skill, _CheckSkill)
	ELSE
	
	ENDIF
	
	IF "!c1|(c1&c2)"
		GetVar(_Pos, _RemoteMine, "LLWEAPONEX_Mine_ExplodePos")
		IsEqual(_Pos, null)
	THEN
		GetPosition(_RemoteMine, _Pos)
	ENDIF

	IF "!c1"
		IsEqual(_Skill, null)
	THEN
		IF "c1"
			IsEqual(_Skill, Projectile_LLWEAPONEX_RemoteMine_Displacement)
		THEN
			ItemEvent(_RemoteMine, "LLWEAPONEX_RemoteMine_PrepareDisplacement")
		ENDIF
		
		IF "c1&c2"
			GetVar(_UseSelfAsSource, _RemoteMine, "LLWEAPONEX_Mine_UseSelfAsSource")
			IsEqual(_UseSelfAsSource, 1)
		THEN
			ExplodeAt(_Pos, _Skill, _Level, _Owner)		
		ELSE
			ExplodeAt(_Pos, _Skill, _Level, _RemoteMine)
		ENDIF
	ELSE

	ENDIF
	IF "c1"
		IsEqual(_Skill, Projectile_LLWEAPONEX_RemoteMine_Breach)
	THEN
		SetVar(_RemoteMine, "LLWEAPONEX_Demolition_BreachPosition", _Pos)
		CharacterItemEvent(_Owner, _RemoteMine, "LLWEAPONEX_Demolition_StartBreach")
	ENDIF
	CharacterItemEvent(_Owner, _RemoteMine, "LLWEAPONEX_RemoteMine_DetonationDone")
	
EVENT LLWEAPONEX_RemoteMine_Prepare_Displacement
VARS
	CHARACTER:_Source
	ITEM:_RemoteMine
ON
	OnCharacterItemEvent(_Source, _RemoteMine, "LLWEAPONEX_RemoteMine_PrepareDisplacement")
ACTIONS
	Set(%LLWEAPONEX_Demolition_DisplacementIteratorOwner, _Source)
	ClearTag(_RemoteMine, "LLWEAPONEX_RemoteMine_Ready")
	IterateItemsNear(_RemoteMine, 12.0, "LLWEAPONEX_RemoteMine_FindDisplacementTargets", "LLWEAPONEX_RemoteMine_Displacer")

EVENT LLWEAPONEX_RemoteMine_Displacement_FoundTarget
VARS
	ITEM:_Target
	CHARACTER:_Owner
ON
	OnIterateItem(_Target, "LLWEAPONEX_RemoteMine_FindDisplacementTargets")
ACTIONS
IF "c1&!c2"
	IsTagged(_Target, "LLWEAPONEX_RemoteMine_Ready")
	ItemIsInInventory(_Target)
THEN
	CharacterItemEvent(%LLWEAPONEX_Demolition_DisplacementIteratorOwner, _Target, "LLWEAPONEX_Demolition_DisplacementTargetFound")
ENDIF

EVENT LLWEAPONEX_RemoteMine_OnDetonated
VARS
	CHARACTER:_Owner
	ITEM:_RemoteMine
	INT:_Amount
ON
	OnCharacterItemEvent(_Owner, _RemoteMine, "LLWEAPONEX_RemoteMine_DetonationDone")
ACTIONS
IF "!c1"
	ItemIsDestroyed(_RemoteMine)
THEN
	IF "c1"
		GetVar(_Amount, _RemoteMine, "LLWEAPONEX_Mine_Amount")
	THEN
		IF "c1"
			IsGreaterThen(_Amount, 1)
		THEN
			Subtract(_Amount, 1)
			ItemSetAmount(_RemoteMine, _Amount)
		ELSE
			//DisplayCombatInfoText(_Owner, "Bye bye!", 3.0)
			SetFlag(_RemoteMine, "LLWEAPONEX_RemoteMine_Detonated")
			ItemDestroy(_RemoteMine)
		ENDIF
	ENDIF
ENDIF