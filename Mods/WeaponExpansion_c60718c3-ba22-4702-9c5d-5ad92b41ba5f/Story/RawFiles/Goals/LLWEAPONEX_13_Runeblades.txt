Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLWEAPONEX_Runeblades_InitSettings();
KBSECTION
PROC
LLWEAPONEX_Runeblades_InitSettings()
THEN
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_AVALANCHE");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_AIR");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_EARTH");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_FIRE");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_POISON");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_BLOOD_WATER");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_CONDUCTION");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_CONTAMINATION");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_DUST");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_EXPLOSIVE");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_GAS");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_HEATWAVE");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_LAVA");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_SEARING");
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses("LLWEAPONEX_ACTIVATE_RUNEBLADE_TAR");

DB_LLWEAPONEX_Runeblades_TagToSkill("LLWEAPONEX_Runeblade_Air", "Shout_LLWEAPONEX_ActivateRuneblade_Air_DualWield");
DB_LLWEAPONEX_Runeblades_TagToSkill("LLWEAPONEX_Runeblade_Earth", "Shout_LLWEAPONEX_ActivateRuneblade_Earth_DualWield");
DB_LLWEAPONEX_Runeblades_TagToSkill("LLWEAPONEX_Runeblade_Fire", "Shout_LLWEAPONEX_ActivateRuneblade_Fire_DualWield");
DB_LLWEAPONEX_Runeblades_TagToSkill("LLWEAPONEX_Runeblade_Poison", "Shout_LLWEAPONEX_ActivateRuneblade_Poison_DualWield");
DB_LLWEAPONEX_Runeblades_TagToSkill("LLWEAPONEX_Runeblade_Water", "Shout_LLWEAPONEX_ActivateRuneblade_Water_DualWield");
DB_LLWEAPONEX_Runeblades_TagToSkill("LLWEAPONEX_Runeblade_Chaos", "Shout_LLWEAPONEX_ActivateRuneblade_Chaos_DualWield");

PROC
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses((STRING)_BaseStatus)
THEN
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses((STRING)_BaseStatus, 2);

PROC
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses((STRING)_BaseStatus, (INTEGER)_RegisterSecond)
AND
StringConcatenate(_BaseStatus, "_DAMAGE1", _BonusDamageStatus)
THEN
DB_LLWEAPONEX_Runeblades_BonusDamageStatuses(_BaseStatus, _BonusDamageStatus, "");

//REGION BONUS_DAMAGE_STATUS
PROC
LLWEAPONEX_Runeblades_RegisterBonusDamageStatuses((STRING)_BaseStatus, 2)
AND
DB_LLWEAPONEX_Runeblades_BonusDamageStatuses(_BaseStatus, _BonusDamageStatus1, _EmptyStatus)
AND
StringConcatenate(_BaseStatus, "_DAMAGE2", _BonusDamageStatus2)
THEN
NOT DB_LLWEAPONEX_Runeblades_BonusDamageStatuses(_BaseStatus, _BonusDamageStatus1, _EmptyStatus);
DB_LLWEAPONEX_Runeblades_BonusDamageStatuses(_BaseStatus, _BonusDamageStatus1, _BonusDamageStatus2);

IF
CharacterStatusApplied(_Character, _Status, _)
AND
DB_LLWEAPONEX_Runeblades_BonusDamageStatuses(_Status, _BonusDamage1, _BonusDamage2)
AND
GetStatusTurns(_Character, _Status, _TurnsInt)
AND
Real(_TurnsInt, _TurnsReal)
AND
RealProduct(_TurnsReal, 6.0, _Duration)
THEN
LLWEAPONEX_Runeblades_ApplyBonusDamageStatus(_Character, _BonusDamage1, _Duration);
LLWEAPONEX_Runeblades_ApplyBonusDamageStatus(_Character, _BonusDamage2, _Duration);

PROC
LLWEAPONEX_Runeblades_ApplyBonusDamageStatus((CHARACTERGUID)_Character, (STRING)_Status, (REAL)_Duration)
AND
_Status != ""
THEN
ApplyStatus(_Character, _Status, _Duration, 0, _Character);

IF
CharacterStatusRemoved(_Character, _Status, _)
AND
DB_LLWEAPONEX_Runeblades_BonusDamageStatuses(_Status, _BonusDamage1, _BonusDamage2)
THEN
LLWEAPONEX_Runeblades_RemoveBonusDamageStatus(_Character, _BonusDamage1);
LLWEAPONEX_Runeblades_RemoveBonusDamageStatus(_Character, _BonusDamage2);

PROC
LLWEAPONEX_Runeblades_RemoveBonusDamageStatus((CHARACTERGUID)_Character, (STRING)_Status)
AND
_Status != ""
THEN
RemoveStatus(_Character, _Status);
//END_REGION

//REGION RANDOM_ROLL
IF
CharacterCharacterEvent(_Source, _Target, "LLWEAPONEX_Commands_Runeblade_StartRandom")
AND
LeaderLib_Random_QRY(99)
AND
DB_LeaderLib_Random(_Ran)
THEN
NOT DB_LeaderLib_Random(_Ran);
SetVarInteger(_Source, "LLWEAPONEX_Runeblade_Roll", _Ran);
CharacterCharacterSetEvent(_Source, _Target, "LLWEAPONEX_Events_Runeblade_RandomSet");
//END_REGION

//REGION DOUBLE_HITS
IF
CharacterStatusApplied(_Character, "LLWEAPONEX_PREVENT_DOUBLE_HITS", _)
THEN
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_PreventDoubleHits", 500);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_PreventDoubleHits")
THEN
RemoveStatus(_Character, "LLWEAPONEX_PREVENT_DOUBLE_HITS");
//END_REGION

//REGION SOUL_BURN_TICK
IF
StoryEvent((CHARACTERGUID)_Character, "LLWEAPONEX_Commands_StartSoulBurnTick")
AND
HasActiveStatus(_Character, "LLWEAPONEX_SOUL_BURN1", 0) // Skip since it's at the bottom of the stack
THEN
ObjectClearFlag(_Character, "LLWEAPONEX_SkipSoulBurnTick");
ApplyStatus(_Character, "LLWEAPONEX_SOUL_BURN_TICK", 6.0, 1, _Character);

IF
StoryEvent((CHARACTERGUID)_Character, "LLWEAPONEX_Commands_StopSoulBurnTick")
THEN
ObjectSetFlag(_Character, "LLWEAPONEX_SkipSoulBurnTick");
RemoveStatus(_Character, "LLWEAPONEX_SOUL_BURN_TICK");

IF
CharacterStatusRemoved(_Character, "LLWEAPONEX_SOUL_BURN_TICK", _)
AND
ObjectGetFlag(_Character, "LLWEAPONEX_SkipSoulBurnTick", 1)
THEN
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_ResetSkipSoulBurnTickTimerFlag", 250);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_ResetSkipSoulBurnTickTimerFlag")
THEN
ObjectClearFlag(_Character, "LLWEAPONEX_SkipSoulBurnTick");
//END_REGION

//REGION DOUBLE_RUNEBLADE_SKILLS
IF
ItemUnEquipped(_Runeblade, _Character)
AND
IsTagged(_Runeblade, "LLWEAPONEX_Runeblade", 1)
AND
DB_LLWEAPONEX_Runeblades_Temp_AddedDualWieldingSkill(_Character, _Skill)
THEN
NOT DB_LLWEAPONEX_Runeblades_Temp_AddedDualWieldingSkill(_Character, _Skill);
CharacterRemoveSkill(_Character, _Skill);

IF
ItemEquipped(_Runeblade, _Character)
AND
IsTagged(_Runeblade, "LLWEAPONEX_Runeblade", 1)
AND
CharacterGetEquippedItem(_Character, "Weapon", (ITEMGUID)_Runeblade)
AND
CharacterGetEquippedItem(_Character, "Shield", (ITEMGUID)_OtherRuneblade)
AND
IsTagged(_OtherRuneblade, "LLWEAPONEX_Runeblade", 1)
AND
DB_LLWEAPONEX_Runeblades_TagToSkill(_Tag, _Skill)
AND
CharacterHasSkill(_Character, _Skill, 0)
AND
IsTagged(_Runeblade, _Tag, 1)
AND
IsTagged(_OtherRuneblade, _Tag, 1)
THEN
CharacterAddSkill(_Character, _Skill);
DB_LLWEAPONEX_Runeblades_Temp_AddedDualWieldingSkill(_Character, _Skill);

IF
ItemEquipped(_Runeblade, _Character)
AND
IsTagged(_Runeblade, "LLWEAPONEX_Runeblade", 1)
AND
CharacterGetEquippedItem(_Character, "Shield", (ITEMGUID)_Runeblade)
AND
CharacterGetEquippedItem(_Character, "Weapon", (ITEMGUID)_OtherRuneblade)
AND
IsTagged(_OtherRuneblade, "LLWEAPONEX_Runeblade", 1)
AND
DB_LLWEAPONEX_Runeblades_TagToSkill(_Tag, _Skill)
AND
CharacterHasSkill(_Character, _Skill, 0)
AND
IsTagged(_Runeblade, _Tag, 1)
AND
IsTagged(_OtherRuneblade, _Tag, 1)
THEN
CharacterAddSkill(_Character, _Skill);
DB_LLWEAPONEX_Runeblades_Temp_AddedDualWieldingSkill(_Character, _Skill);
//END_REGION

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_WeaponExpansion"