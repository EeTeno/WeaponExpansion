Version 1
SubGoalCombiner SGC_AND
INITSECTION
KBSECTION
PROC
ProcBlockUseOfItem((CHARACTERGUID)_Player, (ITEMGUID)_Weapon)
AND
DB_IsPlayer(_Player)
AND
IsTagged(_Weapon, "LLWEAPONEX_BonusConversion_Enabled", 1)
AND
NOT LeaderLib_Helper_QRY_IgnoreItem(_Weapon)
AND
NOT GetVarInteger(_Weapon, "LLWEAPONEX_BonusConversion_Calculated", 1)
AND
LLWEAPONEX_BonusConversion_QRY_BothWeaponSlotsFilled(_Player)
THEN
DB_LLWEAPONEX_BonusConversion_Temp_CalculateAfterUnequip(_Player, _Weapon);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:BonusConversion:ProcBlockUseOfItem] Both weapon slots are full. Calculating bonuses after another weapon is unequipped.");

PROC
ProcBlockUseOfItem((CHARACTERGUID)_Player, (ITEMGUID)_Weapon)
AND
DB_IsPlayer(_Player)
AND
IsTagged(_Weapon, "LLWEAPONEX_BonusConversion_Enabled", 1)
AND
NOT LeaderLib_Helper_QRY_IgnoreItem(_Weapon)
AND
NOT GetVarInteger(_Weapon, "LLWEAPONEX_BonusConversion_Calculated", 1)
AND
NOT DB_LLWEAPONEX_BonusConversion_Temp_CalculateAfterUnequip(_Player, _Weapon)
AND
DB_LLWEAPONEX_BonusConversion_WeaponTags(_Tag, _ConversionStatus)
AND
IsTagged(_Weapon, _Tag, 1)
AND
NOT LLWEAPONEX_BonusConversion_QRY_BonusVariableSet(_Weapon, _ConversionStatus)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:BonusConversion:ProcBlockUseOfItem] Player is equipping item with conversion status [",_ConversionStatus,"]. Precalculating bonuses.");
DB_LLWEAPONEX_BonusConversion_Temp_WeaponStatus(_Player, _Weapon, _ConversionStatus);
LLWEAPONEX_BonusConversion_PreCalculateWeaponBonus(_Player, _Weapon, _ConversionStatus);

IF
CharacterUsedItemFailed(_Player, _Weapon)
AND
DB_LLWEAPONEX_BonusConversion_Temp_PreBonus(_Player, _Weapon, _ConversionStatus, _Bonus)
THEN
NOT DB_LLWEAPONEX_BonusConversion_Temp_PreBonus(_Player, _Weapon, _ConversionStatus, _Bonus);

IF
CharacterUsedItemFailed(_Player, _Weapon)
AND
DB_LLWEAPONEX_BonusConversion_Temp_CurrentConversionValue(_Player, _Weapon, _ConversionStatus, _ActualBase)
THEN
NOT DB_LLWEAPONEX_BonusConversion_Temp_CurrentConversionValue(_Player, _Weapon, _ConversionStatus, _ActualBase);

PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Player, (ITEMGUID)_Item, (STRING)_Template)
AND
IsTagged(_Item, "LLWEAPONEX_BonusConversion_Enabled", 1)
AND
NOT DB_LLWEAPONEX_BonusConversion_Temp_WeaponStatus(_Player, _Item, _)
AND
GetVarInteger(_Item, "LLWEAPONEX_BonusConversion_Calculated", 1)
AND
DB_LLWEAPONEX_BonusConversion_WeaponTags(_Tag, _ConversionStatus)
AND
IsTagged(_Item, _Tag, 1)
THEN
DB_LLWEAPONEX_BonusConversion_Temp_WeaponStatus(_Player, _Item, _ConversionStatus);

PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Player, (ITEMGUID)_Item, (STRING)_Template)
AND
DB_LLWEAPONEX_BonusConversion_Temp_WeaponStatus(_Player, _Item, _ConversionStatus)
THEN
//Delay slightly so the Unequip event can run if needed.
LeaderLib_Timers_StartCharacterItemTimer(_Player, _Item, 150, "LLWEAPONEX_Timers_BonusConversion_CalculateBonusDifference_", "LLWEAPONEX_BonusConversion_CalculateBonusDifference");

IF
ItemUnEquipped(_Weapon, _Player)
AND
DB_LLWEAPONEX_BonusConversion_Temp_WeaponBonus(_Player, _Weapon, _ConversionStatus, _WeaponBonus)
AND
DB_LLWEAPONEX_BonusConversion_Vars(_Type, _ConversionStatus, _StatToCheck, _StatToConvertTo)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:BonusConversion:ItemUnEquipped] Bonus conversion item was unequipped. Removing bonus [",_ConversionStatus,"].");
NOT DB_LLWEAPONEX_BonusConversion_Temp_WeaponBonus(_Player, _Weapon, _ConversionStatus, _WeaponBonus);
LLWEAPONEX_BonusConversion_RemoveBonus(_Player, _Type, _StatToCheck, _StatToConvertTo, _WeaponBonus);
//LeaderLib_Timers_StartCharacterItemTimer(_Player, _Weapon, 50, "LLWEAPONEX_Timers_BonusConversion_RemoveBonuses_", "LLWEAPONEX_BonusConversion_RemoveBonusesFromWeapon");

IF
ItemUnEquipped(_OtherWeapon, _Player)
AND
DB_LLWEAPONEX_BonusConversion_Temp_CalculateAfterUnequip(_Player, _Weapon)
AND
_Weapon != _OtherWeapon
AND
DB_LLWEAPONEX_BonusConversion_WeaponTags(_Tag, _ConversionStatus)
AND
IsTagged(_Weapon, _Tag, 1)
AND
NOT LLWEAPONEX_BonusConversion_QRY_BonusVariableSet(_Weapon, _ConversionStatus)
THEN
NOT DB_LLWEAPONEX_BonusConversion_Temp_CalculateAfterUnequip(_Player, _Weapon);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:BonusConversion:ItemUnEquipped] Precalculating bonuses now that the previous weapon was unequipped.");
DB_LLWEAPONEX_BonusConversion_Temp_WeaponStatus(_Player, _Weapon, _ConversionStatus);
LLWEAPONEX_BonusConversion_PreCalculateWeaponBonus(_Player, _Weapon, _ConversionStatus);

EXITSECTION
ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_03_GameScripts"