Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLWEAPONEX_ToggledScripts_RegisterOnce();
KBSECTION
PROC
LLWEAPONEX_ToggledScripts_RegisterOnce()
AND
LLWEAPONEX_ToggleSettings_QRY_RegisterOnce_Tag("LLWEAPONEX_80_02_Grimoire_Death", "LLWEAPONEX_Grimoire_Death")
THEN
GoalCompleted;

//REGION TORMENT_BONUS
PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement, "Death")
AND
ObjectIsCharacter(_Target, 1)
AND
HasActiveStatus(_Caster, "UNSHEATHED", _Unsheathed)
THEN
LLWEAPONEX_Grimoire_ReceiveBeamFX(_Caster, _Target, "LLWEAPONEX_FX_Status_Torment_Beam_01", "Dummy_BodyFX", _Unsheathed);
ApplyStatus(_Target, "LLWEAPONEX_TORMENT", 0.0, 0, _Caster);

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement, "Death")
AND
ObjectIsItem(_Target, 1)
AND
HasActiveStatus(_Caster, "UNSHEATHED", _Unsheathed)
THEN
LLWEAPONEX_Grimoire_ReceiveBeamFX(_Caster, _Target, "LLWEAPONEX_FX_Status_Torment_Beam_01", "Dummy_Root", _Unsheathed);
ApplyStatus(_Target, "LLWEAPONEX_TORMENT", 0.0, 0, _Caster);

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement, "Death")
THEN
SetVarFloat3(_Caster, "LLWEAPOENX_GrimoireTargetPosition", _x, _y, _z);
SetStoryEvent(_Caster, "LLWEAPONEX_Grimoire_TormentExplode");

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_TORMENT", (CHARACTERGUID)_Caster)
AND
LeaderLib_Random_QRY(999)
AND
DB_LeaderLib_Random(_Roll)
AND
_Roll > 0
AND
DB_LLWEAPONEX_Grimoire_TormentDebuff(_MinRoll, _MaxRoll, _Status, _Duration)
AND
_Roll >= _MinRoll
AND
_Roll <= _MaxRoll
THEN
ApplyStatus(_Target, _Status, _Duration, 0, _Caster);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_TORMENT", (CHARACTERGUID)_Caster)
THEN
CharacterStatusText(_Target, "LLWEAPONEX_Status_Torment_Applied");
//END_REGION

//REGION DEATH_AURA
IF
CharacterStatusApplied(_Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_BONUS", (CHARACTERGUID)_Source)
THEN
SetTag(_Character, "LLWEAPONEX_DeathAura_ListenForDeath");
SetVarObject(_Character, "LLWEAPONEX_DeathAura_Source", _Source);

IF
CharacterStatusApplied(_Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_SOUL_BOMB", (CHARACTERGUID)_Source)
THEN
SetTag(_Character, "LLWEAPONEX_DeathAura_ListenForDeath");
SetVarObject(_Character, "LLWEAPONEX_DeathAura_Source", _Source);

IF
CharacterStatusRemoved(_Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_BONUS", _)
THEN
ClearTag(_Character, "LLWEAPONEX_DeathAura_ListenForDeath");
ClearVarObject(_Character, "LLWEAPONEX_DeathAura_Source");

IF
CharacterStatusRemoved(_Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_SOUL_BOMB", _)
THEN
ClearTag(_Character, "LLWEAPONEX_DeathAura_ListenForDeath");
ClearVarObject(_Character, "LLWEAPONEX_DeathAura_Source");

IF
CharacterStatusApplied(_Character, "LLWEAPONEX_TORMENT_CLAIMSOUL", (CHARACTERGUID)_Source)
THEN
SetTag(_Character, "LLWEAPONEX_Torment_SoulClaimed");
SetVarObject(_Character, "LLWEAPONEX_Torment_Claimer", _Source);

IF
CharacterStatusRemoved(_Character, "LLWEAPONEX_TORMENT_CLAIMSOUL", _)
THEN
ClearTag(_Character, "LLWEAPONEX_Torment_SoulClaimed");
ClearVarObject(_Character, "LLWEAPONEX_Torment_Claimer");
//END_REGION

//REGION DEATH_EVENTS
IF
CharacterPrecogDying(_Character)
AND
IsTagged(_Character, "LLWEAPONEX_DeathAura_ListenForDeath", 1)
AND
GetVarObject(_Character, "LLWEAPONEX_DeathAura_Source", (CHARACTERGUID)_Source)
THEN
LLWEAPONEX_Grimoire_DeathAura_OnCharacterDying(_Character, _Source);

PROC
LLWEAPONEX_Grimoire_DeathAura_OnCharacterDying((CHARACTERGUID)_Character, (CHARACTERGUID)_Source)
AND
LeaderLib_Helper_QRY_HasStatus(_Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_SOUL_BOMB")
THEN
DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_SOUL_BOMB");

PROC
LLWEAPONEX_Grimoire_DeathAura_OnCharacterDying((CHARACTERGUID)_Character, (CHARACTERGUID)_Source)
AND
LeaderLib_Helper_QRY_HasStatus(_Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_BONUS")
THEN
DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_BONUS");

PROC
LLWEAPONEX_Grimoire_DeathAura_OnCharacterDying((CHARACTERGUID)_Character, (CHARACTERGUID)_Source)
AND
LeaderLib_Helper_QRY_HasStatus(_Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_BONUS")
THEN
DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_BONUS");

IF
CharacterPrecogDying(_Character)
AND
IsTagged(_Character, "LLWEAPONEX_Torment_SoulClaimed", 1)
AND
GetVarObject(_Character, "LLWEAPONEX_Torment_Claimer", (CHARACTERGUID)_Source)
THEN
DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, "LLWEAPONEX_TORMENT_CLAIMSOUL");

IF
DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, _Status)
THEN
ProcObjectTimerCancel(_Character, "LLWEAPONEX_Timers_Grimoire_DeathAuraDyingTimeout");
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_Grimoire_DeathAuraDyingTimeout", 2500);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_Grimoire_DeathAuraDyingTimeout")
AND
DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, _Status)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, _Status);

IF
CharacterDied(_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_SOUL_BOMB")
AND
CharacterGetEquippedItem(_Source, "Shield", (ITEMGUID)_Grimoire)
AND
_Grimoire != NULL_00000000-0000-0000-0000-000000000000
AND
GetTemplate(_Grimoire, "WPN_UNIQUE_LLWEAPONEX_Grimoire_Death_3ef2d9c5-13e3-48a2-ab11-36f118ec7e67")
THEN
ItemAddCharges(_Grimoire, 1);
NOT DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_SOUL_BOMB");

IF
CharacterDied(_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_BONUS")
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, "LLWEAPONEX_GRIMOIRE_DEATH_AURA_BONUS");
LLWEAPONEX_Statuses_CreateRevenant(_Character, _Source, "LLWEAPONEX_TormentedGhost_a3dba759-c3b6-4108-9b71-a7d5ccab9b1a", " (Ghost)", "LLWEAPONEX_TORMENTED_GHOST", 18.0);

IF
CharacterDied(_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Revenant, _Character, "LLWEAPONEX_TORMENT_CLAIMSOUL")
AND
DB_LLWEAPONEX_Statuses_Temp_Revenants(_DeadCharacter, _Revenant, _AuraSource, "LLWEAPONEX_TORMENTED_GHOST")
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Revenant, _Character, "LLWEAPONEX_TORMENT_CLAIMSOUL");
CharacterResurrect(_DeadCharacter);

IF
CharacterDied(_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, _Status)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_DeathEvent(_Source, _Character, _Status);

PROC
LLWEAPONEX_Statuses_OnRevenantCreated((CHARACTERGUID)_Revenant, (CHARACTERGUID)_Target, (CHARACTERGUID)_Source, "LLWEAPONEX_TORMENTED_GHOST")
THEN
CharacterAddToPlayerCharacter(_Revenant, _Target);

PROC
LLWEAPONEX_Statuses_OnRevenantDied((CHARACTERGUID)_Revenant, (CHARACTERGUID)_Target, (CHARACTERGUID)_Source, "LLWEAPONEX_TORMENTED_GHOST")
THEN
LLWEAPONEX_Statuses_RemoveRevenant(_Revenant);

IF
CharacterKilledBy(_Enemy, _, _Revenant)
AND
DB_LLWEAPONEX_Statuses_Temp_Revenants(_Character, _Revenant, _Source, "LLWEAPONEX_TORMENTED_GHOST")
AND
_Revenant != _Enemy
THEN
CharacterResurrect(_Character);
//END_REGION

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_80_ToggledScripts"