Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLWEAPONEX_WeaponMastery_InitSettings();
KBSECTION

//REGION SETTINGS

PROC
LLWEAPONEX_WeaponMastery_InitSettings()
THEN
//DB_LLWEAPONEX_WeaponMastery_BonusStatus(_Level, _Status)
DB_LLWEAPONEX_WeaponMastery_BonusStatus(1, "LLWEAPONEX_MASTERYBONUS1");
DB_LLWEAPONEX_WeaponMastery_BonusStatus(2, "LLWEAPONEX_MASTERYBONUS2");
DB_LLWEAPONEX_WeaponMastery_BonusStatus(3, "LLWEAPONEX_MASTERYBONUS3");
DB_LLWEAPONEX_WeaponMastery_BonusStatus(4, "LLWEAPONEX_MASTERYBONUS4");

DB_LLWEAPONEX_WeaponMastery_NoBonusStatus("LLWEAPONEX_Pistol");
//END_REGION

//REGION INIT_MASTERIES
PROC
LLWEAPONEX_WeaponMastery_InitSettings()
THEN
DB_NOOP(1);

/*
DB_LLWEAPONEX_WeaponMastery_StatusUnlocking("LLWEAPONEX_Runeblade", "PoisonBurst", "LLWEAPONEX_ACTIVATE_RUNEBLADE_POISON",          "LLWEAPONEX_RUNEBLADE_MASTERY_POISON");
DB_LLWEAPONEX_WeaponMastery_StatusUnlocking("LLWEAPONEX_Runeblade", "PoisonBurst", "LLWEAPONEX_ACTIVATE_RUNEBLADE_CONTAMINATION",   "LLWEAPONEX_RUNEBLADE_MASTERY_POISON");
DB_LLWEAPONEX_WeaponMastery_StatusUnlocking("LLWEAPONEX_Runeblade", "PoisonBurst", "LLWEAPONEX_ACTIVATE_RUNEBLADE_VENOM",           "LLWEAPONEX_RUNEBLADE_MASTERY_POISON");
*/
/*
DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_DualShields", "Cover", "Target_LLWEAPONEX_ShieldCover");
DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_DualShields", "ShieldPrison", "Target_LLWEAPONEX_ShieldPrison");
DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_DualShields", "IronMaiden", "Target_LLWEAPONEX_IronMaiden");

DB_LLWEAPONEX_WeaponMastery_SkillRequirements("LLWEAPONEX_Firearm", "Blunderbuss_Cannonball", "LLWEAPONEX_BlunderbussEquipped", "Tag");
DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_Firearm", "ElementalBullets", "Target_LLWEAPONEX_ElementalBullets");
DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_Firearm", "Blunderbuss_Cannonball", "Zone_LLWEAPONEX_Blunderbuss_Cannonball");
DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_Greatbow", "FutureBarrage", "Target_LLWEAPONEX_Greatbow_FutureBarrage");
DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_HandCrossbow", "Assassinate", "Projectile_LLWEAPONEX_HandCrossbow_Assassinate");

DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_Katana", "Iaido", "Rush_LLWEAPONEX_Katana_Iaido");
DB_LLWEAPONEX_WeaponMastery_Progression("LLWEAPONEX_Katana", 1, "Combo", "Tag");
DB_LLWEAPONEX_WeaponMastery_Flags("LLWEAPONEX_Katana", "Combo", "LLWEAPONEX_Katana_ComboEnabled", "Tag");

DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_Quarterstaff", "LegSweep", "Shout_LLWEAPONEX_LegSweep");

//DB_LLWEAPONEX_WeaponMastery_Progression("LLWEAPONEX_Rapier", 1, "DuelistStance", "Any"); // Added when the offhand is empty
DB_LLWEAPONEX_WeaponMastery_Progression("LLWEAPONEX_Rapier", 2, "SuckerCombo", "Tag"); // Added when Sucker Punch is used
//DB_LLWEAPONEX_WeaponMastery_Progression("LLWEAPONEX_Rapier", 3, "FlickerStrike", "Any");

//DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_Rapier", "DuelistStance", "Shout_LLWEAPONEX_Rapier_DuelistStance");
DB_LLWEAPONEX_WeaponMastery_Flags("LLWEAPONEX_Rapier", "SuckerCombo", "LLWEAPONEX_Rapier_SuckerComboEnabled", "Tag");
//DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_Rapier", "FlickerStrike", "MultiStrike_LLWEAPONEX_Rapier_FlickerStrike");

//Statuses applied by mastery skills that should be removed when the mastery is inactive
DB_LLWEAPONEX_WeaponMastery_MasteryOnlyStatuses("LLWEAPONEX_Rapier", "DuelistStance", "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST");
DB_LLWEAPONEX_WeaponMastery_MasteryOnlyStatuses("LLWEAPONEX_Rapier", "SuckerCombo", "LLWEAPONEX_WS_RAPIER_SUCKERCOMBO1");
DB_LLWEAPONEX_WeaponMastery_MasteryOnlyStatuses("LLWEAPONEX_Rapier", "SuckerCombo", "LLWEAPONEX_WS_RAPIER_SUCKERCOMBO2");

//DB_LLWEAPONEX_WeaponMastery_Progression("LLWEAPONEX_Runeblade", 1, "RunicReverb", "Any");
DB_LLWEAPONEX_WeaponMastery_Progression("LLWEAPONEX_Runeblade", 1, "PoisonBurst", "Status");

DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_Runeblade", "RunicReverb", "Shout_LLWEAPONEX_Runeblade_RunicReverb");
DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_Runeblade", "PoisonBurst", "Target_LLWEAPONEX_Runeblade_PoisonBurst");

DB_LLWEAPONEX_WeaponMastery_MasteryOnlyStatuses("LLWEAPONEX_Runeblade", "PoisonBurst", "LLWEAPONEX_RUNEBLADE_MASTERY_POISON");

//DB_LLWEAPONEX_WeaponMastery_Progression("LLWEAPONEX_ThrowingAbility", 1, "ThrowWeapon", "Any");
DB_LLWEAPONEX_WeaponMastery_Skills("LLWEAPONEX_ThrowingAbility", "ThrowWeapon", "Projectile_LLWEAPONEX_ThrowWeapon");
*/
//END_REGION

//REGION UPDATES
PROC
LeaderLib_Mods_OnVersionChanged(c60718c3-ba22-4702-9c5d-5ad92b41ba5f, (INTEGER)_LastVersion, (INTEGER)_NextVersion)
AND
_LastVersion < 152502272
THEN
/* The great purge. */
//DB_LLWEAPONEX_WeaponMastery_MasteryVariables(_Mastery, _CurrentXPVar, _LevelVar, _EnabledFlag)
SysClear("DB_LLWEAPONEX_WeaponMastery_MasteryVariables", 4);
//DB_LLWEAPONEX_WeaponMastery_MasteryLevelTags(_Mastery, _Level, _UnlockedMasteryLevelTag)
SysClear("DB_LLWEAPONEX_WeaponMastery_MasteryLevelTags", 3);
SysClear("DB_LLWEAPONEX_WeaponMastery_MasteryCap", 1);
SysClear("DB_LLWEAPONEX_WeaponMastery_MaxExperience", 2);
//DB_LLWEAPONEX_WeaponMastery_Progression("LLWEAPONEX_Katana", 1, "Finisher", "Tag");
//DB_LLWEAPONEX_WeaponMastery_Flags("LLWEAPONEX_Katana", "Finisher", "LLWEAPONEX_Katana_FinisherEnabled", "Tag");
SysClear("DB_LLWEAPONEX_WeaponMastery_Progression", 4);
SysClear("DB_LLWEAPONEX_WeaponMastery_Flags", 4);
LLWEAPONEX_WeaponMastery_InitSettings();
//END_REGION

//REGION QUERIES
QRY
LLWEAPONEX_WeaponMastery_QRY_HasMasteryRank((CHARACTERGUID)_Player, (STRING)_Mastery, (INTEGER)_MinLevel)
AND
DB_LLWEAPONEX_WeaponMastery_PlayerData_Experience(_Player, _Mastery, _Level, _Experience)
AND
_Level >= _MinLevel
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_WeaponMastery_QRY_HasActiveMastery((CHARACTERGUID)_Player, (STRING)_Mastery)
AND
DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _Item, _Mastery)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_WeaponMastery_QRY_HasAnyActiveMastery((CHARACTERGUID)_Player)
AND
DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _Item, _Mastery)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_CanGrantExperience((CHARACTERGUID)_Target)
AND
CharacterIsSummon(_Target, 0)
AND
LeaderLib_Party_QRY_IsEnemyOfParty(_Target)
AND
NOT LeaderLib_Helper_QRY_IgnoreCharacter(_Target)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_CanGrantExperience((CHARACTERGUID)_Target, (CHARACTERGUID)_Player)
AND
DB_IsPlayer(_Player)
AND
CharacterIsEnemy(_Player, _Target, 1)
AND
CharacterIsSummon(_Target, 0)
AND
NOT LeaderLib_Helper_QRY_IgnoreCharacter(_Target)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_CanGrantExperience((CHARACTERGUID)_Target, (CHARACTERGUID)_Player, (INTEGER)_CombatID)
AND
CharacterIsSummon(_Target, 0)
AND
CharacterIsEnemy(_Player, _Target, 1)
AND
NOT LeaderLib_Helper_QRY_IgnoreCharacter(_Target)
AND
CombatGetIDForCharacter(_Player, _CombatID)
THEN
DB_NOOP(1);
//END_REGION

//REGION ACTIVE_MASTERY_TRACKING
PROC
LLWEAPONEX_WeaponMastery_TrackMastery((CHARACTERGUID)_Player, (ITEMGUID)_Item, (STRING)_Mastery)
AND
NOT DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _, _Mastery)
THEN
LLWEAPONEX_WeaponMastery_OnMasteryActivated(_Player, _Mastery);

PROC
LLWEAPONEX_WeaponMastery_TrackMastery((CHARACTERGUID)_Player, (ITEMGUID)_Item, (STRING)_Mastery)
THEN
DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _Item, _Mastery);

PROC
LLWEAPONEX_WeaponMastery_RemovedTrackedMasteries((CHARACTERGUID)_Player, (ITEMGUID)_Item)
AND
DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _Item, _Mastery)
THEN
NOT DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _Item, _Mastery);
LLWEAPONEX_WeaponMastery_Internal_CheckRemovedMasteries(_Player, _Mastery);

PROC
LLWEAPONEX_WeaponMastery_Internal_CheckRemovedMasteries((CHARACTERGUID)_Player, (STRING)_Mastery)
AND
NOT DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _, _Mastery)
AND
IsTagged(_Player, _Mastery, 1)
THEN
ClearTag(_Player, _Mastery);
LLWEAPONEX_WeaponMastery_OnMasteryDeactivated(_Player, _Mastery);
//END_REGION

//REGION ACTIVATION_DEACTIVATION
PROC
LLWEAPONEX_WeaponMastery_OnMasteryActivated((CHARACTERGUID)_Player, (STRING)_Mastery)
AND
NOT DB_GlobalFlag("LLWEAPONEX_MasterySystemActive")
THEN
LeaderLib_ToggleScripts_EnableScript("LLWEAPONEX_MasterySystemActive", "WeaponExpansion");

PROC
LLWEAPONEX_WeaponMastery_OnMasteryDeactivated((CHARACTERGUID)_Player, (STRING)_Mastery)
AND
NOT DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _, _Mastery)
THEN
NRD_ModCall("WeaponExpansion", "OnMasteryDeactivated", (STRING)_Player, _Mastery);

PROC
LLWEAPONEX_WeaponMastery_OnMasteryDeactivated((CHARACTERGUID)_Player, (STRING)_Mastery)
AND
NOT DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_,_,_)
THEN
LeaderLib_ToggleScripts_DisableScriptAfterDelay("LLWEAPONEX_MasterySystemActive", "WeaponExpansion", 500);
//END_REGION

//REGION TOGGLE_SCRIPTS
PROC
LLWEAPONEX_WeaponMastery_OnMasteryActivated((CHARACTERGUID)_Player, (STRING)_Mastery)
AND
DB_LeaderLib_ToggleScripts_Registered(_GoalTitle, _Mastery, _IsTag)
THEN
LeaderLib_ToggleScripts_EnableScriptForObject(_Player, _Mastery, "WeaponExpansion");

PROC
LLWEAPONEX_WeaponMastery_OnMasteryDeactivated((CHARACTERGUID)_Player, (STRING)_Mastery)
AND
DB_LeaderLib_ToggleScripts_Registered(_GoalTitle, _Mastery, _IsTag)
THEN
LeaderLib_ToggleScripts_DisableScriptForObject(_Player, _Mastery, "WeaponExpansion");
//END_REGION

//REGION UNEQUIP_REMOVAL_EVENT
//Delay removal in case the same weapon type is being equipped
PROC
LLWEAPONEX_Equipment_OnTaggedItemUnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, (STRING)_Tag, (INTEGER)_IsPlayer)
AND
DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _Item, _Tag)
THEN
DB_LLWEAPONEX_WeaponMastery_Temp_DeactivatedMasteries(_Player, _Item, _Tag);
LeaderLib_Timers_StartObjectTimer(_Player, 1000, "Timers_LLWEAPONEX_WeaponMastery_MasteryDeactivated", "LLWEAPONEX_WeaponMastery_MasteryDeactivated");

PROC
LLWEAPONEX_Equipment_OnTaggedItemEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, (STRING)_Tag, (INTEGER)_IsPlayer)
AND
DB_LLWEAPONEX_WeaponMastery_Temp_DeactivatedMasteries(_Player, _Item, _Tag)
THEN
NOT DB_LLWEAPONEX_WeaponMastery_Temp_DeactivatedMasteries(_Player, _Item, _Tag);
LeaderLog_Log("DEBUG", "[LLWEAPONEX_01_Mastery__Main:LLWEAPONEX_Equipment_OnTaggedItemEquipped] Weapon Mastery [",_Tag,"] was reactivated. Removing from [DB_LLWEAPONEX_WeaponMastery_Temp_DeactivatedMasteries].");

IF
StoryEvent((CHARACTERGUID)_Player, "LLWEAPONEX_WeaponMastery_MasteryDeactivated")
AND
DB_LLWEAPONEX_WeaponMastery_Temp_DeactivatedMasteries(_Player, _Item, _Mastery)
AND
DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _Item, _Mastery)
AND
NOT LLWEAPONEX_WeaponMastery_QRY_HasActiveMastery(_Player, _Mastery)
THEN
NOT DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _Item, _Mastery);
NOT DB_LLWEAPONEX_WeaponMastery_Temp_DeactivatedMasteries(_Player, _Item, _Mastery);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:WeaponMastery:LLWEAPONEX_Timers_MasteryDeactivated] Weapon Mastery [",_Mastery,"] was deactivated.");
LLWEAPONEX_WeaponMastery_OnMasteryDeactivated(_Player, _Mastery);

IF
StoryEvent((CHARACTERGUID)_Player, "LLWEAPONEX_WeaponMastery_MasteryDeactivated")
AND
DB_LLWEAPONEX_WeaponMastery_Temp_DeactivatedMasteries(_Player, _Item, _Mastery)
AND
DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _Item, _Mastery)
THEN
NOT DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _Item, _Mastery);

IF
StoryEvent((CHARACTERGUID)_Player, "LLWEAPONEX_WeaponMastery_MasteryDeactivated")
AND
DB_LLWEAPONEX_WeaponMastery_Temp_DeactivatedMasteries(_Player, _Item, _Mastery)
THEN
NOT DB_LLWEAPONEX_WeaponMastery_Temp_DeactivatedMasteries(_Player, _Item, _Mastery);
//END_REGION

//REGION STORE_XP
PROC
LLWEAPONEX_WeaponMastery_Internal_StoreExperience((CHARACTERGUID)_Player, (STRING)_Mastery, (INTEGER)_Level, (INTEGER)_TotalExperience)
AND
DB_LLWEAPONEX_WeaponMastery_PlayerData_Experience(_Player, _Mastery, _LastLevel, _LastExperience)
THEN
NOT DB_LLWEAPONEX_WeaponMastery_PlayerData_Experience(_Player, _Mastery, _LastLevel, _LastExperience);

PROC
LLWEAPONEX_WeaponMastery_Internal_StoreExperience((CHARACTERGUID)_Player, (STRING)_Mastery, (INTEGER)_Level, (INTEGER)_TotalExperience)
THEN
DB_LLWEAPONEX_WeaponMastery_PlayerData_Experience(_Player, _Mastery, _Level, _TotalExperience);
//END_REGION

//REGION PARTY_WIDE_EXPERIENCE
PROC
LLWEAPONEX_WeaponMastery_AddPartyExperience((CHARACTERGUID)_PartyMember, (CHARACTERGUID)_Enemy, (REAL)_Gain)
AND
NOT DB_LLWEAPONEX_WeaponMastery_Temp_IteratingParty(_,_Enemy,_)
THEN
DB_LLWEAPONEX_WeaponMastery_Temp_IteratingParty(_PartyMember, _Enemy, _Gain);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:WeaponMastery:CharacterDying] Enemy died. Adding mastery experience to all party members.");
LeaderLib_Timers_StartObjectTimer(_Enemy, 250, "LLWEAPONEX_Timers_WeaponMastery_ClearPartyIteratorDB", "LLWEAPONEX_WeaponMastery_ClearPartyIteratorDB");
IterateParty(_PartyMember, "LLWEAPONEX_WeaponMastery_AddPartyExperience");

IF
StoryEvent((CHARACTERGUID)_Enemy, "LLWEAPONEX_WeaponMastery_ClearPartyIteratorDB")
AND
DB_LLWEAPONEX_WeaponMastery_Temp_IteratingParty(_PartyMember, _Enemy, _Gain)
THEN
NOT DB_LLWEAPONEX_WeaponMastery_Temp_IteratingParty(_PartyMember, _Enemy, _Gain);

IF
StoryEvent((CHARACTERGUID)_Player, "LLWEAPONEX_WeaponMastery_AddPartyExperience")
AND
NOT QRY_IsSummonOrPartyFollower(_Player)
AND
DB_LLWEAPONEX_WeaponMastery_Temp_IteratingParty(_PartyMember, _Enemy, _Gain)
AND
CharacterIsInPartyWith(_Player, _PartyMember, 1)
AND
IsBoss(_Enemy, _IsBoss)
AND
Real(_IsBoss, _IsBossReal)
AND
RealProduct(_IsBossReal, 2.0, _BossMult) // 2x exp for bosses
AND
RealSum(_Gain, _BossMult, _ExpGain)
THEN
LLWEAPONEX_Ext_AddMasteryExperienceForAllActive(_Player, _ExpGain);
//END_REGION

//REGION EXPERIENCE_LISTENING_RESET
PROC
LLWEAPONEX_WeaponMastery_TS_RemoveListenEntries()
AND
DB_LLWEAPONEX_WeaponMastery_Temp_ListenForSkillDamage((CHARACTERGUID)_Player, (STRING)_Mastery)
THEN
NOT DB_LLWEAPONEX_WeaponMastery_Temp_ListenForSkillDamage(_Player, _Mastery);
//END_REGION

//REGION STATUS_UNLOCKING
PROC
LLWEAPONEX_WeaponMastery_ApplyInfoStatus((CHARACTERGUID)_Player, (STRING)_Status, (STRING)_InfoStatus, 0)
AND
_InfoStatus != ""
AND
HasActiveStatus(_Player, _InfoStatus, 0)
AND
GetStatusTurns(_Player, _Status, _Turns)
AND
Real(_Turns, _TurnsR)
AND
RealProduct(_TurnsR, 6.0, _Duration)
THEN
ApplyStatus(_Player, _InfoStatus, _Duration, 1, _Player);

PROC
LLWEAPONEX_WeaponMastery_ApplyInfoStatus((CHARACTERGUID)_Player, (STRING)_Status, (STRING)_InfoStatus, 1)
AND
_InfoStatus != ""
AND
GetStatusTurns(_Player, _Status, _Turns)
AND
Real(_Turns, _TurnsR)
AND
RealProduct(_TurnsR, 6.0, _Duration)
THEN
ApplyStatus(_Player, _InfoStatus, _Duration, 1, _Player);

/*
QRY
LLWEAPONEX_WeaponMastery_QRY_HasAnySkillUnlockStatus((CHARACTERGUID)_Player, (STRING)_Mastery, (STRING)_SkillID)
AND
DB_LLWEAPONEX_WeaponMastery_StatusUnlocking(_Mastery, _SkillID, _Status, _InfoStatus)
AND
HasActiveStatus(_Player, _Status, 1)
THEN
DB_NOOP(1);
*/

QRY
LLWEAPONEX_WeaponMastery_QRY_RemoveInfoStatus((CHARACTERGUID)_Player, (STRING)_Mastery, (STRING)_SkillID, (STRING)_InfoStatus)
THEN
LLWEAPONEX_WeaponMastery_RemoveInfoStatus(_Player, _Mastery, _SkillID, _InfoStatus);

PROC
LLWEAPONEX_WeaponMastery_RemoveInfoStatus((CHARACTERGUID)_Player, (STRING)_Mastery, (STRING)_SkillID, (STRING)_InfoStatus)
AND
_InfoStatus != ""
//AND
//NOT LLWEAPONEX_WeaponMastery_QRY_HasAnySkillUnlockStatus(_Player, _Mastery, _SkillID)
THEN
RemoveStatus(_Player, _InfoStatus);
//END_REGION

//REGION BONUS_STATUS
PROC
LLWEAPONEX_WeaponMastery_ApplyBonusStatus((CHARACTERGUID)_Player)
AND
DB_LLWEAPONEX_WeaponMastery_Temp_ActiveMasteries(_Player, _Item, _Mastery)
THEN
LLWEAPONEX_WeaponMastery_ApplyBonusStatus(_Player, _Mastery);

PROC
LLWEAPONEX_WeaponMastery_ApplyBonusStatus((CHARACTERGUID)_Player, (STRING)_Mastery)
AND
DB_LLWEAPONEX_WeaponMastery_PlayerData_Experience(_Player, _Mastery, _CurrentLevel, _Experience)
THEN
LLWEAPONEX_WeaponMastery_ApplyBonusStatus(_Player, _Mastery, _CurrentLevel);

PROC
LLWEAPONEX_WeaponMastery_ApplyBonusStatus((CHARACTERGUID)_Player, (STRING)_Mastery, (INTEGER)_CurrentLevel)
AND
NOT DB_LLWEAPONEX_WeaponMastery_NoBonusStatus(_Mastery)
AND
DB_LLWEAPONEX_WeaponMastery_BonusStatus(_CurrentLevel, _Status)
AND
HasActiveStatus(_Player, _Status, 0)
THEN
ApplyStatus(_Player, _Status, -1.0, 1, _Player);

PROC
LLWEAPONEX_WeaponMastery_OnMasteryActivated((CHARACTERGUID)_Player, (STRING)_Mastery)
THEN
LLWEAPONEX_WeaponMastery_ApplyBonusStatus(_Player, _Mastery);

PROC
LLWEAPONEX_WeaponMastery_OnMasteryLeveledUp((CHARACTERGUID)_Player, (STRING)_Mastery, (INTEGER)_MasteryLevel)
AND
LLWEAPONEX_WeaponMastery_QRY_HasActiveMastery(_Player, _Mastery)
THEN
LLWEAPONEX_WeaponMastery_ApplyBonusStatus(_Player, _Mastery, _MasteryLevel);

PROC
LLWEAPONEX_WeaponMastery_ClearBonusStatus((CHARACTERGUID)_Player)
AND
DB_LLWEAPONEX_WeaponMastery_BonusStatus(_Level, _Status)
THEN
RemoveStatus(_Player, _Status);

PROC
LLWEAPONEX_WeaponMastery_OnMasteryDeactivated((CHARACTERGUID)_Player, (STRING)_Mastery)
THEN
LLWEAPONEX_WeaponMastery_ClearBonusStatus(_Player);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_00_PostCC"