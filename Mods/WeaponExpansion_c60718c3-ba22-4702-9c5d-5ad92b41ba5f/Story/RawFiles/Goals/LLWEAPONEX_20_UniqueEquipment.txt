Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLWEAPONEX_Uniques_InitSettings();
KBSECTION

//REGION SETTINGS
PROC
LLWEAPONEX_Uniques_InitSettings()
THEN
DB_LLWEAPONEX_Uniques_BurialBlade((ITEMGUID)S_WPN_UNIQUE_LLWEAPONEX_Scythe_2H_BurialBlade_A_eef48291-e974-4899-9017-26f23da50c73, (ITEMGUID)S_WPN_UNIQUE_LLWEAPONEX_BurialBlade_Mainhand_A_3699038c-b403-4f7d-81c0-7c1fbe628f6d, (ITEMGUID)S_WPN_UNIQUE_LLWEAPONEX_BurialBlade_Offhand_A_47d716e9-ead0-45b2-9dc8-0ad841737183);

//END_REGION

//REGION BURIAL_BLADE_SWAP
QRY
LLWEAPONEX_Uniques_QRY_PrepareBurialBlade((ITEMGUID)_Mainhand)
AND
NOT DB_LLWEAPONEX_Uniques_BurialBlade(_, _Mainhand, _)
AND
GetPosition(ITEMGUID_S_LLWEAPONEX_Chest_ItemHolder_A_80976258-a7a5-4430-b102-ba91a604c23f, _x, _y, _z)
AND
CreateItemTemplateAtPosition("WPN_UNIQUE_LLWEAPONEX_Scythe_2H_BurialBlade_A_e955f532-3e2c-41e7-b834-c53a50d4708c", _x, _y, _z, _Scythe)
AND
CreateItemTemplateAtPosition("WPN_UNIQUE_LLWEAPONEX_Shield_1H_BurialBlade_Offhand_A_a7512f1c-3c94-4b91-8d20-2580343e1cac", _x, _y, _z, _Offhand)
THEN
ItemToInventory(_Scythe, ITEMGUID_S_LLWEAPONEX_Chest_ItemHolder_A_80976258-a7a5-4430-b102-ba91a604c23f, 1, 0, 0);
ItemToInventory(_Offhand, ITEMGUID_S_LLWEAPONEX_Chest_ItemHolder_A_80976258-a7a5-4430-b102-ba91a604c23f, 1, 0, 0);
DB_LLWEAPONEX_Uniques_BurialBlade(_Scythe, _Mainhand, _Offhand);

QRY
LLWEAPONEX_Uniques_QRY_PrepareBurialBlade((ITEMGUID)_Mainhand)
AND
DB_LLWEAPONEX_Uniques_BurialBlade(_Scythe, _Mainhand, _Offhand)
THEN
DB_NOOP(1);

PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Sword_1H_BurialBlade_Mainhand_A_0f42e70c-5b1b-4a8f-9f3e-e462e2f70850")
THEN
LLWEAPONEX_AnimationSetOverride_Clear(_Char);
LeaderLib_Tags_ClearPreservedTag(_Char, "LLWEAPONEX_BurialBladeEquipped");
ObjectClearFlag(_Char, "LLWEAPONEX_BurialBladeEquipped_Blade", 0);

PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_BurialBlade_A_e955f532-3e2c-41e7-b834-c53a50d4708c")
THEN
LeaderLib_Tags_ClearPreservedTag(_Char, "LLWEAPONEX_BurialBladeEquipped");
ObjectClearFlag(_Char, "LLWEAPONEX_BurialBladeEquipped_Scythe", 0);

PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Sword_1H_BurialBlade_Mainhand_A_0f42e70c-5b1b-4a8f-9f3e-e462e2f70850")
THEN
LLWEAPONEX_AnimationSetOverride_Set(_Char, "LLWEAPONEX_Override1");
LeaderLib_Tags_PreserveTag(_Char, "LLWEAPONEX_BurialBladeEquipped");
ObjectSetFlag(_Char, "LLWEAPONEX_BurialBladeEquipped_Blade", 0);

PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_BurialBlade_A_e955f532-3e2c-41e7-b834-c53a50d4708c")
THEN
LeaderLib_Tags_PreserveTag(_Char, "LLWEAPONEX_BurialBladeEquipped");
ObjectSetFlag(_Char, "LLWEAPONEX_BurialBladeEquipped_Scythe", 0);

PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Mainhand, "WPN_UNIQUE_LLWEAPONEX_Sword_1H_BurialBlade_Mainhand_A_0f42e70c-5b1b-4a8f-9f3e-e462e2f70850")
AND
LLWEAPONEX_Uniques_QRY_PrepareBurialBlade(_Mainhand)
AND
DB_LLWEAPONEX_Uniques_BurialBlade(_Scythe, _Mainhand, _Offhand)
THEN
LeaderLib_Helper_UnequipInSlot(_Char, "Shield");
CharacterEquipItem(_Char, _Offhand);
ItemLockUnEquip(_Offhand, 1);

PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Mainhand, "WPN_UNIQUE_LLWEAPONEX_Sword_1H_BurialBlade_Mainhand_A_0f42e70c-5b1b-4a8f-9f3e-e462e2f70850")
AND
DB_LLWEAPONEX_Uniques_BurialBlade(_Scythe, _Mainhand, _Offhand)
THEN
ItemLockUnEquip(_Offhand, 0);
ItemToInventory(_Offhand, ITEMGUID_S_LLWEAPONEX_Chest_ItemHolder_A_80976258-a7a5-4430-b102-ba91a604c23f, 1, 0, 0);

IF
SkillCast(_Char, "Shout_LLWEAPONEX_BurialBlade_Transform", _, _)
AND
ObjectGetFlag(_Char, "LLWEAPONEX_BurialBladeEquipped_Blade", 1)
AND
LeaderLib_Helper_QRY_GetItemByTemplate(_Char, "WPN_UNIQUE_LLWEAPONEX_Sword_1H_BurialBlade_Mainhand_A_0f42e70c-5b1b-4a8f-9f3e-e462e2f70850")
AND
DB_LeaderLib_Helper_Temp_ItemFound(_Char, "WPN_UNIQUE_LLWEAPONEX_Sword_1H_BurialBlade_Mainhand_A_0f42e70c-5b1b-4a8f-9f3e-e462e2f70850", _Mainhand)
AND
LLWEAPONEX_Uniques_QRY_PrepareBurialBlade(_Mainhand)
AND
DB_LLWEAPONEX_Uniques_BurialBlade(_Scythe, _Mainhand, _Offhand)
THEN
NOT DB_LeaderLib_Helper_Temp_ItemFound(_Char, "WPN_UNIQUE_LLWEAPONEX_Sword_1H_BurialBlade_Mainhand_A_0f42e70c-5b1b-4a8f-9f3e-e462e2f70850", _Mainhand);
CharacterUnequipItem(_Char, _Mainhand);
CharacterUnequipItem(_Char, _Offhand);
ItemToInventory(_Mainhand, ITEMGUID_S_LLWEAPONEX_Chest_ItemHolder_A_80976258-a7a5-4430-b102-ba91a604c23f, 1, 0, 0);
ItemToInventory(_Offhand, ITEMGUID_S_LLWEAPONEX_Chest_ItemHolder_A_80976258-a7a5-4430-b102-ba91a604c23f, 1, 0, 0);
ItemToInventory(_Scythe, _Char, 1, 0, 1);
ItemSetOwner(_Scythe, _Char);
CharacterEquipItem(_Char, _Scythe);

IF
SkillCast(_Char, "Shout_LLWEAPONEX_BurialBlade_Transform", _, _)
AND
ObjectGetFlag(_Char, "LLWEAPONEX_BurialBladeEquipped_Scythe", 1)
AND
CharacterGetEquippedWeapon(_Char, (ITEMGUID)_Scythe)
AND
DB_LLWEAPONEX_Uniques_BurialBlade(_Scythe, _Mainhand, _Offhand)
THEN
CharacterUnequipItem(_Char, _Scythe);
ItemToInventory(_Scythe, ITEMGUID_S_LLWEAPONEX_Chest_ItemHolder_A_80976258-a7a5-4430-b102-ba91a604c23f, 1, 0, 0);
ItemToInventory(_Mainhand, _Char, 1, 0, 0);
ItemToInventory(_Offhand, _Char, 1, 0, 0);
ItemSetOwner(_Mainhand, _Char);
ItemSetOwner(_Offhand, _Char);
CharacterEquipItem(_Char, _Mainhand);
CharacterEquipItem(_Char, _Offhand);
//END_REGION

//REGION UPDATES
PROC
LeaderUpdater_ModUpdated("WeaponExpansion", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 0, 9, 4, 10)
THEN
LLWEAPONEX_Uniques_InitSettings();
//END_REGION

//REGION BEHOLDER
PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Sword_2H_Beholder_A_1cc2baa1-cd58-40a3-8b53-89ef2e081616")
THEN
DB_LLWEAPONEX_Uniques_BeholderEquipped(_Char);

IF
CharacterStatusApplied(_Char, "UNSHEATHED", _)
AND
DB_LLWEAPONEX_Uniques_BeholderEquipped(_Char)
THEN
PROC_LoopEffect("LLWEAPONEX_FX_Overlay_Weapon_DarkEnergy_01", _Char, "LLWEAPONEX.FX.BeholderUnsheathed", "__ANY__", "Dummy_Root");
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:Unsheathed] Playing Beholder unsheathed loop effect on character.");

IF
CharacterStatusRemoved(_Char, "UNSHEATHED", _)
AND
DB_LLWEAPONEX_Uniques_BeholderEquipped(_Char)
THEN
PROC_StopLoopEffect(_Char, "LLWEAPONEX.FX.BeholderUnsheathed");
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:Sheathed] Stopping Beholder unsheathed loop effect on character.");

PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Sword_2H_Beholder_A_1cc2baa1-cd58-40a3-8b53-89ef2e081616")
AND
DB_LLWEAPONEX_Uniques_BeholderEquipped(_Char)
THEN
PROC_StopLoopEffect(_Char, "LLWEAPONEX.FX.BeholderUnsheathed");
NOT DB_LLWEAPONEX_Uniques_BeholderEquipped(_Char);
//END_REGION

//REGION FROSTDYNE_SKILLS
/*
IF
CharacterStatusApplied(_Char, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_INFO", _)
AND
CharacterGetLevel(_Char, _Level)
THEN
LLWEAPONEX_Uniques_FrostDyne_RemoveSkills(_Char);
LLWEAPONEX_Uniques_FrostDyne_AddSkills(_Char, _Level);

PROC
LLWEAPONEX_Uniques_FrostDyne_AddSkills((CHARACTERGUID)_Char, (INTEGER)_Level)
AND
_Level < 6
THEN
ApplyStatus(_Char, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_A", -1.0, 1, _Char);
DB_LLWEAPONEX_Uniques_Temp_FrostDyneActive(_Char, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_A");

PROC
LLWEAPONEX_Uniques_FrostDyne_AddSkills((CHARACTERGUID)_Char, (INTEGER)_Level)
AND
_Level >= 6
AND
_Level < 14
THEN
ApplyStatus(_Char, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_B", -1.0, 1, _Char);
DB_LLWEAPONEX_Uniques_Temp_FrostDyneActive(_Char, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_B");

PROC
LLWEAPONEX_Uniques_FrostDyne_AddSkills((CHARACTERGUID)_Char, (INTEGER)_Level)
AND
_Level >= 14
THEN
ApplyStatus(_Char, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_C", -1.0, 1, _Char);
DB_LLWEAPONEX_Uniques_Temp_FrostDyneActive(_Char, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_C");

IF
CharacterStatusRemoved(_Char, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_INFO", _)
THEN
LLWEAPONEX_Uniques_FrostDyne_RemoveSkills(_Char);

PROC
LLWEAPONEX_Uniques_FrostDyne_RemoveSkills((CHARACTERGUID)_Char)
AND
DB_LLWEAPONEX_Uniques_Temp_FrostDyneActive(_Char, _Status)
THEN
RemoveStatus(_Char, _Status);
NOT DB_LLWEAPONEX_Uniques_Temp_FrostDyneActive(_Char, _Status);

IF
CharacterLeveledUp(_Char)
AND
DB_LLWEAPONEX_Uniques_Temp_FrostDyneActive(_Char, _Status)
AND
CharacterGetLevel(_Char, _Level)
THEN
LLWEAPONEX_Uniques_FrostDyne_OnPlayerLeveledUp(_Char, _Level);

PROC
LLWEAPONEX_Uniques_FrostDyne_OnPlayerLeveledUp((CHARACTERGUID)_Char, 4)
THEN
LLWEAPONEX_Uniques_FrostDyne_RemoveSkills(_Char);
LLWEAPONEX_Uniques_FrostDyne_AddSkills(_Char, 4);

PROC
LLWEAPONEX_Uniques_FrostDyne_OnPlayerLeveledUp((CHARACTERGUID)_Char, 6)
THEN
LLWEAPONEX_Uniques_FrostDyne_RemoveSkills(_Char);
LLWEAPONEX_Uniques_FrostDyne_AddSkills(_Char, 6);

PROC
LLWEAPONEX_Uniques_FrostDyne_OnPlayerLeveledUp((CHARACTERGUID)_Char, 14)
THEN
LLWEAPONEX_Uniques_FrostDyne_RemoveSkills(_Char);
LLWEAPONEX_Uniques_FrostDyne_AddSkills(_Char, 14);
*/
//END_REGION

//REGION MURAMASA
PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Katana_Dagger_Sword_2H_Muramasa_4be8ec78-17ed-4f61-b3d8-96c260d1c80a")
THEN
LLWEAPONEX_Uniques_OnMuramasaEquipped(_Char);
LeaderLib_ToggleScripts_EnableScript("LLWEAPONEX_MuramasaEquipped", "WeaponExpansion");

PROC
LLWEAPONEX_Uniques_OnMuramasaEquipped((CHARACTERGUID)_Char)
AND
CharacterGetHitpointsPercentage(_Char, _HP)
AND
_HP <= 50
THEN
ApplyStatus(_Char, "LLWEAPONEX_MURAMASA_CURSE_WEAPONFX", -1.0, 0, _Char);

PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Katana_Dagger_Sword_2H_Muramasa_4be8ec78-17ed-4f61-b3d8-96c260d1c80a")
THEN
LLWEAPONEX_Uniques_OnMuramasaUnequipped(_Char);
LeaderLib_ToggleScripts_DisableScriptAfterDelay("LLWEAPONEX_MuramasaEquipped", "WeaponExpansion", 500);

PROC
LLWEAPONEX_Uniques_OnMuramasaUnequipped((CHARACTERGUID)_Char)
AND
LeaderLib_Helper_QRY_HasStatus(_Char, "LLWEAPONEX_MURAMASA_CURSE_WEAPONFX")
THEN
RemoveStatus(_Char, "LLWEAPONEX_MURAMASA_CURSE_WEAPONFX");
//END_REGION

//REGION DEMON_GAUNTLET
PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "EQ_UNIQUE_LLWEAPONEX_DemonGauntlet_Arms_A_f5d0a9b3-b83c-4b78-8bc6-a097a26ddf53")
THEN
LeaderLib_ToggleScripts_EnableScript("LLWEAPONEX_DemonGauntletEquipped", "WeaponExpansion");

PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "EQ_UNIQUE_LLWEAPONEX_DemonGauntlet_Arms_A_f5d0a9b3-b83c-4b78-8bc6-a097a26ddf53")
THEN
LLWEAPONEX_Uniques_OnDemonGauntletUnequipped(_Char);
LeaderLib_ToggleScripts_DisableScriptAfterDelay("LLWEAPONEX_DemonGauntletEquipped", "WeaponExpansion", 500);

PROC
LLWEAPONEX_Uniques_OnDemonGauntletUnequipped((CHARACTERGUID)_Char)
AND
LeaderLib_Helper_QRY_HasStatus(_Char, "LLWEAPONEX_DEMON_HAND_DEFENSE")
THEN
RemoveStatus(_Char, "LLWEAPONEX_DEMON_HAND_DEFENSE");

PROC
LLWEAPONEX_Uniques_OnDemonGauntletUnequipped((CHARACTERGUID)_Char)
AND
DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Char, _Target)
THEN
NOT DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Char, _Target);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_DEMON_HAND_HIT", (CHARACTERGUID)_Char)
THEN
LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Char, _Target);

PROC
LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath((CHARACTERGUID)_Char, (CHARACTERGUID)_Target)
AND
DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Char, _OtherTarget)
THEN
NOT DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Char, _OtherTarget);

PROC
LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath((CHARACTERGUID)_Char, (CHARACTERGUID)_Target)
THEN
DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Char, _Target);

PROC
LLWEAPONEX_Uniques_DemonGauntlet_OnDemonKilledTarget((CHARACTERGUID)_Target)
AND
DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Char, _Target)
THEN
NOT DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Char, _Target);
PlayEffect(_Char, "LLWEAPONEX_FX_Status_DemonHandDefense_Impact_Back_01", "Dummy_BackFX_R");
ApplyStatus(_Char, "LLWEAPONEX_DEMON_HAND_BONUS_CRIT", -1.0, 0, _Char);

IF
CharacterStatusRemoved(_Target, "LLWEAPONEX_DEMON_HAND_HIT", _)
AND
DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Char, _Target)
THEN
NOT DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Char, _Target);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLWEAPONEX_Timers_DemonGauntlet_RemoveCritBonus")
AND
HasActiveStatus(_Char, "LLWEAPONEX_DEMON_HAND_BONUS_CRIT", 1)
THEN
RemoveStatus(_Char, "LLWEAPONEX_DEMON_HAND_BONUS_CRIT");
//END_REGION

//REGION MAGIC_MISSILE_WAND_MODE
IF
ItemTemplateAddedToCharacter(WPN_UNIQUE_LLWEAPONEX_Wand_1H_MagicMissile_A_67ef34e7-5f50-4ef9-9e40-8c7c04884812, _Item, _Char)
AND
NOT LLWEAPONEX_Rods_QRY_SkillVarsSet(_Item)
AND
DB_LLWEAPONEX_Rods_Skills("LLWEAPONEX_ROD_MAGIC_MISSILE", _MainhandSkill, _OffhandSkill)
THEN
SetVarString(_Item, "LLWEAPONEX_Rod_Skill", _MainhandSkill);
SetVarString(_Item, "LLWEAPONEX_Rod_Skill_Offhand", _OffhandSkill);

IF
ItemTemplateAddedToCharacter(WPN_UNIQUE_LLWEAPONEX_Rod_1H_MagicMissile_A_1566e0f6-3718-40b4-a7ff-e2c07c3cbd96, _Item, _Char)
AND
NOT LLWEAPONEX_Rods_QRY_SkillVarsSet(_Item)
AND
DB_LLWEAPONEX_Rods_Skills("LLWEAPONEX_ROD_MAGIC_MISSILE", _MainhandSkill, _OffhandSkill)
THEN
SetVarString(_Item, "LLWEAPONEX_Rod_Skill", _MainhandSkill);
SetVarString(_Item, "LLWEAPONEX_Rod_Skill_Offhand", _OffhandSkill);

IF
SkillCast(_Char, "Shout_LLWEAPONEX_Rods_MagicMissile_ToggleMode", _, _)
THEN
LLWEAPONEX_Uniques_MagicMissileWand_ChangeMode(_Char);

PROC
LLWEAPONEX_Uniques_MagicMissileWand_ChangeMode((CHARACTERGUID)_Char)
AND
NOT DB_LLWEAPONEX_Uniques_Temp_MagicMissileModeChanged(_Char)
AND
GetItemForItemTemplateInInventory(_Char, "WPN_UNIQUE_LLWEAPONEX_Wand_1H_MagicMissile_A_67ef34e7-5f50-4ef9-9e40-8c7c04884812", _Weapon)
THEN
DB_LLWEAPONEX_Uniques_Temp_MagicMissileModeChanged(_Char);
CharacterUnequipItem(_Char, _Weapon);
LeaderLib_Timers_StartObjectObjectTimer(_Char, _Weapon, 50, "LLWEAPONEX_Timers_Uniques_TransformMagicMissile_WandToRod", "LLWEAPONEX_Uniques_TransformMagicMissile_WandToRod");

PROC
LLWEAPONEX_Uniques_MagicMissileWand_ChangeMode((CHARACTERGUID)_Char)
AND
NOT DB_LLWEAPONEX_Uniques_Temp_MagicMissileModeChanged(_Char)
AND
GetItemForItemTemplateInInventory(_Char, "WPN_UNIQUE_LLWEAPONEX_Rod_1H_MagicMissile_A_1566e0f6-3718-40b4-a7ff-e2c07c3cbd96", _Weapon)
THEN
DB_LLWEAPONEX_Uniques_Temp_MagicMissileModeChanged(_Char);
CharacterUnequipItem(_Char, _Weapon);
LeaderLib_Timers_StartObjectObjectTimer(_Char, _Weapon, 50, "LLWEAPONEX_Timers_Uniques_TransformMagicMissile_RodToWand", "LLWEAPONEX_Uniques_TransformMagicMissile_RodToWand");

PROC
LLWEAPONEX_Uniques_MagicMissileWand_ChangeMode((CHARACTERGUID)_Char)
AND
DB_LLWEAPONEX_Uniques_Temp_MagicMissileModeChanged(_Char)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_MagicMissileModeChanged(_Char);

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((CHARACTERGUID)_Char, (ITEMGUID)_Weapon, "LLWEAPONEX_Uniques_TransformMagicMissile_WandToRod")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ObjectObjectTimerFinished] Transforming Wand of Magic Missile to Rod form.");
Transform(_Weapon, "WPN_UNIQUE_LLWEAPONEX_Rod_1H_MagicMissile_A_1566e0f6-3718-40b4-a7ff-e2c07c3cbd96", 1, 1, 1);
DB_LLWEAPONEX_Rods_Temp_ListenForRodSkill(_Char, _Weapon); // So the rod shoot skills get added
LeaderLib_Timers_StartObjectObjectTimer(_Char, _Weapon, 50, "LLWEAPONEX_Timers_Uniques_TransformMagicMissile_Equip", "LLWEAPONEX_Uniques_TransformMagicMissile_Equip");

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((CHARACTERGUID)_Char, (ITEMGUID)_Weapon, "LLWEAPONEX_Uniques_TransformMagicMissile_RodToWand")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ObjectObjectTimerFinished] Transforming Rod of Magic Missile to Wand form.");
Transform(_Weapon, "WPN_UNIQUE_LLWEAPONEX_Wand_1H_MagicMissile_A_67ef34e7-5f50-4ef9-9e40-8c7c04884812", 1, 1, 1);
LeaderLib_Timers_StartObjectObjectTimer(_Char, _Weapon, 50, "LLWEAPONEX_Timers_Uniques_TransformMagicMissile_Equip", "LLWEAPONEX_Uniques_TransformMagicMissile_Equip");

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((CHARACTERGUID)_Char, (ITEMGUID)_Weapon, "LLWEAPONEX_Uniques_TransformMagicMissile_Equip")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ObjectObjectTimerFinished] Equipping Magic Missile wand/rod.");
CharacterEquipItem(_Char, _Weapon);
//END_REGION

//REGION MAGIC_MISSILE_BONUS_HITS
IF
CharacterStartAttackObject(_Target, _, _Char)
AND
HasActiveStatus(_Char, "LLWEAPONEX_WAND_MAGIC_MISSILE", 1)
THEN
LeaderLib_Timers_StartObjectObjectTimer(_Char, _Target, 580, "LLWEAPONEX_Timers_MagicMissile_Roll", "LLWEAPONEX_MagicMissile_RollForBonuses");

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((CHARACTERGUID)_Char, (GUIDSTRING)_Target, "LLWEAPONEX_MagicMissile_RollForBonuses")
THEN
LLWEAPONEX_Uniques_MagicMissileWand_RollForBonusMissiles(_Char, _Target);

PROC
LLWEAPONEX_Uniques_MagicMissileWand_RollForBonusMissiles((CHARACTERGUID)_Char, (GUIDSTRING)_Target)
AND
LeaderLib_Roll_QRY(450)
THEN
SetVarInteger(_Char, "LLWEAPONEX_MagicMissile_Missile1", 1);
DB_LLWEAPONEX_Uniques_Temp_MagicMissileBonusSuccess(_Char, _Target);

PROC
LLWEAPONEX_Uniques_MagicMissileWand_RollForBonusMissiles((CHARACTERGUID)_Char, (GUIDSTRING)_Target)
AND
LeaderLib_Roll_QRY(300)
THEN
SetVarInteger(_Char, "LLWEAPONEX_MagicMissile_Missile2", 1);
DB_LLWEAPONEX_Uniques_Temp_MagicMissileBonusSuccess(_Char, _Target);

PROC
LLWEAPONEX_Uniques_MagicMissileWand_RollForBonusMissiles((CHARACTERGUID)_Char, (GUIDSTRING)_Target)
AND
LeaderLib_Roll_QRY(100)
THEN
SetVarInteger(_Char, "LLWEAPONEX_MagicMissile_Missile3", 1);
DB_LLWEAPONEX_Uniques_Temp_MagicMissileBonusSuccess(_Char, _Target);

PROC
LLWEAPONEX_Uniques_MagicMissileWand_RollForBonusMissiles((CHARACTERGUID)_Char, (GUIDSTRING)_Target)
AND
DB_LLWEAPONEX_Uniques_Temp_MagicMissileBonusSuccess(_Char, _Target)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_MagicMissileBonusSuccess(_Char, _Target);
LLWEAPONEX_Uniques_MagicMissileWand_Internal_RollSuccess(_Char, _Target, "LLWEAPONEX_MagicMissile_FireBonusMissile");

PROC
LLWEAPONEX_Uniques_MagicMissileWand_Internal_RollSuccess((CHARACTERGUID)_Char, (GUIDSTRING)_Target, (STRING)_Event)
AND
ObjectIsCharacter(_Target, 1)
THEN
CharacterCharacterSetEvent(_Char, (CHARACTERGUID)_Target, _Event);

PROC
LLWEAPONEX_Uniques_MagicMissileWand_Internal_RollSuccess((CHARACTERGUID)_Char, (GUIDSTRING)_Target, (STRING)_Event)
AND
ObjectIsItem(_Target, 1)
THEN
CharacterItemSetEvent(_Char, (ITEMGUID)_Target, _Event);

/*
IF
CharacterStatusApplied(_Char, "LLWEAPONEX_MAGIC_MISSILE_BONUS1", (CHARACTERGUID)_Char)
THEN
CharacterCharacterSetEvent(_Char, _Char, "LLWEAPONEX_MagicMissile_FireBonusMissile1");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_MAGIC_MISSILE_BONUS2", (CHARACTERGUID)_Char)
THEN
CharacterCharacterSetEvent(_Char, _Char, "LLWEAPONEX_MagicMissile_FireBonusMissile2");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_MAGIC_MISSILE_BONUS3", (CHARACTERGUID)_Char)
THEN
CharacterCharacterSetEvent(_Char, _Char, "LLWEAPONEX_MagicMissile_FireBonusMissile3");
*/
//END_REGION

//REGION POWER_POLE
/* Doesn't work since a skill is needed to attach effects to weapon bones
IF
CharacterUsedSkill(_Char, "Cone_GroundSmash", _, _)
AND
CharacterHasSkill(_Char, "Zone_LLWEAPONEX_PowerPoleSmash", 1)
THEN
PlayEffect(_Char, "LLWEAPONEX_FX_Skills_PowerPoleSmash_Cast_Pole_01", "Dummy_FX_01");
*/
//END_REGION

//REGION SOUL_HARVESTER
PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_SoulHarvest_A_c308b26a-98d1-4429-8cce-4940f6eb5f69")
THEN
LeaderLib_ToggleScripts_EnableScript("LLWEAPONEX_SoulHarvestEquipped", "WeaponExpansion");

PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Scythe_2H_SoulHarvest_A_c308b26a-98d1-4429-8cce-4940f6eb5f69")
THEN
LeaderLib_ToggleScripts_DisableScriptAfterDelay("LLWEAPONEX_SoulHarvestEquipped", "WeaponExpansion", 500);

IF
CharacterStatusAttempt(_Target, "LLWEAPONEX_SOULHARVEST_REAP", (CHARACTERGUID)_Char)
THEN
DB_LLWEAPONEX_Uniques_Temp_SoulHarvest_ListenForDeath(_Char, _Target);

IF
SkillCast(_Char, "Cone_LLWEAPONEX_SoulHarvest_Reap", _, _)
THEN
ProcObjectTimerCancel(_Char, "LLWEAPONEX_TImers_SoulHarvest_ClearReaping");
ProcObjectTimer(_Char, "LLWEAPONEX_TImers_SoulHarvest_ClearReaping", 1250);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLWEAPONEX_TImers_SoulHarvest_ClearReaping")
AND
DB_LLWEAPONEX_Uniques_Temp_SoulHarvest_ListenForDeath(_Char, _Target)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_SoulHarvest_ListenForDeath(_Char, _Target);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLWEAPONEX_Timers_SoulHarvest_ClearSFXDB")
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_SoulHarvest_PlayingSound(_Char);
//END_REGION

//REGION WARCHIEFS_HALBERD
IF
SkillCast(_Char, "Shout_LLWEAPONEX_Warchief_SwitchMode", _, _)
THEN
ProcObjectTimer(_Char, "LLWEAPONEX_Timers_Warchief_StartModeToggle", 900);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLWEAPONEX_Timers_Warchief_StartModeToggle")
AND
CharacterGetEquippedItem(_Char, "Weapon", (ITEMGUID)_Halberd)
THEN
CharacterUnequipItem(_Char, _Halberd);
LeaderLib_Timers_StartCharacterItemTimer(_Char, _Halberd, 25, "LLWEAPONEX_Timers_SwapWarchiefMode", "LLWEAPONEX_SwapWarchiefMode");

IF
CharacterItemEvent(_Char, _Halberd, "LLWEAPONEX_SwapWarchiefMode")
AND
GetTemplate(_Halberd, _Template)
AND
CharacterGetLevel(_Char, _Level)
THEN
LLWEAPONEX_Uniques_WarChief_CheckVariable(_Char, _Halberd, _Level, _Template);
LLWEAPONEX_Uniques_WarChief_Swap(_Char, _Halberd, _Level, _Template);

PROC
LLWEAPONEX_Uniques_WarChief_CheckVariable((CHARACTERGUID)_Char, (ITEMGUID)_Halberd, (INTEGER)_Level, "WPN_UNIQUE_LLWEAPONEX_Axe_Halberd_2H_Warchief_A_76ab9d36-2f5f-4cb1-822d-2da2040a5347")
AND
NOT LeaderLib_Variables_QRY_ObjectVariableSet(_Halberd, "LLWEAPONEX_WarchiefHalberd")
AND
GetPosition(_Char, _x, _y, _z)
AND
CreateItemTemplateAtPosition("WPN_UNIQUE_LLWEAPONEX_Spear_Halberd_2H_Warchief_A_93acdd5a-dc43-4cdc-90cf-560b310d5f08", _x, _y, _z, _OtherHalberd)
THEN
SetVarObject(_Halberd, "LLWEAPONEX_WarchiefHalberd", _OtherHalberd);
SetVarObject(_OtherHalberd, "LLWEAPONEX_WarchiefHalberd", _Halberd);

PROC
LLWEAPONEX_Uniques_WarChief_CheckVariable((CHARACTERGUID)_Char, (ITEMGUID)_Halberd, (INTEGER)_Level, "WPN_UNIQUE_LLWEAPONEX_Spear_Halberd_2H_Warchief_A_93acdd5a-dc43-4cdc-90cf-560b310d5f08")
AND
NOT LeaderLib_Variables_QRY_ObjectVariableSet(_Halberd, "LLWEAPONEX_WarchiefHalberd")
AND
GetPosition(_Char, _x, _y, _z)
AND
CreateItemTemplateAtPosition("WPN_UNIQUE_LLWEAPONEX_Axe_Halberd_2H_Warchief_A_76ab9d36-2f5f-4cb1-822d-2da2040a5347", _x, _y, _z, _OtherHalberd)
THEN
SetVarObject(_Halberd, "LLWEAPONEX_WarchiefHalberd", _OtherHalberd);
SetVarObject(_OtherHalberd, "LLWEAPONEX_WarchiefHalberd", _Halberd);

PROC
LLWEAPONEX_Uniques_WarChief_Swap((CHARACTERGUID)_Char, (ITEMGUID)_Halberd, (INTEGER)_Level, (STRING)_Template)
AND
GetVarObject(_Halberd, "LLWEAPONEX_WarchiefHalberd", (ITEMGUID)_OtherHalberd)
THEN
//Transform(_Halberd, "WPN_UNIQUE_LLWEAPONEX_Spear_Halberd_2H_Warchief_A_93acdd5a-dc43-4cdc-90cf-560b310d5f08", 1, 1, 1);
//Transform(_Halberd, "WPN_UNIQUE_LLWEAPONEX_Axe_Halberd_2H_Warchief_A_76ab9d36-2f5f-4cb1-822d-2da2040a5347", 1, 1, 1);
//ItemLevelUpTo(_OtherHalberd, _Level);
ItemToInventory(_OtherHalberd, _Char);
CharacterUnequipItem(_Char, _Halberd);
LeaderLib_Timers_StartCharacterItemTimer(_Char, _OtherHalberd, 25, "LLWEAPONEX_Timers_WarChiefSwap_Equip", "LeaderLib_Commands_EquipItem");
LeaderLib_Timers_StartObjectObjectTimer(_Halberd, _OtherHalberd, 150, "LLWEAPONEX_Timers_WarChiefSwap_ToInventory", "LLWEAPONEX_WarChiefSwap_ToInventory");

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((ITEMGUID)_Halberd, (ITEMGUID)_OtherHalberd, "LLWEAPONEX_WarChiefSwap_ToInventory")
AND
NOT GetInventoryOwner(_OtherHalberd, _Halberd)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:LLWEAPONEX_WarChiefSwap_ToInventory] Moving halberd inside other halberd.");
ItemToInventory(_Halberd, _OtherHalberd, 1, 0, 0);

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((ITEMGUID)_Halberd, (ITEMGUID)_OtherHalberd, "LLWEAPONEX_WarChiefSwap_ToInventory")
AND
GetInventoryOwner(_OtherHalberd, _Halberd)
THEN
LeaderLog_Log("ERROR", "[LLWEAPONEX_20_UniqueEquipment:LLWEAPONEX_WarChiefSwap_ToInventory] Something went wrong! Other haldberd is still within the one we're switching away from!");

IF
CharacterUsedSkill(_Char, "Rush_LLWEAPONEX_Warchief_Whirlwind", _, _)
THEN
ProcObjectTimer(_Char, "LLWEAPONEX_Timers_Uniques_WarchiefWhirlwind_ApplyDamage", 730);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLWEAPONEX_Timers_Uniques_WarchiefWhirlwind_ApplyDamage")
THEN
ApplyStatus(_Char, "LLWEAPONEX_WARCHIEF_WHIRLWIND_DAMAGE", 0.0, 0, _Char);
//END_REGION

//REGION WARCHIEF_TRANSFORMED
IF
CanCombineItem(_Char, _ItemA, _ItemB, _ItemC, _ItemD, _ItemE, _RequestID)
AND
LeaderLib_Helper_QRY_Combo_FindTagged("LLWEAPONEX_WarchiefHalberd", _ItemA, _ItemB, _ItemC, _ItemD, _ItemE)
AND
DB_LeaderLib_Helper_Temp_Combo_FoundTaggedItem("LLWEAPONEX_WarchiefHalberd", (ITEMGUID)_Item)
AND
GetTemplate(_Item, _Template)
THEN
NOT DB_LeaderLib_Helper_Temp_Combo_FoundTaggedItem("LLWEAPONEX_WarchiefHalberd", _Item);
LLWEAPONEX_Uniques_Warchief_ItemComboHappening(_Char, _Item, _Template);

PROC
LLWEAPONEX_Uniques_Warchief_ItemComboHappening((CHARACTERGUID)_Char, (ITEMGUID)_Halberd, (STRING)_Template)
AND
GetVarObject(_Halberd, "LLWEAPONEX_WarchiefHalberd", (ITEMGUID)_OtherHalberd)
THEN
ItemToInventory(_OtherHalberd, _Char, 1, 0, 0);
DB_LLWEAPONEX_Uniques_Temp_NextCombinedWarchiefHalberd(_Char, _Template, _OtherHalberd);

IF
ItemTemplateCombinedWithItemTemplate(_,_,_,_,_, _Char, _Halberd)
AND
GetTemplate(_Halberd, _Template)
AND
DB_LLWEAPONEX_Uniques_Temp_NextCombinedWarchiefHalberd(_Char, _Template, _OtherHalberd)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_NextCombinedWarchiefHalberd(_Char, _Template, _OtherHalberd);
ItemToInventory(_OtherHalberd, _Halberd, 1, 0, 0);
SetVarObject(_Halberd, "LLWEAPONEX_WarchiefHalberd", _OtherHalberd);
SetVarObject(_OtherHalberd, "LLWEAPONEX_WarchiefHalberd", _Halberd);
//END_REGION

//REGION DRAGON_BONE_CLAWS
//WPN_UNIQUE_LLWEAPONEX_DragonBoneClaws_A_1f7c15a2-a2ba-484a-9b7c-acb7f0e25ec5
//EQ_UNIQUE_LLWEAPONEX_DragonBoneClaws_A_ce535023-af7f-46a3-bd70-85c8f820dc21
IF
ItemTemplateEquipped("WPN_UNIQUE_LLWEAPONEX_DragonBoneClaws_A_1f7c15a2-a2ba-484a-9b7c-acb7f0e25ec5", _Char)
AND
CharacterGetEquippedItem(_Char, "Weapon", (ITEMGUID)_Claws)
THEN
ItemLockUnEquip(_Claws, 1);

IF
ItemUnEquipFailed(_Claws, _Char)
AND
GetTemplate(_Claws, "WPN_UNIQUE_LLWEAPONEX_DragonBoneClaws_A_1f7c15a2-a2ba-484a-9b7c-acb7f0e25ec5")
THEN
ShowNotification(_Char, "LLWEAPONEX_Notifications_UnequipDragonBoneClawsFailed");

/*
IF
ItemTemplateUnEquipped("WPN_UNIQUE_LLWEAPONEX_DragonBoneClaws_A_1f7c15a2-a2ba-484a-9b7c-acb7f0e25ec5", _Char)
AND
CharacterGetEquippedItem(_Char, "Gloves", (ITEMGUID)_Claws)
AND
GetTemplate(_Claws, "EQ_UNIQUE_LLWEAPONEX_DragonBoneClaws_A_ce535023-af7f-46a3-bd70-85c8f820dc21")
THEN
CharacterUnequipItem(_Char, _Claws);
*/
//END_REGION

//REGION BOKKEN_SWITCH
/*
WPN_UNIQUE_LLWEAPONEX_Bokken_Sword_1H_A_e5fc86f9-a4fd-43dd-8814-b6ec906c287c
WPN_UNIQUE_LLWEAPONEX_Bokken_Sword_2H_A_ed8eadc4-41c9-4f99-b77a-a79a711ca6af
*/
QRY
LLWEAPONEX_Uniques_QRY_BokkenMatch("WPN_UNIQUE_LLWEAPONEX_Bokken_Sword_1H_A_e5fc86f9-a4fd-43dd-8814-b6ec906c287c")
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Uniques_QRY_BokkenMatch("WPN_UNIQUE_LLWEAPONEX_Bokken_Sword_2H_A_ed8eadc4-41c9-4f99-b77a-a79a711ca6af")
THEN
DB_NOOP(1);

IF
SkillCast(_Char, "Shout_LLWEAPONEX_Bokken_ChangeStance_ToOneHanded", _, _)
THEN
ProcObjectTimer(_Char, "LLWEAPONEX_Timers_Bokken_StartModeToggle", 900);

IF
SkillCast(_Char, "Shout_LLWEAPONEX_Bokken_ChangeStance_ToTwoHanded", _, _)
THEN
ProcObjectTimer(_Char, "LLWEAPONEX_Timers_Bokken_StartModeToggle", 900);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLWEAPONEX_Timers_Bokken_StartModeToggle")
AND
CharacterGetEquippedItem(_Char, "Weapon", (ITEMGUID)_Item)
AND
GetTemplate(_Item, _Template)
AND
LLWEAPONEX_Uniques_QRY_BokkenMatch(_Template)
THEN
CharacterUnequipItem(_Char, _Item);
LeaderLib_Timers_StartCharacterItemTimer(_Char, _Item, 100, "LLWEAPONEX_Timers_SwapBokkenMode", "LLWEAPONEX_SwapBokkenMode");

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLWEAPONEX_Timers_Bokken_StartModeToggle")
AND
CharacterGetEquippedItem(_Char, "Shield", (ITEMGUID)_Item)
AND
GetTemplate(_Item, _Template)
AND
LLWEAPONEX_Uniques_QRY_BokkenMatch(_Template)
THEN
CharacterUnequipItem(_Char, _Item);
LeaderLib_Timers_StartCharacterItemTimer(_Char, _Item, 100, "LLWEAPONEX_Timers_SwapBokkenMode", "LLWEAPONEX_SwapBokkenMode");

IF
CharacterItemEvent(_Char, _Item, "LLWEAPONEX_SwapBokkenMode")
AND
GetTemplate(_Item, _Template)
AND
CharacterGetLevel(_Char, _Level)
THEN
LLWEAPONEX_Uniques_SwapBokkenMode(_Char, _Item, _Level, _Template);

PROC
LLWEAPONEX_Uniques_SwapBokkenMode((CHARACTERGUID)_Char, (ITEMGUID)_Item, (INTEGER)_Level, "WPN_UNIQUE_LLWEAPONEX_Bokken_Sword_1H_A_e5fc86f9-a4fd-43dd-8814-b6ec906c287c")
THEN
Transform(_Item, "WPN_UNIQUE_LLWEAPONEX_Bokken_Sword_2H_A_ed8eadc4-41c9-4f99-b77a-a79a711ca6af", 1, 1, 1);

PROC
LLWEAPONEX_Uniques_SwapBokkenMode((CHARACTERGUID)_Char, (ITEMGUID)_Item, (INTEGER)_Level, "WPN_UNIQUE_LLWEAPONEX_Bokken_Sword_2H_A_ed8eadc4-41c9-4f99-b77a-a79a711ca6af")
THEN
Transform(_Item, "WPN_UNIQUE_LLWEAPONEX_Bokken_Sword_1H_A_e5fc86f9-a4fd-43dd-8814-b6ec906c287c", 1, 1, 1);

PROC
LLWEAPONEX_Uniques_SwapBokkenMode((CHARACTERGUID)_Char, (ITEMGUID)_Item, (INTEGER)_Level, (STRING)_Template)
THEN
ItemLevelUpTo(_Item, _Level);
LeaderLib_Timers_StartCharacterItemTimer(_Char, _Item, 25, "LLWEAPONEX_Timers_SwapBokkenMode_Equip", "LeaderLib_Commands_EquipItem");
//END_REGION

//REGION WRAITHBLADE_SLAY_HIDDEN
QRY
LLWEAPONEX_Uniques_QRY_WraithbladeHasTargets((CHARACTERGUID)_Char)
AND
DB_LLWEAPONEX_Skills_SlayHidden_Targets(_Char, _Target)
THEN
DB_NOOP(1);

IF
CharacterStatusAttempt(_Target, "LLWEAPONEX_WRAITHBLADE_MARK", (CHARACTERGUID)_Char)
AND
DB_CurrentLevel(_Level)
THEN
DB_LLWEAPONEX_Skills_SlayHidden_Targets(_Char, _Target);
PROC_LoopEffect("LLWEAPONEX_FX_Status_Wraithblade_Mark_Apply_01", _Target, "LLWEAPONEX_Wraithblade_MarkInvisLoopFX", _Level, "");

IF
CharacterUsedSkill(_Char, "Shout_LLWEAPONEX_Wraithblade_SlayHidden", _, _)
AND
GetPosition(_Char, _x, _y, _z)
THEN
SetVarFloat3(_Char, "LLWEAPONEX_SlayHidden_StartPosition", _x, _y, _z);

IF
SkillCast(_Char, "Shout_LLWEAPONEX_Wraithblade_SlayHidden", _, _)
THEN
ProcObjectTimer(_Char, "LLWEAPONEX_Timers_Wraithblade_StartAttack", 50);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Char, "LLWEAPONEX_Timers_Wraithblade_StartAttack")
AND
LLWEAPONEX_Uniques_QRY_WraithbladeHasTargets(_Char)
THEN
LeaderLib_Timers_StartObjectTimer(_Char, 750, "LLWEAPONEX_Timers_SlayHidden_Next", "LLWEAPONEX_SlayHidden_Next");

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_WRAITHBLADE_STEAL_INVISIBILITY", (CHARACTERGUID)_Char)
THEN
PROC_StopLoopEffect(_Target, "LLWEAPONEX_Wraithblade_MarkInvisLoopFX");

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_WRAITHBLADE_STEAL_INVISIBILITY", (CHARACTERGUID)_Char)
AND
LLWEAPONEX_Uniques_QRY_WraithbladeHasTargets(_Char)
THEN
LeaderLib_Statuses_ExtendStatusWithDelay(_Char, "INVISIBLE", 1, 3, 1, _Char, 2000, 1);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_WRAITHBLADE_STEAL_INVISIBILITY", (CHARACTERGUID)_Char)
AND
NOT LLWEAPONEX_Uniques_QRY_WraithbladeHasTargets(_Char)
THEN
LeaderLib_Statuses_ExtendStatusWithDelay(_Char, "INVISIBLE", 1, 3, 1, _Char, 250, 1);

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_SlayHidden_Next")
AND
DB_LLWEAPONEX_Skills_SlayHidden_Targets(_Char, _Target)
AND
NOT DB_LLWEAPONEX_Skills_SlayHidden_CurrentTarget(_Char, _)
AND
GetPosition(_Char, _x, _y, _z)
AND
GetPosition(_Target, _tx, _ty, _tz)
AND
RealSum(_y, 0.5, _cy)
THEN
NOT DB_LLWEAPONEX_Skills_SlayHidden_Targets(_Char, _Target);
DB_LLWEAPONEX_Skills_SlayHidden_CurrentTarget(_Char, _Target);
PlayEffect(_Char, "LLWEAPONEX_FX_Skills_InstantTransmission_Dissolve_Body_01");
PlayEffectAtPosition("LLWEAPONEX_FX_Skills_InstantTransmission_Disappear_01", _x, _y, _z);
SetVarFloat3(_Char, "LLWEAPONEX_SlayHidden_StartPosition", _x, _cy, _z);
CharacterSetFightMode(_Char, 1, 1);
CharacterLookAt(_Char, _Target, 1);
TeleportTo(_Char, _Target, "LLWEAPONEX_SlayHidden_Teleported", 0, 1, 0);
LeaderLib_Timers_StartCharacterCharacterTimer(_Char, _Target, 250, "LLWEAPONEX_Timers_SlayHidden_Hit", "LLWEAPONEX_SlayHidden_Hit");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_SlayHidden_Teleported")
AND
DB_LLWEAPONEX_Skills_SlayHidden_CurrentTarget(_Char, _Target)
THEN
//LeaderLib_Timers_StartObjectTimer(_Char, 500, "LLWEAPONEX_Timers_SlayHidden_PlayTrailEffect", "LLWEAPONEX_SlayHidden_PlayTrailEffect");
PlayEffect(_Char, "LLWEAPONEX_FX_Skills_InstantTransmission_Appear_01");
CharacterLookAt(_Char, _Target, 1);
//PlayAnimation(_Char, "noprepare");

IF
CharacterCharacterEvent(_Char, _Target, "LLWEAPONEX_SlayHidden_Hit")
THEN
NOT DB_LLWEAPONEX_Skills_SlayHidden_CurrentTarget(_Char, _Target);
NOT DB_LLWEAPONEX_Skills_SlayHidden_Targets(_Char, _Target);
//CharacterUseSkill(_Char, "Shout_LeaderLib_ClearQueue", _Char, 1, 1, 1);
LeaderLib_Helper_ClearActionQueue(_Char);
CharacterUseSkill(_Char, "Target_LLWEAPONEX_Wraithblade_SlayHidden_Attack", _Target, 1, 1, 1);
LeaderLib_Timers_StartObjectTimer(_Target, 5000, "LLWEAPONEX_Timers_SlayHidden_StopLoopFXFallback", "LLWEAPONEX_SlayHidden_StopLoopFXFallback");

IF
StoryEvent(_Target, "LLWEAPONEX_SlayHidden_StopLoopFXFallback")
THEN
PROC_StopLoopEffect(_Target, "LLWEAPONEX_Wraithblade_MarkInvisLoopFX");

IF
SkillCast(_Char, "Target_LLWEAPONEX_Wraithblade_SlayHidden_Attack", _, _)
THEN
LeaderLib_Timers_StartObjectTimer(_Char, 700, "LLWEAPONEX_Timers_SlayHidden_Next", "LLWEAPONEX_SlayHidden_Next");
//END_REGION

//REGION ANVIL_MACE
PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Anvil_Mace_2H_A_85e2e75e-4333-425e-adc4-94474c3fc201")
THEN
ObjectSetFlag(_Char, "LLWEAPONEX_AnvilMaceEquipped", 0);
LeaderLib_ToggleScripts_EnableScript("LLWEAPONEX_AnvilMaceEquipped", "WeaponExpansion");

PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Anvil_Mace_2H_A_85e2e75e-4333-425e-adc4-94474c3fc201")
THEN
ObjectClearFlag(_Char, "LLWEAPONEX_AnvilMaceEquipped", 0);

PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Anvil_Mace_2H_A_85e2e75e-4333-425e-adc4-94474c3fc201")
AND
PartyGetFlag(_Char, "LLWEAPONEX_AnvilMaceEquipped", 0)
THEN
LeaderLib_ToggleScripts_DisableScriptAfterDelay("LLWEAPONEX_AnvilMaceEquipped", "WeaponExpansion", 500);

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_AnvilMace_PlayUnsheathedImpact")
THEN
ApplyStatus(_Char, "LLWEAPONEX_ANVIL_UNSHEATHED_FX", 0.0, 0, _Char);

/*
IF
CharacterUsedSkillAtPosition(_Char, _x, _y, _z, "Rush_LLWEAPONEX_AnvilMace_GroundSmash", _, _)
THEN
DB_LLWEAPONEX_AnvilMace_Temp_SmashPosition(_Char, _x, _y, _z);

IF
CharacterUsedSkillOnTarget(_Char, _Target, "Rush_LLWEAPONEX_AnvilMace_GroundSmash", _, _)
AND
NOT DB_LLWEAPONEX_AnvilMace_Temp_SmashPosition(_Char, _, _, _)
AND
GetPosition(_Target, _x, _y, _z)
THEN
DB_LLWEAPONEX_AnvilMace_Temp_SmashPosition(_Char, _x, _y, _z);
*/

IF
CharacterUsedSkill(_Char, "Rush_LLWEAPONEX_AnvilMace_GroundSmash", _, _)
AND
GetPosition(_Char, _x, _y, _z)
THEN
DB_LLWEAPONEX_AnvilMace_Temp_SmashPosition(_Char, _x, _y, _z);

IF
SkillCast(_Char, "Rush_LLWEAPONEX_AnvilMace_GroundSmash", _, _)
THEN
LeaderLib_Timers_StartObjectTimer(_Char, 125, "LLWEAPONEX_Timers_AnvilMace_RushSmash_CheckPos", "LLWEAPONEX_AnvilMace_RushSmash_CheckPos");

//Didn't rush far enough
IF
SkillCast(_Char, "Rush_LLWEAPONEX_AnvilMace_GroundSmash", _, _)
AND
DB_LLWEAPONEX_AnvilMace_Temp_SmashPosition(_Char, _x, _y, _z)
AND
GetDistanceToPosition(_Char, _x, _y, _z, _Dist)
AND
_Dist <= 5.0
AND
LeaderLib_Math_QRY_ScaleToRange(_Dist, 5.0, 0.0, 500.0, 680.0)
AND
DB_LeaderLib_Math_ScaleToRange(_Dist, _Result, 5.0, 0.0, 500.0, 680.0)
AND
Integer(_Result, _Delay)
AND
IntegertoString(_Delay, _DelayStr)
AND
GetPosition(_Char, _tx, _ty, _tz)
THEN
NOT DB_LeaderLib_Math_ScaleToRange(_Dist, _Result, 5.0, 0.0, 500.0, 680.0);
NOT DB_LLWEAPONEX_AnvilMace_Temp_SmashPosition(_Char, _x, _y, _z);
DB_LLWEAPONEX_AnvilMace_Temp_SmashPosition(_Char, _tx, _ty, _tz);
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:AnvilMace_GroundSmash] Delaying ground explosion for (",_DelayStr,")");
//Long enough for anim to finish
LeaderLib_Timers_StartObjectTimer(_Char, _Delay, "LLWEAPONEX_Timers_AnvilMace_RushSmash_CheckPos", "LLWEAPONEX_AnvilMace_RushSmash_CheckPos");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_AnvilMace_RushSmash_CheckPos")
AND
DB_LLWEAPONEX_AnvilMace_Temp_SmashPosition(_Char, _x, _y, _z)
AND
GetDistanceToPosition(_Char, _x, _y, _z, _Dist)
AND
_Dist <= 0.1
THEN
NOT DB_LLWEAPONEX_AnvilMace_Temp_SmashPosition(_Char, _x, _y, _z);
SetStoryEvent(_Char, "LLWEAPONEX_AnvilMace_RushSmash_Explode");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_AnvilMace_RushSmash_CheckPos")
AND
DB_LLWEAPONEX_AnvilMace_Temp_SmashPosition(_Char, _x, _y, _z)
AND
GetPosition(_Char, _tx, _ty, _tz)
THEN
NOT DB_LLWEAPONEX_AnvilMace_Temp_SmashPosition(_Char, _x, _y, _z);
DB_LLWEAPONEX_AnvilMace_Temp_SmashPosition(_Char, _tx, _ty, _tz);
LeaderLib_Timers_StartObjectTimer(_Char, 50, "LLWEAPONEX_Timers_AnvilMace_RushSmash_CheckPos", "LLWEAPONEX_AnvilMace_RushSmash_CheckPos");
//END_REGION

//REGION ANVILMACE_SLAM_KNOCKUP
IF
CharacterUsedSkillAtPosition(_Char, _x, _y, _z, "Target_LLWEAPONEX_AnvilMace_GroundSmash", _, _)
THEN
DB_LLWEAPONEX_AnvilMace_Temp_GroundSmashTarget(_Char, _x, _y, _z);

IF
CharacterUsedSkillOnTarget(_Char, _Target, "Target_LLWEAPONEX_AnvilMace_GroundSmash", _, _)
AND
NOT DB_LLWEAPONEX_AnvilMace_Temp_GroundSmashTarget(_Char, _, _, _)
AND
GetPosition(_Target, _x, _y, _z)
THEN
DB_LLWEAPONEX_AnvilMace_Temp_GroundSmashTarget(_Char, _x, _y, _z);

IF
SkillCast(_Char, "Target_LLWEAPONEX_AnvilMace_GroundSmash", _, _)
THEN
LeaderLib_Helper_ClearActionQueue(_Char);
LeaderLib_Timers_StartObjectTimer(_Char, 1, "LLWEAPONEX_Timers_Skills_AnvilGroundSmash_Cast", "LLWEAPONEX_Skills_AnvilGroundSmash_Cast");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Skills_AnvilGroundSmash_Cast")
AND
DB_LLWEAPONEX_AnvilMace_Temp_GroundSmashTarget(_Char, _x, _y, _z)
THEN
NOT DB_LLWEAPONEX_AnvilMace_Temp_GroundSmashTarget(_Char, _x, _y, _z);
CharacterUseSkillAtPosition(_Char, "Rush_LLWEAPONEX_AnvilMace_GroundSmash", _x, _y, _z, 0, 1);

IF
ItemStatusChange(_Target, "LLWEAPONEX_ANVILMACE_KNOCKUP", (CHARACTERGUID)_Caster)
AND
GetPosition(_Target, _x, _y, _z)
THEN
LLWEAPONEX_Uniques_AnvilMace_SpawnSkillPlatform(_Target, _Caster);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_ANVILMACE_KNOCKUP", (CHARACTERGUID)_Caster)
THEN
PlayAnimation(_Target, "knockdown_fall", "LLWEAPONEX_Uniques_AnvilMace_GroundSlam_PlayKnockdownLoop");
LLWEAPONEX_Uniques_AnvilMace_SpawnSkillPlatform(_Target, _Caster);

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_Uniques_AnvilMace_GroundSlam_PlayKnockdownLoop")
THEN
CharacterSetStill(_Char);
CharacterSetAnimationOverride(_Char, "knockdown_loop");

PROC
LLWEAPONEX_Uniques_AnvilMace_SpawnSkillPlatform((GUIDSTRING)_Target, (CHARACTERGUID)_Caster)
AND
NOT DB_LLWEAPONEX_Uniques_AnvilMace_Temp_GroundSlamTarget(_Target, _Caster, _)
AND
LeaderLib_Random_QRY(250, 800)
AND
DB_LeaderLib_Random(_HeightInt)
AND
Real(_HeightInt, _HeightR)
AND
RealDivide(_HeightR, 100.0, _Height)
AND
Integer(_Height, _FallDamageInt)
AND
GetPosition(_Target, _x, _y, _z)
THEN
NOT DB_LeaderLib_Random(_HeightInt);
PlayScaledEffectAtPosition("LLWEAPONEX_FX_Status_Launched_Apply_Root_01", 0.25, _x, _y, _z);
//ApplyStatus(_Target, "LLWEAPONEX_ANVILMACE_KNOCKUP_DISABLED", 18.0, 1, _Caster);
DB_LLWEAPONEX_Uniques_AnvilMace_Temp_GroundSlamTarget(_Target, _Caster, _FallDamageInt);
LeaderLib_Platforms_Launch(_Target, "LLWEAPONEX_AnvilMace_GroundSlam_Launch", _Height);

PROC
LeaderLib_Platforms_OnLaunchFinished((GUIDSTRING)_Target, "LLWEAPONEX_AnvilMace_GroundSlam_Launch")
AND
ObjectIsCharacter((CHARACTERGUID)_Target, 1)
THEN
LeaderLib_Hacks_ClearAnimationOverride(_Target, "LLWEAPONEX_AnvilMace_GroundSlam_GetupAnim");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_AnvilMace_GroundSlam_GetupAnim")
THEN
PlayAnimation(_Char,"knockdown_getup", "");

PROC
LeaderLib_Platforms_OnLaunchFinished((GUIDSTRING)_Target, "LLWEAPONEX_AnvilMace_GroundSlam_Launch")
AND
DB_LLWEAPONEX_Uniques_AnvilMace_Temp_GroundSlamTarget(_Target, _Caster, _FallDamageInt)
AND
IntegerSubtract(_FallDamageInt, 1, _FallDamage)
THEN
NOT DB_LLWEAPONEX_Uniques_AnvilMace_Temp_GroundSlamTarget(_Target, _Caster, _FallDamageInt);
RemoveStatus(_Target, "LLWEAPONEX_ANVILMACE_KNOCKUP_DISABLED");
LLWEAPONEX_Uniques_AnvilMace_GroundSlam_ApplyFallDamage(_Target, _Caster, _FallDamage);

PROC
LLWEAPONEX_Uniques_AnvilMace_GroundSlam_ApplyFallDamage((GUIDSTRING)_Target, (CHARACTERGUID)_Caster, 0)
AND
GetPosition(_Target, _x, _y, _z)
THEN
PlayScaledEffectAtPosition("LLWEAPONEX_FX_Skills_AnvilMace_GroundSmash_Land_Impact_01", 0.15, _x, _y, _z);
ApplyStatus(_Target, "LLWEAPONEX_ANVILMACE_KNOCKUP_FALLDAMAGE1", 0.0, 0, _Caster);

PROC
LLWEAPONEX_Uniques_AnvilMace_GroundSlam_ApplyFallDamage((GUIDSTRING)_Target, (CHARACTERGUID)_Caster, (INTEGER)_FallDamage)
AND
_FallDamage > 0
AND
_FallDamage <= 7
AND
GetPosition(_Target, _x, _y, _z)
THEN
PlayScaledEffectAtPosition("LLWEAPONEX_FX_Skills_AnvilMace_GroundSmash_Land_Impact_01", 0.5, _x, _y, _z);
ApplyStatus(_Target, "LLWEAPONEX_ANVILMACE_KNOCKUP_FALLDAMAGE2", 0.0, 0, _Caster);

PROC
LLWEAPONEX_Uniques_AnvilMace_GroundSlam_ApplyFallDamage((GUIDSTRING)_Target, (CHARACTERGUID)_Caster, (INTEGER)_FallDamage)
AND
_FallDamage > 7
AND
GetPosition(_Target, _x, _y, _z)
THEN
PlayScaledEffectAtPosition("LLWEAPONEX_FX_Skills_AnvilMace_GroundSmash_Land_Impact_01", 0.75, _x, _y, _z);
ApplyStatus(_Target, "LLWEAPONEX_ANVILMACE_KNOCKUP_FALLDAMAGE3", 0.0, 0, _Caster);
//END_REGION

//REGION TATTOOS
//"EQ_UNIQUE_LLWEAPONEX_Upperbody_Tattoos_Magic_A_dda1182e-63e3-4a7a-8855-5295fa1e67cb"
//"EQ_UNIQUE_LLWEAPONEX_Upperbody_Tattoos_Normal_A_291f1cae-d46b-4795-aa27-23c1526bb7e1"

PROC
LLWEAPONEX_Uniques_Tattoos_Setup((CHARACTERGUID)_Char, (STRING)_NormalTemplate, (STRING)_MagicTemplate, (STRING)_Slot, (INTEGER)_Lock)
THEN
DB_LLWEAPONEX_Uniques_Tattoos_Templates(_Char, _NormalTemplate, _MagicTemplate, _Slot);

PROC
LLWEAPONEX_Uniques_Tattoos_Setup((CHARACTERGUID)_Char, (STRING)_NormalTemplate, (STRING)_MagicTemplate, (STRING)_Slot, (INTEGER)_Lock)
AND
CharacterGetEquippedItem(_Char, "Breast", (ITEMGUID)_Tattoos)
AND
GetTemplate(_Tattoos, _NormalTemplate)
AND
NOT LeaderLib_Variables_QRY_ObjectVariableSet(_Tattoos, "LLWEAPONEX_Tattoos_OtherVersion")
AND
GetPosition(_Char, _x, _y, _z)
AND
CreateItemTemplateAtPosition(_MagicTemplate, _x, _y, _z, _MagicTattoos)
THEN
ItemLockUnEquip(_Tattoos, _Lock);
SetVarObject(_Tattoos, "LLWEAPONEX_Tattoos_OtherVersion", _MagicTattoos);
SetVarObject(_MagicTattoos, "LLWEAPONEX_Tattoos_OtherVersion", _Tattoos);
ItemToInventory(_MagicTattoos, _Tattoos, 1, 0, 0);

QRY
LLWEAPONEX_Uniques_QRY_Tattoos_FindUnlinked((CHARACTERGUID)_Char, (ITEMGUID)_Item, (STRING)_OtherTemplate)
THEN
LLWEAPONEX_Uniques_Tattoos_FindUnlinked(_Char, _Item, _OtherTemplate);

PROC
LLWEAPONEX_Uniques_Tattoos_FindUnlinked((CHARACTERGUID)_Char, (ITEMGUID)_Item, (STRING)_OtherTemplate)
AND
DB_LLWEAPONEX_Uniques_Temp_IterateInventory(_Char, _Item, _Template)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_IterateInventory(_Char, _Item, _Template);

PROC
LLWEAPONEX_Uniques_Tattoos_FindUnlinked((CHARACTERGUID)_Char, (ITEMGUID)_Item, (STRING)_OtherTemplate)
AND
NOT LeaderLib_Variables_QRY_ObjectVariableSet(_Item, "LLWEAPONEX_Tattoos_OtherVersion")
THEN
DB_LLWEAPONEX_Uniques_Temp_IterateInventory(_Char, _Item, _OtherTemplate);
InventoryLaunchTemplateIterator(_Item, _OtherTemplate, "LLWEAPONEX_Uniques_Iterator_FoundTattooTemplate", "");

IF
StoryEvent((ITEMGUID)_Item, "LLWEAPONEX_Uniques_Iterator_FoundTattooTemplate")
AND
GetInventoryOwner(_Item, (ITEMGUID)_Owner)
AND
DB_LLWEAPONEX_Uniques_Temp_IterateInventory(_Char, _Owner, _OtherTemplate)
THEN
SetVarObject(_Item, "LLWEAPONEX_Tattoos_OtherVersion", _Owner);
SetVarObject(_Owner, "LLWEAPONEX_Tattoos_OtherVersion", _Item);

//Reset vars (story reload)
PROC
LLWEAPONEX_Uniques_SwapTattoos((CHARACTERGUID)_Char, (STRING)_Slot, (INTEGER)_Lock)
AND
NOT DB_LLWEAPONEX_Uniques_Temp_TattoosSwapped(_Char)
AND
DB_LLWEAPONEX_Uniques_Tattoos_Templates(_Char, _NormalTemplate, _MagicTemplate, _Slot)
AND
CharacterGetEquippedItem(_Char, _Slot, (ITEMGUID)_Tattoos)
AND
NOT LeaderLib_Variables_QRY_ObjectVariableSet(_Tattoos, "LLWEAPONEX_Tattoos_OtherVersion")
AND
GetTemplate(_Tattoos, _NormalTemplate)
AND
LLWEAPONEX_Uniques_QRY_Tattoos_FindUnlinked(_Char, _Tattoos, _MagicTemplate)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_IterateInventory(_Char, _Tattoos, _MagicTemplate);

//Reset vars (story reload)
PROC
LLWEAPONEX_Uniques_SwapTattoos((CHARACTERGUID)_Char, (STRING)_Slot, (INTEGER)_Lock)
AND
NOT DB_LLWEAPONEX_Uniques_Temp_TattoosSwapped(_Char)
AND
DB_LLWEAPONEX_Uniques_Tattoos_Templates(_Char, _NormalTemplate, _MagicTemplate, _Slot)
AND
CharacterGetEquippedItem(_Char, _Slot, (ITEMGUID)_Tattoos)
AND
NOT LeaderLib_Variables_QRY_ObjectVariableSet(_Tattoos, "LLWEAPONEX_Tattoos_OtherVersion")
AND
GetTemplate(_Tattoos, _MagicTemplate)
AND
LLWEAPONEX_Uniques_QRY_Tattoos_FindUnlinked(_Char, _Tattoos, _NormalTemplate)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_IterateInventory(_Char, _Tattoos, _NormalTemplate);

//Create templates if vars still not found
PROC
LLWEAPONEX_Uniques_SwapTattoos((CHARACTERGUID)_Char, (STRING)_Slot, (INTEGER)_Lock)
AND
NOT DB_LLWEAPONEX_Uniques_Temp_TattoosSwapped(_Char)
AND
DB_LLWEAPONEX_Uniques_Tattoos_Templates(_Char, _NormalTemplate, _MagicTemplate, _Slot)
AND
CharacterGetEquippedItem(_Char, _Slot, (ITEMGUID)_Tattoos)
AND
NOT LeaderLib_Variables_QRY_ObjectVariableSet(_Tattoos, "LLWEAPONEX_Tattoos_OtherVersion")
AND
GetTemplate(_Tattoos, _NormalTemplate)
AND
GetPosition(_Char, _x, _y, _z)
AND
CreateItemTemplateAtPosition(_MagicTemplate, _x, _y, _z, _MagicTattoos)
THEN
SetVarObject(_Tattoos, "LLWEAPONEX_Tattoos_OtherVersion", _MagicTattoos);
SetVarObject(_MagicTattoos, "LLWEAPONEX_Tattoos_OtherVersion", _Tattoos);
ItemToInventory(_MagicTattoos, _Tattoos, 1, 0, 0);

//Create templates if vars still not found
PROC
LLWEAPONEX_Uniques_SwapTattoos((CHARACTERGUID)_Char, (STRING)_Slot, (INTEGER)_Lock)
AND
NOT DB_LLWEAPONEX_Uniques_Temp_TattoosSwapped(_Char)
AND
DB_LLWEAPONEX_Uniques_Tattoos_Templates(_Char, _NormalTemplate, _MagicTemplate, _Slot)
AND
CharacterGetEquippedItem(_Char, _Slot, (ITEMGUID)_MagicTattoos)
AND
NOT LeaderLib_Variables_QRY_ObjectVariableSet(_MagicTattoos, "LLWEAPONEX_Tattoos_OtherVersion")
AND
GetTemplate(_MagicTattoos, _MagicTemplate)
AND
GetPosition(_Char, _x, _y, _z)
AND
CreateItemTemplateAtPosition(_NormalTemplate, _x, _y, _z, _Tattoos)
THEN
SetVarObject(_Tattoos, "LLWEAPONEX_Tattoos_OtherVersion", _MagicTattoos);
SetVarObject(_MagicTattoos, "LLWEAPONEX_Tattoos_OtherVersion", _Tattoos);
ItemToInventory(_Tattoos, _MagicTattoos, 1, 0, 0);

//Swap Magic to Normal
PROC
LLWEAPONEX_Uniques_SwapTattoos((CHARACTERGUID)_Char, (STRING)_Slot, 0, (INTEGER)_Lock)
AND
NOT DB_LLWEAPONEX_Uniques_Temp_TattoosSwapped(_Char)
AND
DB_LLWEAPONEX_Uniques_Tattoos_Templates(_Char, _NormalTemplate, _MagicTemplate, _Slot)
AND
CharacterGetEquippedItem(_Char, _Slot, (ITEMGUID)_Tattoos)
AND
GetTemplate(_Tattoos, _MagicTemplate)
AND
LeaderLib_Variables_QRY_ObjectVariableSet(_Tattoos, "LLWEAPONEX_Tattoos_OtherVersion")
AND
GetVarObject(_Tattoos, "LLWEAPONEX_Tattoos_OtherVersion", (ITEMGUID)_OtherTattoos)
THEN
ItemLockUnEquip(_Tattoos, 0);
CharacterUnequipItem(_Char, _Tattoos);
CharacterEquipItem(_Char, _OtherTattoos);
ItemLockUnEquip(_OtherTattoos, _Lock);
LeaderLib_Timers_StartObjectObjectTimer(_Tattoos, _OtherTattoos, 50, "LLWEAPONEX_Timers_MoveTattoosToOther", "LLWEAPONEX_Uniques_MoveTattoosToOther");
DB_LLWEAPONEX_Uniques_Temp_TattoosSwapped(_Char);

//Swap Normal to Magic
PROC
LLWEAPONEX_Uniques_SwapTattoos((CHARACTERGUID)_Char, (STRING)_Slot, 1, (INTEGER)_Lock)
AND
NOT DB_LLWEAPONEX_Uniques_Temp_TattoosSwapped(_Char)
AND
DB_LLWEAPONEX_Uniques_Tattoos_Templates(_Char, _NormalTemplate, _MagicTemplate, _Slot)
AND
CharacterGetEquippedItem(_Char, _Slot, (ITEMGUID)_Tattoos)
AND
GetTemplate(_Tattoos, _NormalTemplate)
AND
LeaderLib_Variables_QRY_ObjectVariableSet(_Tattoos, "LLWEAPONEX_Tattoos_OtherVersion")
AND
GetVarObject(_Tattoos, "LLWEAPONEX_Tattoos_OtherVersion", (ITEMGUID)_OtherTattoos)
THEN
ItemLockUnEquip(_Tattoos, 0);
CharacterUnequipItem(_Char, _Tattoos);
CharacterEquipItem(_Char, _OtherTattoos);
ItemLockUnEquip(_OtherTattoos, _Lock);
LeaderLib_Timers_StartObjectObjectTimer(_Tattoos, _OtherTattoos, 50, "LLWEAPONEX_Timers_MoveTattoosToOther", "LLWEAPONEX_Uniques_MoveTattoosToOther");
DB_LLWEAPONEX_Uniques_Temp_TattoosSwapped(_Char);

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((ITEMGUID)_Tattoos, (ITEMGUID)_OtherTattoos, "LLWEAPONEX_Uniques_MoveTattoosToOther")
THEN
ItemToInventory(_Tattoos, _OtherTattoos, 1, 0, 0);

PROC
LLWEAPONEX_Uniques_SwapTattoos((CHARACTERGUID)_Char, (STRING)_Slot, (INTEGER)_ToMagicVersion, (INTEGER)_Lock)
AND
DB_LLWEAPONEX_Uniques_Temp_TattoosSwapped(_Char)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_TattoosSwapped(_Char);
//END_REGION

//REGION FLAMETHROWER_PYRO_DANCE
PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Firearm_Flamethrower_2H_A_6b7e1caa-a610-4e40-91dc-7f2df1b86d42")
THEN
LeaderLib_ToggleScripts_DisableScriptForObjectAfterDelay(_Char, "LLWEAPONEX_FlamethrowerEquipped", "WeaponExpansion", 500);
NOT DB_LLWEAPONEX_Flamethrower_Equipped(_Char, _Item);
LeaderLib_Statuses_RemoveIfActive(_Char, "LLWEAPONEX_FLAMETHROWER_PYRODANCE");
LeaderLib_Statuses_RemoveIfActive(_Char, "LLWEAPONEX_FLAMETHROWER_PYRODANCE_HASTED");

PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Char, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Firearm_Flamethrower_2H_A_6b7e1caa-a610-4e40-91dc-7f2df1b86d42")
THEN
LeaderLib_ToggleScripts_EnableScriptForObject(_Char, "LLWEAPONEX_FlamethrowerEquipped", "WeaponExpansion");
DB_LLWEAPONEX_Flamethrower_Equipped(_Char, _Item);

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_FLAMETHROWER_PYRODANCE", _)
THEN
LeaderLib_ToggleScripts_EnableScriptForObject(_Char, "LLWEAPONEX_PyroDanceIsActive", "WeaponExpansion");

IF
CharacterStatusRemoved(_Char, "LLWEAPONEX_FLAMETHROWER_PYRODANCE", _)
THEN
LeaderLib_ToggleScripts_DisableScriptForObject(_Char, "LLWEAPONEX_PyroDanceIsActive", "WeaponExpansion");

IF
CharacterStatusApplied(_Char, "LLWEAPONEX_FLAMETHROWER_PYRODANCE", _)
AND
LeaderLib_Helper_QRY_IsInSurfaceGroup(_Char, "Fire")
THEN
ApplyStatus(_Char, "LLWEAPONEX_FLAMETHROWER_PYRODANCE_HASTED", 12.0, 0, _Char);

IF
CharacterStatusRemoved(_Char, "LLWEAPONEX_FLAMETHROWER_PYRODANCE", _)
THEN
RemoveStatus(_Char, "LLWEAPONEX_FLAMETHROWER_PYRODANCE_HASTED");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_00_PostCC"