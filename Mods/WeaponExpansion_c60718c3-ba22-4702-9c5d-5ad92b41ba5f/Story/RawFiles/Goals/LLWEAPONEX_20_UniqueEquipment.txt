Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLWEAPONEX_Uniques_InitSettings();
KBSECTION

//REGION SETTINGS
PROC
LLWEAPONEX_Uniques_InitSettings()
THEN
DB_NOOP(1);
//END_REGION

//REGION UPDATES
PROC
LeaderUpdater_ModUpdated("WeaponExpansion", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 0, 9, 4, 10)
THEN
LLWEAPONEX_Uniques_InitSettings();
//END_REGION

//REGION BEHOLDER
PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Sword_2H_Beholder_A_1cc2baa1-cd58-40a3-8b53-89ef2e081616")
THEN
DB_LLWEAPONEX_Uniques_BeholderEquipped(_Character);

IF
CharacterStatusApplied(_Player, "UNSHEATHED", _)
AND
DB_LLWEAPONEX_Uniques_BeholderEquipped(_Player)
THEN
PROC_LoopEffect("LLWEAPONEX_FX_Overlay_Weapon_DarkEnergy_01", _Player, "LLWEAPONEX.FX.BeholderUnsheathed", "__ANY__", "Dummy_Root");
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:Unsheathed] Playing Beholder unsheathed loop effect on character.");

IF
CharacterStatusRemoved(_Player, "UNSHEATHED", _)
AND
DB_LLWEAPONEX_Uniques_BeholderEquipped(_Player)
THEN
PROC_StopLoopEffect(_Player, "LLWEAPONEX.FX.BeholderUnsheathed");
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:Sheathed] Stopping Beholder unsheathed loop effect on character.");

PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Sword_2H_Beholder_A_1cc2baa1-cd58-40a3-8b53-89ef2e081616")
AND
DB_LLWEAPONEX_Uniques_BeholderEquipped(_Player)
THEN
PROC_StopLoopEffect(_Player, "LLWEAPONEX.FX.BeholderUnsheathed");
NOT DB_LLWEAPONEX_Uniques_BeholderEquipped(_Player);
//END_REGION

//REGION FROSTDYNE_SKILLS
/*
IF
CharacterStatusApplied(_Player, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_INFO", _)
AND
CharacterGetLevel(_Player, _Level)
THEN
LLWEAPONEX_Uniques_FrostDyne_RemoveSkills(_Player);
LLWEAPONEX_Uniques_FrostDyne_AddSkills(_Player, _Level);

PROC
LLWEAPONEX_Uniques_FrostDyne_AddSkills((CHARACTERGUID)_Player, (INTEGER)_Level)
AND
_Level < 6
THEN
ApplyStatus(_Player, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_A", -1.0, 1, _Player);
DB_LLWEAPONEX_Uniques_Temp_FrostDyneActive(_Player, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_A");

PROC
LLWEAPONEX_Uniques_FrostDyne_AddSkills((CHARACTERGUID)_Player, (INTEGER)_Level)
AND
_Level >= 6
AND
_Level < 14
THEN
ApplyStatus(_Player, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_B", -1.0, 1, _Player);
DB_LLWEAPONEX_Uniques_Temp_FrostDyneActive(_Player, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_B");

PROC
LLWEAPONEX_Uniques_FrostDyne_AddSkills((CHARACTERGUID)_Player, (INTEGER)_Level)
AND
_Level >= 14
THEN
ApplyStatus(_Player, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_C", -1.0, 1, _Player);
DB_LLWEAPONEX_Uniques_Temp_FrostDyneActive(_Player, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_C");

IF
CharacterStatusRemoved(_Player, "LLWEAPONEX_UNIQUE_FROSTDYNE_SKILLS_INFO", _)
THEN
LLWEAPONEX_Uniques_FrostDyne_RemoveSkills(_Player);

PROC
LLWEAPONEX_Uniques_FrostDyne_RemoveSkills((CHARACTERGUID)_Player)
AND
DB_LLWEAPONEX_Uniques_Temp_FrostDyneActive(_Player, _Status)
THEN
RemoveStatus(_Player, _Status);
NOT DB_LLWEAPONEX_Uniques_Temp_FrostDyneActive(_Player, _Status);

IF
CharacterLeveledUp(_Player)
AND
DB_LLWEAPONEX_Uniques_Temp_FrostDyneActive(_Player, _Status)
AND
CharacterGetLevel(_Player, _Level)
THEN
LLWEAPONEX_Uniques_FrostDyne_OnPlayerLeveledUp(_Player, _Level);

PROC
LLWEAPONEX_Uniques_FrostDyne_OnPlayerLeveledUp((CHARACTERGUID)_Player, 4)
THEN
LLWEAPONEX_Uniques_FrostDyne_RemoveSkills(_Player);
LLWEAPONEX_Uniques_FrostDyne_AddSkills(_Player, 4);

PROC
LLWEAPONEX_Uniques_FrostDyne_OnPlayerLeveledUp((CHARACTERGUID)_Player, 6)
THEN
LLWEAPONEX_Uniques_FrostDyne_RemoveSkills(_Player);
LLWEAPONEX_Uniques_FrostDyne_AddSkills(_Player, 6);

PROC
LLWEAPONEX_Uniques_FrostDyne_OnPlayerLeveledUp((CHARACTERGUID)_Player, 14)
THEN
LLWEAPONEX_Uniques_FrostDyne_RemoveSkills(_Player);
LLWEAPONEX_Uniques_FrostDyne_AddSkills(_Player, 14);
*/
//END_REGION

//REGION MURAMASA
PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Katana_Dagger_Sword_2H_Muramasa_4be8ec78-17ed-4f61-b3d8-96c260d1c80a")
THEN
LLWEAPONEX_Uniques_OnMuramasaEquipped(_Character);
LeaderLib_ToggleScripts_EnableScript("LLWEAPONEX_MuramasaEquipped", "WeaponExpansion");

PROC
LLWEAPONEX_Uniques_OnMuramasaEquipped((CHARACTERGUID)_Character)
AND
CharacterGetHitpointsPercentage(_Character, _HP)
AND
_HP <= 50
THEN
ApplyStatus(_Character, "LLWEAPONEX_MURAMASA_CURSE_WEAPONFX", -1.0, 0, _Character);

PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item, "WPN_UNIQUE_LLWEAPONEX_Katana_Dagger_Sword_2H_Muramasa_4be8ec78-17ed-4f61-b3d8-96c260d1c80a")
THEN
LLWEAPONEX_Uniques_OnMuramasaUnequipped(_Character);
LeaderLib_ToggleScripts_DisableScriptAfterDelay("LLWEAPONEX_MuramasaEquipped", "WeaponExpansion", 500);

PROC
LLWEAPONEX_Uniques_OnMuramasaUnequipped((CHARACTERGUID)_Character)
AND
LeaderLib_Helper_QRY_HasStatus(_Character, "LLWEAPONEX_MURAMASA_CURSE_WEAPONFX")
THEN
RemoveStatus(_Character, "LLWEAPONEX_MURAMASA_CURSE_WEAPONFX");
//END_REGION

//REGION DEMON_GAUNTLET
PROC
LLWEAPONEX_OnItemEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item, "EQ_UNIQUE_LLWEAPONEX_DemonGauntlet_Arms_A_f5d0a9b3-b83c-4b78-8bc6-a097a26ddf53")
THEN
LeaderLib_ToggleScripts_EnableScript("LLWEAPONEX_DemonGauntletEquipped", "WeaponExpansion");

PROC
LLWEAPONEX_OnItemUnEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item, "EQ_UNIQUE_LLWEAPONEX_DemonGauntlet_Arms_A_f5d0a9b3-b83c-4b78-8bc6-a097a26ddf53")
THEN
LLWEAPONEX_Uniques_OnDemonGauntletUnequipped(_Character);
LeaderLib_ToggleScripts_DisableScriptAfterDelay("LLWEAPONEX_DemonGauntletEquipped", "WeaponExpansion", 500);

PROC
LLWEAPONEX_Uniques_OnDemonGauntletUnequipped((CHARACTERGUID)_Character)
AND
LeaderLib_Helper_QRY_HasStatus(_Character, "LLWEAPONEX_DEMON_HAND_DEFENSE")
THEN
RemoveStatus(_Character, "LLWEAPONEX_DEMON_HAND_DEFENSE");

PROC
LLWEAPONEX_Uniques_OnDemonGauntletUnequipped((CHARACTERGUID)_Source)
AND
DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Source, _Target)
THEN
NOT DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Source, _Target);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_DEMON_HAND_HIT", (CHARACTERGUID)_Source)
THEN
LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Source, _Target);

PROC
LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath((CHARACTERGUID)_Source, (CHARACTERGUID)_Target)
AND
DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Source, _OtherTarget)
THEN
NOT DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Source, _OtherTarget);

PROC
LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath((CHARACTERGUID)_Source, (CHARACTERGUID)_Target)
THEN
DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Source, _Target);

PROC
LLWEAPONEX_Uniques_DemonGauntlet_OnDemonKilledTarget((CHARACTERGUID)_Target)
AND
DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Source, _Target)
THEN
NOT DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Source, _Target);
PlayEffect(_Source, "LLWEAPONEX_FX_Status_DemonHandDefense_Impact_Back_01", "Dummy_BackFX_R");
ApplyStatus(_Source, "LLWEAPONEX_DEMON_HAND_BONUS_CRIT", -1.0, 0, _Source);

IF
CharacterStatusRemoved(_Target, "LLWEAPONEX_DEMON_HAND_HIT", _)
AND
DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Source, _Target)
THEN
NOT DB_LLWEAPONEX_Uniques_DemonGauntlet_ListenForDeath(_Source, _Target);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLWEAPONEX_Timers_DemonGauntlet_RemoveCritBonus")
AND
HasActiveStatus(_Player, "LLWEAPONEX_DEMON_HAND_BONUS_CRIT", 1)
THEN
RemoveStatus(_Player, "LLWEAPONEX_DEMON_HAND_BONUS_CRIT");
//END_REGION

//REGION MAGIC_MISSILE_WAND_MODE
IF
ItemTemplateAddedToCharacter(WPN_UNIQUE_LLWEAPONEX_Wand_1H_MagicMissile_A_67ef34e7-5f50-4ef9-9e40-8c7c04884812, _Item, _Player)
AND
NOT LLWEAPONEX_Rods_QRY_SkillVarsSet(_Item)
AND
DB_LLWEAPONEX_Rods_Skills("LLWEAPONEX_ROD_MAGIC_MISSILE", _MainhandSkill, _OffhandSkill)
THEN
SetVarString(_Item, "LLWEAPONEX_Rod_Skill", _MainhandSkill);
SetVarString(_Item, "LLWEAPONEX_Rod_Skill_Offhand", _OffhandSkill);

IF
ItemTemplateAddedToCharacter(WPN_UNIQUE_LLWEAPONEX_Rod_1H_MagicMissile_A_1566e0f6-3718-40b4-a7ff-e2c07c3cbd96, _Item, _Player)
AND
NOT LLWEAPONEX_Rods_QRY_SkillVarsSet(_Item)
AND
DB_LLWEAPONEX_Rods_Skills("LLWEAPONEX_ROD_MAGIC_MISSILE", _MainhandSkill, _OffhandSkill)
THEN
SetVarString(_Item, "LLWEAPONEX_Rod_Skill", _MainhandSkill);
SetVarString(_Item, "LLWEAPONEX_Rod_Skill_Offhand", _OffhandSkill);

IF
SkillCast(_Player, "Shout_LLWEAPONEX_Rods_MagicMissile_ToggleMode", _, _)
THEN
LLWEAPONEX_Uniques_MagicMissileWand_ChangeMode(_Player);

PROC
LLWEAPONEX_Uniques_MagicMissileWand_ChangeMode((CHARACTERGUID)_Player)
AND
NOT DB_LLWEAPONEX_Uniques_Temp_MagicMissileModeChanged(_Player)
AND
GetItemForItemTemplateInInventory(_Player, "WPN_UNIQUE_LLWEAPONEX_Wand_1H_MagicMissile_A_67ef34e7-5f50-4ef9-9e40-8c7c04884812", _Weapon)
THEN
DB_LLWEAPONEX_Uniques_Temp_MagicMissileModeChanged(_Player);
CharacterUnequipItem(_Player, _Weapon);
LeaderLib_Timers_StartObjectObjectTimer(_Player, _Weapon, 50, "LLWEAPONEX_Timers_Uniques_TransformMagicMissile_WandToRod", "LLWEAPONEX_Uniques_TransformMagicMissile_WandToRod");

PROC
LLWEAPONEX_Uniques_MagicMissileWand_ChangeMode((CHARACTERGUID)_Player)
AND
NOT DB_LLWEAPONEX_Uniques_Temp_MagicMissileModeChanged(_Player)
AND
GetItemForItemTemplateInInventory(_Player, "WPN_UNIQUE_LLWEAPONEX_Rod_1H_MagicMissile_A_1566e0f6-3718-40b4-a7ff-e2c07c3cbd96", _Weapon)
THEN
DB_LLWEAPONEX_Uniques_Temp_MagicMissileModeChanged(_Player);
CharacterUnequipItem(_Player, _Weapon);
LeaderLib_Timers_StartObjectObjectTimer(_Player, _Weapon, 50, "LLWEAPONEX_Timers_Uniques_TransformMagicMissile_RodToWand", "LLWEAPONEX_Uniques_TransformMagicMissile_RodToWand");

PROC
LLWEAPONEX_Uniques_MagicMissileWand_ChangeMode((CHARACTERGUID)_Player)
AND
DB_LLWEAPONEX_Uniques_Temp_MagicMissileModeChanged(_Player)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_MagicMissileModeChanged(_Player);

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((CHARACTERGUID)_Player, (ITEMGUID)_Weapon, "LLWEAPONEX_Uniques_TransformMagicMissile_WandToRod")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ObjectObjectTimerFinished] Transforming Wand of Magic Missile to Rod form.");
Transform(_Weapon, "WPN_UNIQUE_LLWEAPONEX_Rod_1H_MagicMissile_A_1566e0f6-3718-40b4-a7ff-e2c07c3cbd96", 1, 1, 1);
DB_LLWEAPONEX_Rods_Temp_ListenForRodSkill(_Player, _Weapon); // So the rod shoot skills get added
LeaderLib_Timers_StartObjectObjectTimer(_Player, _Weapon, 50, "LLWEAPONEX_Timers_Uniques_TransformMagicMissile_Equip", "LLWEAPONEX_Uniques_TransformMagicMissile_Equip");

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((CHARACTERGUID)_Player, (ITEMGUID)_Weapon, "LLWEAPONEX_Uniques_TransformMagicMissile_RodToWand")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ObjectObjectTimerFinished] Transforming Rod of Magic Missile to Wand form.");
Transform(_Weapon, "WPN_UNIQUE_LLWEAPONEX_Wand_1H_MagicMissile_A_67ef34e7-5f50-4ef9-9e40-8c7c04884812", 1, 1, 1);
LeaderLib_Timers_StartObjectObjectTimer(_Player, _Weapon, 50, "LLWEAPONEX_Timers_Uniques_TransformMagicMissile_Equip", "LLWEAPONEX_Uniques_TransformMagicMissile_Equip");

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((CHARACTERGUID)_Player, (ITEMGUID)_Weapon, "LLWEAPONEX_Uniques_TransformMagicMissile_Equip")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ObjectObjectTimerFinished] Equipping Magic Missile wand/rod.");
CharacterEquipItem(_Player, _Weapon);
//END_REGION

//REGION MAGIC_MISSILE_BONUS_HITS
IF
CharacterStartAttackObject(_Target, _, _Source)
AND
HasActiveStatus(_Source, "LLWEAPONEX_WAND_MAGIC_MISSILE", 1)
THEN
LeaderLib_Timers_StartObjectObjectTimer(_Source, _Target, 580, "LLWEAPONEX_Timers_MagicMissile_Roll", "LLWEAPONEX_MagicMissile_RollForBonuses");

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((CHARACTERGUID)_Source, (GUIDSTRING)_Target, "LLWEAPONEX_MagicMissile_RollForBonuses")
THEN
LLWEAPONEX_Uniques_MagicMissileWand_RollForBonusMissiles(_Source, _Target);

PROC
LLWEAPONEX_Uniques_MagicMissileWand_RollForBonusMissiles((CHARACTERGUID)_Source, (GUIDSTRING)_Target)
AND
LeaderLib_Roll_QRY(450)
THEN
SetVarInteger(_Source, "LLWEAPONEX_MagicMissile_Missile1", 1);
DB_LLWEAPONEX_Uniques_Temp_MagicMissileBonusSuccess(_Source, _Target);

PROC
LLWEAPONEX_Uniques_MagicMissileWand_RollForBonusMissiles((CHARACTERGUID)_Source, (GUIDSTRING)_Target)
AND
LeaderLib_Roll_QRY(300)
THEN
SetVarInteger(_Source, "LLWEAPONEX_MagicMissile_Missile2", 1);
DB_LLWEAPONEX_Uniques_Temp_MagicMissileBonusSuccess(_Source, _Target);

PROC
LLWEAPONEX_Uniques_MagicMissileWand_RollForBonusMissiles((CHARACTERGUID)_Source, (GUIDSTRING)_Target)
AND
LeaderLib_Roll_QRY(100)
THEN
SetVarInteger(_Source, "LLWEAPONEX_MagicMissile_Missile3", 1);
DB_LLWEAPONEX_Uniques_Temp_MagicMissileBonusSuccess(_Source, _Target);

PROC
LLWEAPONEX_Uniques_MagicMissileWand_RollForBonusMissiles((CHARACTERGUID)_Source, (GUIDSTRING)_Target)
AND
DB_LLWEAPONEX_Uniques_Temp_MagicMissileBonusSuccess(_Source, _Target)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_MagicMissileBonusSuccess(_Source, _Target);
LLWEAPONEX_Uniques_MagicMissileWand_Internal_RollSuccess(_Source, _Target, "LLWEAPONEX_MagicMissile_FireBonusMissile");

PROC
LLWEAPONEX_Uniques_MagicMissileWand_Internal_RollSuccess((CHARACTERGUID)_Source, (GUIDSTRING)_Target, (STRING)_Event)
AND
ObjectIsCharacter(_Target, 1)
THEN
CharacterCharacterSetEvent(_Source, (CHARACTERGUID)_Target, _Event);

PROC
LLWEAPONEX_Uniques_MagicMissileWand_Internal_RollSuccess((CHARACTERGUID)_Source, (GUIDSTRING)_Target, (STRING)_Event)
AND
ObjectIsItem(_Target, 1)
THEN
CharacterItemSetEvent(_Source, (ITEMGUID)_Target, _Event);

/*
IF
CharacterStatusApplied(_Character, "LLWEAPONEX_MAGIC_MISSILE_BONUS1", (CHARACTERGUID)_Source)
THEN
CharacterCharacterSetEvent(_Source, _Character, "LLWEAPONEX_MagicMissile_FireBonusMissile1");

IF
CharacterStatusApplied(_Character, "LLWEAPONEX_MAGIC_MISSILE_BONUS2", (CHARACTERGUID)_Source)
THEN
CharacterCharacterSetEvent(_Source, _Character, "LLWEAPONEX_MagicMissile_FireBonusMissile2");

IF
CharacterStatusApplied(_Character, "LLWEAPONEX_MAGIC_MISSILE_BONUS3", (CHARACTERGUID)_Source)
THEN
CharacterCharacterSetEvent(_Source, _Character, "LLWEAPONEX_MagicMissile_FireBonusMissile3");
*/
//END_REGION

//REGION POWER_POLE
/* Doesn't work since a skill is needed to attach effects to weapon bones
IF
CharacterUsedSkill(_Player, "Cone_GroundSmash", _, _)
AND
CharacterHasSkill(_Player, "Zone_LLWEAPONEX_PowerPoleSmash", 1)
THEN
PlayEffect(_Player, "LLWEAPONEX_FX_Skills_PowerPoleSmash_Cast_Pole_01", "Dummy_FX_01");
*/
//END_REGION

//REGION SOUL_HARVESTER
IF
CharacterStatusAttempt(_Target, "LLWEAPONEX_SOULHARVEST_REAP", (CHARACTERGUID)_Source)
THEN
DB_LLWEAPONEX_Uniques_Temp_SoulHarvest_ListenForDeath(_Source, _Target);

IF
CharacterDied(_Target)
AND
DB_LLWEAPONEX_Uniques_Temp_SoulHarvest_ListenForDeath(_Source, _Target)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_SoulHarvest_ListenForDeath(_Source, _Target);
ApplyStatus(_Source, "LLWEAPONEX_SOULHARVEST_DAMAGE_BONUS_APPLY", 0.0, 0, _Source);

IF
SkillCast(_Source, "Cone_LLWEAPONEX_SoulHarvest_Reap", _, _)
THEN
ProcObjectTimerCancel(_Source, "LLWEAPONEX_TImers_SoulHarvest_ClearReaping");
ProcObjectTimer(_Source, "LLWEAPONEX_TImers_SoulHarvest_ClearReaping", 1250);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Source, "LLWEAPONEX_TImers_SoulHarvest_ClearReaping")
AND
DB_LLWEAPONEX_Uniques_Temp_SoulHarvest_ListenForDeath(_Source, _Target)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_SoulHarvest_ListenForDeath(_Source, _Target);
//END_REGION

//REGION WARCHIEFS_HALBERD
IF
SkillCast(_Player, "Shout_LLWEAPONEX_Warchief_SwitchMode", _, _)
THEN
ProcObjectTimer(_Player, "LLWEAPONEX_Timers_Warchief_StartModeToggle", 900);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLWEAPONEX_Timers_Warchief_StartModeToggle")
AND
CharacterGetEquippedItem(_Player, "Weapon", (ITEMGUID)_Halberd)
THEN
CharacterUnequipItem(_Player, _Halberd);
LeaderLib_Timers_StartCharacterItemTimer(_Player, _Halberd, 25, "LLWEAPONEX_Timers_SwapWarchiefMode", "LLWEAPONEX_SwapWarchiefMode");

IF
CharacterItemEvent(_Player, _Halberd, "LLWEAPONEX_SwapWarchiefMode")
AND
GetTemplate(_Halberd, _Template)
AND
CharacterGetLevel(_Player, _Level)
THEN
LLWEAPONEX_Uniques_SwapWarchiefMode(_Player, _Halberd, _Level, _Template);

PROC
LLWEAPONEX_Uniques_SwapWarchiefMode((CHARACTERGUID)_Player, (ITEMGUID)_Halberd, (INTEGER)_Level, "WPN_UNIQUE_LLWEAPONEX_Axe_Halberd_2H_Warchief_A_76ab9d36-2f5f-4cb1-822d-2da2040a5347")
THEN
Transform(_Halberd, "WPN_UNIQUE_LLWEAPONEX_Spear_Halberd_2H_Warchief_A_93acdd5a-dc43-4cdc-90cf-560b310d5f08", 1, 1, 1);

PROC
LLWEAPONEX_Uniques_SwapWarchiefMode((CHARACTERGUID)_Player, (ITEMGUID)_Halberd, (INTEGER)_Level, "WPN_UNIQUE_LLWEAPONEX_Spear_Halberd_2H_Warchief_A_93acdd5a-dc43-4cdc-90cf-560b310d5f08")
THEN
Transform(_Halberd, "WPN_UNIQUE_LLWEAPONEX_Axe_Halberd_2H_Warchief_A_76ab9d36-2f5f-4cb1-822d-2da2040a5347", 1, 1, 1);

PROC
LLWEAPONEX_Uniques_SwapWarchiefMode((CHARACTERGUID)_Player, (ITEMGUID)_Halberd, (INTEGER)_Level, (STRING)_Template)
THEN
ItemLevelUpTo(_Halberd, _Level);
LeaderLib_Timers_StartCharacterItemTimer(_Player, _Halberd, 25, "LLWEAPONEX_Timers_SwapWarchiefMode_Equip", "LeaderLib_Commands_EquipItem");
//END_REGION

//REGION DRAGON_BONE_CLAWS
//WPN_UNIQUE_LLWEAPONEX_DragonBoneClaws_A_1f7c15a2-a2ba-484a-9b7c-acb7f0e25ec5
//EQ_UNIQUE_LLWEAPONEX_DragonBoneClaws_A_ce535023-af7f-46a3-bd70-85c8f820dc21
IF
ItemTemplateEquipped("WPN_UNIQUE_LLWEAPONEX_DragonBoneClaws_A_1f7c15a2-a2ba-484a-9b7c-acb7f0e25ec5", _Char)
AND
CharacterGetEquippedItem(_Char, "Weapon", (ITEMGUID)_Claws)
THEN
ItemLockUnEquip(_Claws, 1);

IF
ItemUnEquipFailed(_Claws, _Char)
AND
GetTemplate(_Claws, "WPN_UNIQUE_LLWEAPONEX_DragonBoneClaws_A_1f7c15a2-a2ba-484a-9b7c-acb7f0e25ec5")
THEN
ShowNotification(_Char, "LLWEAPONEX_Notifications_UnequipDragonBoneClawsFailed");

/*
IF
ItemTemplateUnEquipped("WPN_UNIQUE_LLWEAPONEX_DragonBoneClaws_A_1f7c15a2-a2ba-484a-9b7c-acb7f0e25ec5", _Char)
AND
CharacterGetEquippedItem(_Char, "Gloves", (ITEMGUID)_Claws)
AND
GetTemplate(_Claws, "EQ_UNIQUE_LLWEAPONEX_DragonBoneClaws_A_ce535023-af7f-46a3-bd70-85c8f820dc21")
THEN
CharacterUnequipItem(_Char, _Claws);
*/
//END_REGION

//REGION ARM_CANNON_WEAPON
IF
ItemTemplateEquipped("EQ_UNIQUE_LLWEAPONEX_ArmCannon_A_8a02d95d-dd91-4d97-9265-c3254923f9ee", _Char)
AND
CharacterGetEquippedItem(_Char, "Gloves", (ITEMGUID)_ArmCannon)
THEN
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon);
CharacterAddSkill(_Char, "Zone_LLWEAPONEX_ArmCannon_Disperse", 0);

IF
ItemTemplateUnEquipped("EQ_UNIQUE_LLWEAPONEX_ArmCannon_A_8a02d95d-dd91-4d97-9265-c3254923f9ee", _Char)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
AND
GetVarObject(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon", (ITEMGUID)_ArmCannonWeapon)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon);
CharacterRemoveSkill(_Char, "Zone_LLWEAPONEX_ArmCannon_Disperse");
ItemLockUnEquip(_ArmCannonWeapon, 0);
CharacterUnequipItem(_Char, _ArmCannonWeapon);
ItemToInventory(_ArmCannonWeapon, _ArmCannon, 1, 0, 0);

IF
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
AND
NOT LeaderLib_Helper_QRY_VariableObjectIsSet(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon")
AND
CharacterGetEquippedItem(_Char, "Weapon", (ITEMGUID)_Item)
AND
GetTemplate(_Item, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec")
THEN
SetVarObject(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon", _Item);

IF
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
AND
LeaderLib_Helper_QRY_VariableObjectIsSet(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon")
THEN
LLWEAPONEX_Uniques_ArmCannon_EquipWeapon(_Char, _ArmCannon);

IF
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
AND
NOT LeaderLib_Helper_QRY_VariableObjectIsSet(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ArmCannon] No arm cannon weapon found. Iterating.");
//InventoryLaunchTemplateIterator(_ArmCannon, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec", "LLWEAPONEX_Iterator_ArmCannonWeaponFound", "");
InventoryLaunchIterator(_ArmCannon, "LLWEAPONEX_Iterator_ArmCannonWeaponFound", "");
LeaderLib_Timers_StartCharacterItemTimer(_Char, _ArmCannon, 250, "LLWEAPONEX_Timers_ArmCannonIteratorDone", "LLWEAPONEX_ArmCannonIteratorDone");

IF
StoryEvent((ITEMGUID)_ArmCannonWeapon, "LLWEAPONEX_Iterator_ArmCannonWeaponFound")
AND
GetTemplate(_ArmCannonWeapon, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec")
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ArmCannon(Iterator)] Found the arm cannon weapon inside the arm cannon glove. Setting var and equipping.");
SetVarObject(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon", _ArmCannonWeapon);

IF
StoryEvent((ITEMGUID)_Item, "LLWEAPONEX_Iterator_ArmCannonWeaponFound")
AND
String(_Item, _Str)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ArmCannon(Iterator)] Found [",_Str,"] in arm cannon.");

IF
CharacterItemEvent(_Char, _ArmCannon, "LLWEAPONEX_ArmCannonIteratorDone")
AND
LeaderLib_Helper_QRY_VariableObjectIsSet(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ArmCannon(Iterator)] Var was set. Equipping.");
LLWEAPONEX_Uniques_ArmCannon_EquipWeapon(_Char, _ArmCannon);

IF
CharacterItemEvent(_Char, _ArmCannon, "LLWEAPONEX_ArmCannonIteratorDone")
AND
NOT LeaderLib_Helper_QRY_VariableObjectIsSet(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon")
AND
GetPosition(_Char, _x, _y, _z)
AND
CreateItemTemplateAtPosition("WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec", _x, _y, _z, _ArmCannonWeapon)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:ArmCannon(Iterator)] Var was not set. Created a new arm cannon weapon. Equipping.");
SetVarObject(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon", _ArmCannonWeapon);
LLWEAPONEX_Uniques_ArmCannon_EquipWeapon(_Char, _ArmCannon);

QRY
LLWEAPONEX_Uniques_ArmCannon_QRY_UnequipCurrentWeapon((CHARACTERGUID)_Char)
AND
NOT LeaderLib_Helper_QRY_HasItemInSlot(_Char, "Weapon")
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Uniques_ArmCannon_QRY_UnequipCurrentWeapon((CHARACTERGUID)_Char)
AND
CharacterGetEquippedItem(_Char, "Weapon", (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
ItemIsLocked(_Item, 0)
AND
NOT GetTemplate(_Item, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec")
THEN
CharacterUnequipItem(_Char, _Item);
ItemToInventory(_Item, _Char, 1, 0, 0);

PROC
LLWEAPONEX_Uniques_ArmCannon_EquipWeapon((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
LLWEAPONEX_Uniques_ArmCannon_QRY_UnequipCurrentWeapon(_Char)
AND
GetVarObject(_ArmCannon, "LLWEAPONEX_ArmCannon_Weapon", (ITEMGUID)_ArmCannonWeapon)
THEN
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipSuccess(_Char, _ArmCannon);
CharacterEquipItem(_Char, _ArmCannonWeapon);
ItemLockUnEquip(_ArmCannonWeapon, 1);

PROC
LLWEAPONEX_Uniques_ArmCannon_EquipWeapon((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
NOT DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipSuccess(_Char, _ArmCannon)
THEN
//Locked weapon in mainhand?
CharacterUnequipItem(_Char, _ArmCannon);

PROC
LLWEAPONEX_Uniques_ArmCannon_EquipWeapon((CHARACTERGUID)_Char, (ITEMGUID)_ArmCannon)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipSuccess(_Char, _ArmCannon)
THEN
NOT DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipSuccess(_Char, _ArmCannon);
//END_REGION

//REGION ARM_CANNON_BLOCK_SHIELD_WEAPON
PROC
ProcBlockUseOfItem((CHARACTERGUID)_Char, (ITEMGUID)_Weapon)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
AND
NOT GetTemplate(_Weapon, "WPN_UNIQUE_LLWEAPONEX_ArmCannon_A_3b11f892-f6ae-43c8-af73-bcdf5abf64ec")
AND
ItemIsEquipable(_Weapon, 1)
AND
LLWEAPONEX_QRY_ItemIsWeapon(_Weapon)
THEN
DB_CustomUseItemResponse(_Char, _Weapon, 0);
ShowNotification(_Char, "LLWEAPONEX_Notifications_ArmCannonShieldBlocked");
//END_REGION

//REGION ARM_CANNON_MECHANICS
IF
CharacterStatusApplied(_Target, "LLWEAPONEX_ARMCANNON_HIT", (CHARACTERGUID)_Char)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
THEN
LeaderLib_Helper_ModifyVariableInt(_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", 1, 3);

PROC
LeaderLib_Helper_OnVariableIntChanged((ITEMGUID)_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", (INTEGER)_LastValue, (INTEGER)_NextValue)
THEN
LeaderLog_LogInt("DEBUG", "[LLWEAPONEX_20_UniqueEquipment:OnVariableChanged] LLWEAPONEX_ArmCannon_Energy set to ",_LastValue, " => ",_NextValue, "");

PROC
LeaderLib_Helper_OnVariableIntChanged((ITEMGUID)_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", (INTEGER)_LastValue, 3)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
THEN
SetTag(_Char, "LLWEAPONEX_ArmCannon_FullyCharged");

IF
SkillCast(_Char, "Zone_LLWEAPONEX_ArmCannon_Disperse", _, _)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
THEN
LeaderLib_Helper_SetVariableInt(_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", 0);

PROC
LeaderLib_Helper_OnVariableIntChanged((ITEMGUID)_ArmCannon, "LLWEAPONEX_ArmCannon_Energy", (INTEGER)_LastValue, 0)
AND
DB_LLWEAPONEX_Uniques_Temp_ArmCannonEquipped(_Char, _ArmCannon)
THEN
ClearTag(_Char, "LLWEAPONEX_ArmCannon_FullyCharged");

IF
CharacterUsedSkillAtPosition(_Char, _x, _y, _z, "Target_LLWEAPONEX_ArmCannon_AbsorbSurface", _, _)
THEN
SetVarFloat3(_Char, "LLWEAPONEX_SurfaceAbsorbPosition", _x, _y, _z);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_00_PostCC"