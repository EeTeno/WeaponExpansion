Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLWEAPONEX_Grimoire_InitSettings();

KBSECTION
//REGION SETTINGS
PROC
LLWEAPONEX_Grimoire_InitSettings()
THEN

DB_LLWEAPONEX_Grimoire_Tags("WPN_UNIQUE_LLWEAPONEX_Grimoire_Death_3ef2d9c5-13e3-48a2-ab11-36f118ec7e67", "LLWEAPONEX_Grimoire_Death");
DB_LLWEAPONEX_Grimoire_Tags("WPN_UNIQUE_LLWEAPONEX_Grimoire_Mimicry_c9fcc947-4423-40b9-9629-ae2d1e156dfc", "LLWEAPONEX_Grimoire_Mimicry");
DB_LLWEAPONEX_Grimoire_Tags("WPN_UNIQUE_LLWEAPONEX_Grimoire_Swap_f4227e7f-86df-498f-817c-fc00896eb040", "LLWEAPONEX_Grimoire_Swap");
DB_LLWEAPONEX_Grimoire_Tags("WPN_UNIQUE_LLWEAPONEX_Grimoire_Wind_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216", "LLWEAPONEX_Grimoire_Wind");

DB_LLWEAPONEX_Grimoire_LoopFX("WPN_UNIQUE_LLWEAPONEX_Grimoire_Death_3ef2d9c5-13e3-48a2-ab11-36f118ec7e67", "LLWEAPONEX_FX_Items_Grimoire_Death_A", "LLWEAPONEX_FX_Grimoire_Equipped_Sheathed_Death_A", "LLWEAPONEX_FX_Grimoire_Equipped_Unsheathed_Death_A", "LLWEAPONEX_FX_Grimoire_Equipped_Transition_Death_A");
DB_LLWEAPONEX_Grimoire_LoopFX("WPN_UNIQUE_LLWEAPONEX_Grimoire_Mimicry_c9fcc947-4423-40b9-9629-ae2d1e156dfc", "LLWEAPONEX_FX_Items_Grimoire_Mimicry_A", "LLWEAPONEX_FX_Grimoire_Equipped_Sheathed_Mimicry_A", "LLWEAPONEX_FX_Grimoire_Equipped_Unsheathed_Mimicry_A", "LLWEAPONEX_FX_Grimoire_Equipped_Transition_Mimicry_A");
DB_LLWEAPONEX_Grimoire_LoopFX("WPN_UNIQUE_LLWEAPONEX_Grimoire_Swap_f4227e7f-86df-498f-817c-fc00896eb040", "LLWEAPONEX_FX_Items_Grimoire_Swap_A", "LLWEAPONEX_FX_Grimoire_Equipped_Sheathed_Swap_A", "LLWEAPONEX_FX_Grimoire_Equipped_Unsheathed_Swap_A", "LLWEAPONEX_FX_Grimoire_Equipped_Transition_Swap_A");
DB_LLWEAPONEX_Grimoire_LoopFX("WPN_UNIQUE_LLWEAPONEX_Grimoire_Wind_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216", "LLWEAPONEX_FX_Items_Grimoire_Wind_A", "LLWEAPONEX_FX_Grimoire_Equipped_Sheathed_Wind_A", "LLWEAPONEX_FX_Grimoire_Equipped_Unsheathed_Wind_A", "LLWEAPONEX_FX_Grimoire_Equipped_Transition_Wind_A");

DB_LLWEAPONEX_Grimoire_ActiveStatus("WPN_UNIQUE_LLWEAPONEX_Grimoire_Death_3ef2d9c5-13e3-48a2-ab11-36f118ec7e67", "LLWEAPONEX_GRIMOIRE_DEATH_ACTIVE");
DB_LLWEAPONEX_Grimoire_ActiveStatus("WPN_UNIQUE_LLWEAPONEX_Grimoire_Mimicry_c9fcc947-4423-40b9-9629-ae2d1e156dfc", "LLWEAPONEX_GRIMOIRE_MIMICRY_ACTIVE");
DB_LLWEAPONEX_Grimoire_ActiveStatus("WPN_UNIQUE_LLWEAPONEX_Grimoire_Swap_f4227e7f-86df-498f-817c-fc00896eb040", "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE");
DB_LLWEAPONEX_Grimoire_ActiveStatus("WPN_UNIQUE_LLWEAPONEX_Grimoire_Wind_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216", "LLWEAPONEX_GRIMOIRE_WIND_ACTIVE");

//Statuses to remove when the "active" status is removed
DB_LLWEAPONEX_Grimoire_GrimoireStatuses("LLWEAPONEX_GRIMOIRE_MIMICRY_ACTIVE", "LLWEAPONEX_GRIMOIRE_MIMIC_COUNTDOWN");
DB_LLWEAPONEX_Grimoire_GrimoireStatuses("LLWEAPONEX_GRIMOIRE_MIMICRY_ACTIVE", "LLWEAPONEX_GRIMOIRE_MIMIC_READY");
DB_LLWEAPONEX_Grimoire_GrimoireStatuses("LLWEAPONEX_GRIMOIRE_DEATH_ACTIVE", "LLWEAPONEX_GRIMOIRE_DEATH_TORMENT_BONUS");

DB_LLWEAPONEX_Grimoire_MagicWhitelist("Death", "LLWEAPONEX_GRIMOIRE_DEATH_ACTIVE", "", "Necromancy", 1);
DB_LLWEAPONEX_Grimoire_MagicWhitelist("Swap", "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", "teleportation", "", -1);
//DB_LLWEAPONEX_Grimoire_MagicWhitelist("Swap", "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", "jump", "");
DB_LLWEAPONEX_Grimoire_MagicWhitelist("Wind", "LLWEAPONEX_GRIMOIRE_WIND_ACTIVE", "", "Air", 1);
//DB_LLWEAPONEX_Grimoire_MagicWhitelist("Wind", "LLWEAPONEX_GRIMOIRE_WIND_ACTIVE", "shout", "Air");

//DB_LLWEAPONEX_Grimoire_PositionOffset(0, 0.493618, -0.701302);
//DB_LLWEAPONEX_Grimoire_PositionOffset(1, 0.493618, 0.701302);

DB_LLWEAPONEX_Grimoire_PositionOffset(0, 0.5, -1.5);
DB_LLWEAPONEX_Grimoire_PositionOffset(1, 0.5, 1.5);
//DB_LLWEAPONEX_Grimoire_PositionOffset(0, 0.8, -0.6);
//DB_LLWEAPONEX_Grimoire_PositionOffset(1, 0.8, 1.6);

PROC
LLWEAPONEX_Grimoire_InitSettings()
AND
DB_LLWEAPONEX_Grimoire_Tags(_Template, _Tag)
THEN
DB_LeaderLib_Helper_EquipmentCopyBlacklist_Templates("WeaponExpansion.Blacklist", _Template);
//END_REGION

//REGION UPDATES
PROC
LeaderUpdater_ModUpdated("WeaponExpansion", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 0, 9, 3, 9)
THEN
SysClear("DB_LLWEAPONEX_Grimoire_MagicWhitelist", 3);
LLWEAPONEX_Grimoire_InitSettings();

//Clear magic matches if no grimoires are active, and the DB is decently large.
PROC
LeaderUpdater_ModUpdated("WeaponExpansion", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
NOT SysIsActive("LLWEAPONEX_80_02_Grimoire__Main")
AND
SysCount("DB_LLWEAPONEX_Grimoire_Temp_MagicMatch", 2, _Count)
AND
_Count > 40
THEN
SysClear("DB_LLWEAPONEX_Grimoire_Temp_MagicMatch", 2);
LeaderLog_LogInt("DEBUG", "[WeaponExpansion:Grimoire:LeaderUpdater_ModUpdated] [DB_LLWEAPONEX_Grimoire_Temp_MagicMatch] size too large. Clearing. Count: [",_Count,"]/[40]");
//END_REGION

//REGION BEAM_FX
//Sheathed
PROC
LLWEAPONEX_Grimoire_ShootBeamFX((CHARACTERGUID)_Player, (GUIDSTRING)_Target, (STRING)_FX, (STRING)_TargetBone, 0)
THEN
PlayBeamEffect(_Player, _Target, _FX, "Dummy_BackFX_L", _TargetBone);

//Unsheathed
PROC
LLWEAPONEX_Grimoire_ShootBeamFX((CHARACTERGUID)_Player, (GUIDSTRING)_Target, (STRING)_FX, (STRING)_TargetBone, 1)
THEN
PlayBeamEffect(_Player, _Target, _FX, "Dummy_FrontFX_L", _TargetBone);

//Sheathed
PROC
LLWEAPONEX_Grimoire_ReceiveBeamFX((CHARACTERGUID)_Player, (GUIDSTRING)_Target, (STRING)_FX, (STRING)_TargetBone, 0)
THEN
PlayBeamEffect(_Target, _Player, _FX, _TargetBone, "Dummy_BackFX_L");
LeaderLog_Log("DEBUG", "[WeaponExpansion:Grimoire:ReceiveBeamFX] Playing beam effect [",_FX,"] from bone [",_TargetBone,"] to [Dummy_BackFX_L]");

//Unsheathed
PROC
LLWEAPONEX_Grimoire_ReceiveBeamFX((CHARACTERGUID)_Player, (GUIDSTRING)_Target, (STRING)_FX, (STRING)_TargetBone, 1)
THEN
PlayBeamEffect(_Target, _Player, _FX, _TargetBone, "Dummy_FrontFX_L");
LeaderLog_Log("DEBUG", "[WeaponExpansion:Grimoire:ReceiveBeamFX] Playing beam effect [",_FX,"] from bone [",_TargetBone,"] to [Dummy_FrontFX_L]");
//END_REGION

//REGION EQUIP_EVENTS
QRY
LLWEAPONEX_Grimoire_QRY_GrimoireIsEquipped((CHARACTERGUID)_Character)
AND
CharacterGetEquippedItem(_Character, "Shield", _Item)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire", 1)
THEN
DB_NOOP(1);

IF
ItemUnEquipped(_Item, _Character)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire", 1)
THEN
LLWEAPONEX_ToggleSettings_OnTagRemoved(_Character, "LLWEAPONEX_Grimoire");
LLWEAPONEX_Grimoire_OnGrimoireUnEquipped(_Character, _Item);

PROC
LLWEAPONEX_Grimoire_OnGrimoireUnEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetTemplate(_Item, _Template)
AND
DB_LLWEAPONEX_Grimoire_Tags(_Template, _Tag)
THEN
LLWEAPONEX_ToggleSettings_OnTagRemoved(_Character, _Tag);

PROC
LLWEAPONEX_Grimoire_OnGrimoireUnEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
NOT LLWEAPONEX_Grimoire_QRY_GrimoireIsEquipped(_Character)
THEN
ObjectClearFlag(_Character, "LLWEAPONEX_GrimoireEquipped");

IF
ItemEquipped(_Item, _Character)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire", 1)
AND
IsTagged(_Item, "LLMIME_MIMICKED_WEAPON", 0)
THEN
ObjectSetFlag(_Character, "LLWEAPONEX_GrimoireEquipped");
LLWEAPONEX_Grimoire_OnGrimoireEquipped(_Character, _Item);
LLWEAPONEX_ToggleSettings_OnTagAdded(_Character, "LLWEAPONEX_Grimoire");

PROC
LLWEAPONEX_Grimoire_OnGrimoireEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetTemplate(_Item, _Template)
AND
DB_LLWEAPONEX_Grimoire_Tags(_Template, _Tag)
THEN
LLWEAPONEX_ToggleSettings_OnTagAdded(_Character, _Tag);
//END_REGION

//REGION UNEQUIPPED_STATUS_REMOVAL
PROC
LLWEAPONEX_Grimoire_OnGrimoireUnEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetTemplate(_Item, _Template)
AND
DB_LLWEAPONEX_Grimoire_ActiveStatus(_Template, _Status)
THEN
RemoveStatus(_Character, _Status);

IF
CharacterStatusRemoved(_Character, _ActiveStatus, _)
AND
DB_LLWEAPONEX_Grimoire_GrimoireStatuses(_ActiveStatus, _OtherStatus)
THEN
RemoveStatus(_Character, _OtherStatus);
//END_REGION

//REGION ITEM_FX
/*
IF
ItemDropped(_Item)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire", 1)
AND
IsTagged(_Item, "LLMIME_MIMICKED_WEAPON", 0)
THEN
SetStoryEvent(_Item, "LLWEAPONEX_Grimoire_StartItemEffect");
*/

IF
StoryEvent((ITEMGUID)_Item, "LLWEAPONEX_Grimoire_StartItemEffect")
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire", 1)
AND
GetTemplate(_Item, _Template)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
//AND
//DB_CurrentLevel(_Level)
AND
PlayLoopEffect(_Item, _ItemFX, "", _Handle)
THEN
//PROC_LoopEffect(_ItemFX, _Item, "LLWEAPONEX_FX_GrimoireItemLoop", _Level, "");
DB_LLWEAPONEX_Grimoire_Temp_ItemFX(_Item, _Handle);

IF
StoryEvent((ITEMGUID)_Item, "LLWEAPONEX_Grimoire_StopItemFX")
AND
DB_LLWEAPONEX_Grimoire_Temp_ItemFX(_Item, _Handle)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_ItemFX(_Item, _Handle);
StopLoopEffect(_Handle);
//END_REGION

//REGION LOOP_FX
QRY
LLWEAPONEX_Grimoire_QRY_StateChangeLocked((CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_StateChangeLocked((CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_IsTransitioningFX(_Character, _Unsheathed)
THEN
DB_NOOP(1);

PROC
LLWEAPONEX_Grimoire_QueueStateChange((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, (INTEGER)_Unsheathed)
AND
LLWEAPONEX_Grimoire_QRY_StateChangeLocked(_Character)
THEN
LLWEAPONEX_Grimoire_Internal_ClearStateQueue(_Character);
DB_LLWEAPONEX_Grimoire_Temp_NextStateChange(_Character, _Item, _Template, _Unsheathed);
LeaderLog_LogInt("DEBUG", "[LLWEAPONEX:Grimoire:QueueStateChange] State change is locked. Queuing up next state. Unsheathed [",_Unsheathed,"]");

PROC
LLWEAPONEX_Grimoire_QueueStateChange((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, 1)
AND
NOT LLWEAPONEX_Grimoire_QRY_StateChangeLocked(_Character)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:QueueStateChange] Playing unsheathed FX.");
LLWEAPONEX_Grimoire_OnGrimoireUnsheathed(_Character, _Item, _Template);

PROC
LLWEAPONEX_Grimoire_QueueStateChange((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, 0)
AND
NOT LLWEAPONEX_Grimoire_QRY_StateChangeLocked(_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, 1)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:QueueStateChange] Unsheathed effect active. Starting transition effect.");
LLWEAPONEX_Grimoire_OnGrimoireSheathed_TransitionStart(_Character, _Item, _Template);

PROC
LLWEAPONEX_Grimoire_QueueStateChange((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, 0)
AND
NOT LLWEAPONEX_Grimoire_QRY_StateChangeLocked(_Character)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _, _, 1)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:QueueStateChange] No unsheathed effect active. Playing sheathed loop FX directly.");
LLWEAPONEX_Grimoire_OnGrimoireSheathed_PlayLoop(_Character, _Item, _Template);

PROC
LLWEAPONEX_Grimoire_Internal_ClearStateQueue((CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_NextStateChange(_Character, _Item, _Template, _Unsheathed)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_NextStateChange(_Character, _Item, _Template, _Unsheathed);

PROC
LLWEAPONEX_Grimoire_Internal_ProcessStateQueue((CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_NextStateChange(_Character, _Item, _Template, _LastUnsheathed)
AND
//HasActiveStatus(_Character, "UNSHEATHED", _Unsheathed)
CharacterIsInFightMode(_Character, _Unsheathed)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_NextStateChange(_Character, _Item, _Template, _LastUnsheathed);
LeaderLog_LogInt("DEBUG", "[LLWEAPONEX:Grimoire:ProcessStateQueue] Queuing next grimoire state: Unsheathed [",_Unsheathed,"]");
LLWEAPONEX_Grimoire_QueueStateChange(_Character, _Item, _Template, _Unsheathed);

//Grimoire swapping
PROC
LLWEAPONEX_Grimoire_OnGrimoireEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _EffectID)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:OnGrimoireEquipped] In the middle of stopping previous looped FX. Playing new FX after a delay.");
LeaderLib_Timers_StartCharacterItemTimer(_Character, _Item, 5, "LLWEAPONEX_Timers_Grimoire_StartFX", "LLWEAPONEX_Grimoire_StartEquippedFX");

IF
CharacterItemEvent(_Character, _Item, "LLWEAPONEX_Grimoire_StartEquippedFX")
AND
GetTemplate(_Item, _Template)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template);
LLWEAPONEX_Grimoire_PlayEquippedFX(_Character, _Item, _Template, _SheathedFX, _UnsheathedFX);

PROC
LLWEAPONEX_Grimoire_OnGrimoireEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _)
AND
NOT DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _)
AND
GetTemplate(_Item, _Template)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:OnGrimoireEquipped] No previous FX active. Starting equipped LoopFX.");
DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template);
LLWEAPONEX_Grimoire_PlayEquippedFX(_Character, _Item, _Template, _SheathedFX, _UnsheathedFX);

//Sheathed
PROC
LLWEAPONEX_Grimoire_PlayEquippedFX((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, (STRING)_SheathedFX, (STRING)_UnsheathedFX)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_IsSettingFX(_Character)
AND
NOT LeaderLib_Helper_QRY_HasStatus(_Character, "UNSHEATHED")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:PlayEquippedFX] Playing sheathed FX.");
DB_LLWEAPONEX_Grimoire_Temp_IsSettingFX(_Character);
LLWEAPONEX_Grimoire_SendNextEffect(_Character, _Item, _Template, _SheathedFX, "Dummy_BackFX_L", 0);

//Unsheathed
PROC
LLWEAPONEX_Grimoire_PlayEquippedFX((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, (STRING)_SheathedFX, (STRING)_UnsheathedFX)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_IsSettingFX(_Character)
AND
LeaderLib_Helper_QRY_HasStatus(_Character, "UNSHEATHED")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:PlayEquippedFX] Playing unsheathed FX.");
DB_LLWEAPONEX_Grimoire_Temp_IsSettingFX(_Character);
LLWEAPONEX_Grimoire_SendNextEffect(_Character, _Item, _Template, _UnsheathedFX, "Dummy_FrontFX_L", 1);
DB_LLWEAPONEX_Grimoire_Temp_IsTransitioningFX(_Character, 1);
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_Grimoires_UnsheathedFXLocked", 1000);
//LeaderLib_Timers_StartObjectTimer(_Character, 30, "LLWEAPONEX_Timers_StopGrimoireSheathedFX", "LLWEAPONEX_Grimoire_StopSheathedFX");

PROC
LLWEAPONEX_Grimoire_PlayEquippedFX_Force((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, (STRING)_SheathedFX, (STRING)_UnsheathedFX)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_IsSettingFX(_Character)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:PlayEquippedFX] Playing unsheathed FX (forced).");
DB_LLWEAPONEX_Grimoire_Temp_IsSettingFX(_Character);
LLWEAPONEX_Grimoire_SendNextEffect(_Character, _Item, _Template, _UnsheathedFX, "Dummy_FrontFX_L", 1);
DB_LLWEAPONEX_Grimoire_Temp_IsTransitioningFX(_Character, 1);
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_Grimoires_UnsheathedFXLocked", 1000);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_Grimoires_UnsheathedFXLocked")
AND
DB_LLWEAPONEX_Grimoire_Temp_IsTransitioningFX(_Character, 1)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_IsTransitioningFX(_Character, 1);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_Grimoires_UnsheathedFXLocked")
AND
DB_LLWEAPONEX_Grimoire_Temp_NextStateChange(_Character, _Item, _Template, _Unsheathed)
THEN
LLWEAPONEX_Grimoire_Internal_ProcessStateQueue(_Character);

PROC
LLWEAPONEX_Grimoire_SendNextEffect((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, (STRING)_Effect, (STRING)_Bone, (INTEGER)_Unsheathed)
AND
GetUUID(_Character, _UUID)
AND
StringConcatenate(_UUID, _Effect, _EffectID)
THEN
SetVarFixedString(_Character, "LLWEAPONEX_Grimoire_PlayHandleID", _EffectID);
SetVarString(_Character, "LLWEAPONEX_Grimoire_PlayFX", _Effect);
SetVarFixedString(_Character, "LLWEAPONEX_Grimoire_PlayBone", _Bone);
SetStoryEvent(_Character, "LLWEAPONEX_Grimoire_PlayLoopFX");
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, _Unsheathed);

IF
StoryEvent((CHARACTERGUID)_Character, "LLWEAPONEX_Grimoire_FX_PlayEventComplete")
AND
DB_LLWEAPONEX_Grimoire_Temp_IsSettingFX(_Character)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_IsSettingFX(_Character);

PROC
LLWEAPONEX_Grimoire_OnGrimoireUnsheathed((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template)
THEN
LLWEAPONEX_Grimoire_OnGrimoireUnsheathed(_Character, _Item, _Template, 0);

PROC
LLWEAPONEX_Grimoire_OnGrimoireUnsheathed((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, 0)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:OnGrimoireUnsheathed] Playing next unsheathed effect.");
LLWEAPONEX_Grimoire_PlayEquippedFX(_Character, _Item, _Template, _SheathedFX, _UnsheathedFX);

PROC
LLWEAPONEX_Grimoire_OnGrimoireUnsheathed((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, 1)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:OnGrimoireUnsheathed] Starting unsheathed FX (forced).");
LLWEAPONEX_Grimoire_PlayEquippedFX_Force(_Character, _Item, _Template, _SheathedFX, _UnsheathedFX);

PROC
LLWEAPONEX_Grimoire_OnGrimoireUnsheathed((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, (INTEGER)_ForceUnsheathed)
THEN
ProcObjectTimerCancel(_Character, "LLWEAPONEX_Timers_Grimoire_StopSheathedFXAfterDelay");
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_Grimoire_StopSheathedFXAfterDelay", 33);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_Grimoire_StopSheathedFXAfterDelay")
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, 0)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:OnGrimoireUnsheathed] Stopping current looped sheathed grimoire FX.");
SetVarFixedString(_Character, "LLWEAPONEX_Grimoire_StopHandleID", _EffectID);
SetVarString(_Character, "LLWEAPONEX_Grimoire_StopCompletionEvent", "LLWEAPONEX_Grimoire_ClearSheathedFX");
SetStoryEvent(_Character, "LLWEAPONEX_Grimoire_StopLoopFX");

IF
StoryEvent((CHARACTERGUID)_Character, "LLWEAPONEX_Grimoire_ClearSheathedFX")
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, 0)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, 0);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:LLWEAPONEX_Grimoire_ClearSheathedFX] Cleared sheathed FX from database.");

PROC
LLWEAPONEX_Grimoire_StopAllEffects_WithDestroy((CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, _Unsheathed)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, _Unsheathed);
DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _EffectID);
SetVarFixedString(_Character, "LLWEAPONEX_Grimoire_StopHandleID", _EffectID);
SetVarString(_Character, "LLWEAPONEX_Grimoire_StopCompletionEvent", "LLWEAPONEX_Grimoire_StopOtherFX");
SetStoryEvent(_Character, "LLWEAPONEX_Grimoire_StopLoopFX");

PROC
LLWEAPONEX_Grimoire_DestroyAllEffects((CHARACTERGUID)_Character)
AND
GetUUID(_Character, _UUID)
THEN
SetVarString(_Character, "LLWEAPONEX_UUID", _UUID);
SetStoryEvent(_Character, "LLWEAPONEX_Grimoire_DestroyAllFX");

PROC
LLWEAPONEX_Grimoire_DestroyAllEffects((CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, _Unsheathed)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, _Unsheathed);
//CharacterStopAllEffectsWithName(_Character, _Effect);

PROC
LLWEAPONEX_Grimoire_StopAllEffects_ForTemplate((CHARACTERGUID)_Character, (STRING)_Template)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
CharacterStopAllEffectsWithName(_Character, _SheathedFX);
CharacterStopAllEffectsWithName(_Character, _UnsheathedFX);
CharacterStopAllEffectsWithName(_Character, _SheathedFX);

PROC
LLWEAPONEX_Grimoire_StopAllEffects_All((CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
CharacterStopAllEffectsWithName(_Character, _SheathedFX);
CharacterStopAllEffectsWithName(_Character, _UnsheathedFX);
CharacterStopAllEffectsWithName(_Character, _SheathedFX);

PROC
LLWEAPONEX_Grimoire_ClearEffectData((CHARACTERGUID)_Character, (STRING)_Template)
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, _Unsheathed)
AND
NOT DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, _Unsheathed);
//CharacterStopAllEffectsWithName(_Character, _Effect);

PROC
LLWEAPONEX_Grimoire_ClearEffectData((CHARACTERGUID)_Character, (STRING)_Template)
AND
NOT DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _, _Template)
AND
DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _EffectID)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _EffectID);

PROC
LLWEAPONEX_Grimoire_ClearEffectData((CHARACTERGUID)_Character, (STRING)_Template)
AND
NOT DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _, _Template)
AND
DB_LLWEAPONEX_Grimoire_Temp_IsTransitioningFX(_Character, _Unsheathed)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_IsTransitioningFX(_Character, _Unsheathed);

PROC
LLWEAPONEX_Grimoire_ClearEffectData((CHARACTERGUID)_Character, (STRING)_Template)
THEN
LLWEAPONEX_Grimoire_Internal_ClearStateQueue(_Character);

IF
StoryEvent((CHARACTERGUID)_Character, "LLWEAPONEX_Grimoire_StopOtherFX")
AND
DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _EffectID)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _EffectID);

IF
StoryEvent((CHARACTERGUID)_Character, "LLWEAPONEX_Grimoire_StopOtherFX")
THEN
LLWEAPONEX_Grimoire_StopAllEffects_WithDestroy(_Character);

PROC
LLWEAPONEX_Grimoire_OnGrimoireSheathed_TransitionStart((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_IsTransitioningFX(_Character, 0)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
DB_LLWEAPONEX_Grimoire_Temp_IsTransitioningFX(_Character, 0);
PlayEffect(_Character, _TransitionFX, "Dummy_FrontFX_L");
LeaderLib_Timers_CancelObjectTimer(_Character, "LLWEAPONEX_Timers_StopGrimoireUnsheathedFX");
LeaderLib_Timers_StartObjectTimer(_Character, 30, "LLWEAPONEX_Timers_StopGrimoireUnsheathedFX", "LLWEAPONEX_Grimoire_StopUnsheathedFX");

IF
StoryEvent((CHARACTERGUID)_Character, "LLWEAPONEX_Grimoire_StopUnsheathedFX")
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, 1)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _)
THEN
DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _EffectID);
SetVarFixedString(_Character, "LLWEAPONEX_Grimoire_StopHandleID", _EffectID);
SetVarString(_Character, "LLWEAPONEX_Grimoire_StopCompletionEvent", "LLWEAPONEX_Grimoire_StartSheathedFXTimer");
SetStoryEvent(_Character, "LLWEAPONEX_Grimoire_StopLoopFX");

IF
StoryEvent((CHARACTERGUID)_Character, "LLWEAPONEX_Grimoire_StartSheathedFXTimer")
AND
DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _, _, _)
AND
NOT DB_ObjectTimer((GUIDSTRING)_Character, _, "LLWEAPONEX_Timers_Grimoires_StartSheathedFX")
THEN
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_Grimoires_StartSheathedFX");

IF
StoryEvent((CHARACTERGUID)_Character, "LLWEAPONEX_Grimoire_StartSheathedFXTimer")
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, 1)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _Effect, _EffectID, 1);
NOT DB_LLWEAPONEX_Grimoire_Temp_IsStoppingFX(_Character, _EffectID);
//ProcObjectTimerCancel(_Character, "LLWEAPONEX_Timers_Grimoires_StartSheathedFX");
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_Grimoires_StartSheathedFX", 1670);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_Grimoires_StartSheathedFX")
AND
DB_LLWEAPONEX_Grimoire_Temp_IsTransitioningFX(_Character, 0)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_IsTransitioningFX(_Character, 0);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_Grimoires_StartSheathedFX")
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_NextStateChange(_Character, _, _, _)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_IsSettingFX(_Character)
AND
DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template)
THEN
LLWEAPONEX_Grimoire_OnGrimoireSheathed_PlayLoop(_Character, _Item, _Template);

PROC
LLWEAPONEX_Grimoire_OnGrimoireSheathed_PlayLoop((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template)
AND
DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
LLWEAPONEX_Grimoire_PlayEquippedFX(_Character, _Item, _Template, _SheathedFX, _UnsheathedFX);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_Grimoires_StartSheathedFX")
AND
DB_LLWEAPONEX_Grimoire_Temp_NextStateChange(_Character, _Item, _Template, _Unsheathed)
THEN
LLWEAPONEX_Grimoire_Internal_ProcessStateQueue(_Character);

//Play the Unsheathed FX when firing grimoire magic when sheathed
IF
StoryEvent((CHARACTERGUID)_Character, "LLWEAPONEX_Events_GrimoirePreparingToFire")
AND
NOT LeaderLib_Helper_QRY_HasStatus(_Character, "UNSHEATHED")
AND
DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template)
THEN
LLWEAPONEX_Grimoire_OnGrimoireUnsheathed(_Character, _Item, _Template, 1);
ObjectSetFlag(_Character, "LLWEAPONEX_GrimoireOpened", 0);

IF
StoryEvent((CHARACTERGUID)_Character, "LLWEAPONEX_Events_GrimoireFired")
AND
NOT LeaderLib_Helper_QRY_HasStatus(_Character, "UNSHEATHED")
AND
DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template)
THEN
LLWEAPONEX_Grimoire_OnGrimoireSheathed_TransitionStart(_Character, _Item, _Template);
ObjectClearFlag(_Character, "LLWEAPONEX_GrimoireOpened", 0);

PROC
LLWEAPONEX_Grimoire_OnGrimoireUnEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template)
THEN
NOT DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template);
LLWEAPONEX_Grimoire_StopAllEffects_WithDestroy(_Character);
ObjectClearFlag(_Character, "LLWEAPONEX_GrimoireOpened", 0);
//Failsafe
DB_LLWEAPONEX_Grimoire_Temp_Unequipped(_Character, _Template);
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_Grimoire_ClearFXData", 150);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_Grimoire_ClearFXData")
AND
DB_LLWEAPONEX_Grimoire_Temp_Unequipped(_Character, _Template)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_Unequipped(_Character, _Template);
LLWEAPONEX_Grimoire_StopAllEffects_ForTemplate(_Character, _Template);
LLWEAPONEX_Grimoire_ClearEffectData(_Character, _Template);
//END_REGION

//REGION LOOP_FX_LEVEL_CHANGE
IF
RegionEnded(_)
AND
DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template)
THEN
//LLWEAPONEX_Grimoire_StopAllEffects_WithDestroy(_Character);
LLWEAPONEX_Grimoire_StopAllEffects_All(_Character);

//Starting effects back up
IF
GameStarted(_Level, _)
AND
DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
LLWEAPONEX_Grimoire_PlayEquippedFX(_Character, _Item, _Template, _SheathedFX, _UnsheathedFX);
/*
LLWEAPONEX_Grimoire_StopAllEffects_WithDestroy(_Character);
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_StartGrimoireFX_PostLoad", 25);
*/

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_StartGrimoireFX_PostLoad")
AND
DB_LLWEAPONEX_Grimoire_ActiveGrimoire(_Character, _Item, _Template)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
LLWEAPONEX_Grimoire_PlayEquippedFX(_Character, _Item, _Template, _SheathedFX, _UnsheathedFX);

/*
IF
GameStarted(_Level, _)
AND
IsGameLevel(_Level, 1)
AND
DB_LLWEAPONEX_Grimoire_Temp_PlayGrimoireFX(_Character, _Item)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_PlayGrimoireFX(_Character, _Item);
*/
//END_REGION

//REGION MAGIC_REMOVAL
/*
IF
ItemUnEquipped(_Item, _Character)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire_Magic", 1)
AND
CharacterGetEquippedItem(_Character, "Weapon", (ITEMGUID)_Magic)
AND
IsTagged(_Magic, "LLWEAPONEX_Grimoire_Magic", 1)
THEN
ItemDestroy(_Magic);

IF
ItemDropped(_Item)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire_Magic", 1)
THEN
ItemDestroy(_Item);

IF
ItemMovedFromTo(_Item, _From, _To, _IsTrade)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire_Magic", 1)
AND
ObjectIsCharacter((CHARACTERGUID)_To, 1)
AND
ObjectIsCharacter((CHARACTERGUID)_From, 1)
AND
ItemGetOriginalOwner(_Item, _From)
AND
_To != _From
THEN
ItemDestroy(_Item);

PROC
ProcBlockUseOfItem((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire_Magic", 1)
AND
NOT ItemGetOriginalOwner(_Item, _Character)
THEN
DB_CustomUseItemResponse(_Character, _Item, 0);
CharacterStatusText(_Character, "LLWEAPONEX_Error_GrimoireMagicOwnerMismatch");
*/
//END_REGION

//REGION SKILL_TYPE_EVENTS
IF
CharacterUsedSkillOnTarget(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
ObjectGetFlag(_Caster, "LLWEAPONEX_GrimoireEquipped", 1)
AND
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement)
THEN
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement);

IF
CharacterUsedSkillOnZoneWithTarget(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
ObjectGetFlag(_Caster, "LLWEAPONEX_GrimoireEquipped", 1)
AND
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement)
THEN
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement);

IF
CharacterUsedSkill(_Caster, _Skill, _SkillType, _SkillElement)
AND
ObjectGetFlag(_Caster, "LLWEAPONEX_GrimoireEquipped", 1)
AND
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _, _Skill, _SkillType, _SkillElement)
THEN
DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement);
ProcObjectTimer(_Caster, "LLWEAPONEX_Timers_Grimoire_SkillSelfDelay", 50);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Caster, "LLWEAPONEX_Timers_Grimoire_SkillSelfDelay")
AND
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement)
AND
DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Caster, "LLWEAPONEX_Timers_Grimoire_SkillSelfDelay")
AND
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Caster, "LLWEAPONEX_Timers_Grimoire_SkillSelfDelay")
AND
DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement);
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Caster, _Skill, _SkillType, _SkillElement);

IF
CharacterUsedSkillAtPosition(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement)
AND
ObjectGetFlag(_Caster, "LLWEAPONEX_GrimoireEquipped", 1)
AND
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _, _Skill, _SkillType, _SkillElement)
THEN
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement);
ProcObjectTimer(_Caster, "LLWEAPONEX_Timers_Grimoire_SkillPositionDelay", 250);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Caster, "LLWEAPONEX_Timers_Grimoire_SkillPositionDelay")
AND
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Caster, "LLWEAPONEX_Timers_Grimoire_SkillPositionDelay")
AND
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoires:SkillEvent] Character used skill on position. Skill[",_Skill,"] Type[",_SkillType,"] Element[",_SkillElement,"]");
LLWEAPONEX_Grimoire_OnUsedSkillAtPosition(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement);

IF
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement)
THEN
LLWEAPONEX_Grimoire_Internal_OnSkillEventAdded(_Caster, _Target, _Skill, _SkillType, _SkillElement);

PROC
LLWEAPONEX_Grimoire_Internal_OnSkillEventAdded((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
NOT LeaderLib_Timers_QRY_ObjectObjectTimerStarted(_Caster, _Target, "LLWEAPONEX_Timers_ResetSkillEventEntry_")
AND
GetUUID(_Target, _Str)
AND
LeaderLog_QRY_Log("COMBINE", "LLWEAPONEX_ResetSkillEvent_", _Skill, _SkillType, _SkillElement)
AND
DB_LeaderLog_Temp_CombinedString(_Event)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_Event);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoires:SkillEvent] Character used skill on target [",_Str,"]. Skill[",_Skill,"] Type[",_SkillType,"] Element[",_SkillElement,"]");
LLWEAPONEX_Grimoire_OnUsedSkillOnTarget(_Caster, _Target, _Skill, _SkillType, _SkillElement);
DB_LLWEAPONEX_Grimoire_ResetSkillEvent(_Event, _Caster, _Target, _Skill, _SkillType, _SkillElement);
LeaderLib_Timers_StartObjectObjectTimer(_Caster, _Target, 250, "LLWEAPONEX_Timers_ResetSkillEventEntry_", _Event);

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Event)
AND
DB_LLWEAPONEX_Grimoire_ResetSkillEvent(_Event, _Caster, _Target, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_ResetSkillEvent(_Event, _Caster, _Target, _Skill, _SkillType, _SkillElement);
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement);

//END_REGION

//REGION GRIMOIRE_ACTIVATE_BASE
PROC
LLWEAPONEX_Grimoire_OnUsedSkillOnTarget((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
THEN
DB_NOOP(1);

PROC
LLWEAPONEX_Grimoire_OnUsedSkillAtPosition((CHARACTERGUID)_Caster, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
THEN
DB_NOOP(1);

IF
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _SkillType, _SkillElement, _MagicType)
AND
NOT LeaderLib_Timers_QRY_ObjectTimerStarted(_Caster, "LLWEAPONEX_Timers_GrimoireSkillCastFailsafe_")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoires:ActivateMagic] Character activated grimoire magic on target, and is preparing to fire. Skill[",_Skill,"] Magic Type[",_MagicType,"]");
SetStoryEvent(_Caster, "LLWEAPONEX_Events_GrimoirePreparingToFire");
LeaderLib_Timers_StartObjectTimer(_Caster, 1500, "LLWEAPONEX_Timers_GrimoireSkillCastFailsafe_", _Skill);

IF
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement, _MagicType)
AND
NOT LeaderLib_Timers_QRY_ObjectTimerStarted(_Caster, "LLWEAPONEX_Timers_GrimoireSkillCastFailsafe_")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoires:ActivateMagic] Character activated grimoire magic at position, and is preparing to fire. Skill[",_Skill,"] Magic Type[",_MagicType,"]");
SetStoryEvent(_Caster, "LLWEAPONEX_Events_GrimoirePreparingToFire");
LeaderLib_Timers_StartObjectTimer(_Caster, 3000, "LLWEAPONEX_Timers_GrimoireSkillCastFailsafe_", _Skill);

QRY
LLWEAPONEX_Grimoire_QRY_ActivationQueued((CHARACTERGUID)_Caster, (STRING)_Skill)
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _SkillType, _SkillElement, _MagicType)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_ActivationQueued((CHARACTERGUID)_Caster, (STRING)_Skill)
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement, _MagicType)
THEN
DB_NOOP(1);

IF
SkillCast(_Caster, _Skill, _, _)
AND
LLWEAPONEX_Grimoire_QRY_ActivationQueued(_Caster, _Skill)
AND
GetUUID(_Caster, _UUID)
AND
LeaderLog_QRY_Log("COMBINE", "LLWEAPONEX_Timers_ActivateGrimoire_", _UUID, "_", _Skill)
AND
DB_LeaderLog_Temp_CombinedString(_TimerName)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_TimerName);
DB_LLWEAPONEX_Grimoire_Temp_OnSkillCast(_Caster, _Skill, _TimerName);
TimerLaunch(_TimerName, 1000);

IF
TimerFinished(_TimerName)
AND
DB_LLWEAPONEX_Grimoire_Temp_OnSkillCast(_Caster, _Skill, _TimerName)
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _SkillType, _SkillElement, _MagicType)
THEN
NOT DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _SkillType, _SkillElement, _MagicType);
LeaderLib_Timers_CancelObjectTimerByEvent(_Caster, _Skill);
LLWEAPONEX_Grimoire_OnSkillCast(_Caster, _Target, _Skill, _SkillType, _SkillElement, _MagicType);

IF
TimerFinished(_TimerName)
AND
DB_LLWEAPONEX_Grimoire_Temp_OnSkillCast(_Caster, _Skill, _TimerName)
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement, _MagicType)
THEN
NOT DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement, _MagicType);
LeaderLib_Timers_CancelObjectTimerByEvent(_Caster, _Skill);
LLWEAPONEX_Grimoire_OnSkillCast(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement, _MagicType);

IF
TimerFinished(_TimerName)
AND
DB_LLWEAPONEX_Grimoire_Temp_OnSkillCast(_Caster, _Skill, _TimerName)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_OnSkillCast(_Caster, _Skill, _TimerName);

IF
StoryEvent((CHARACTERGUID)_Caster, _Skill)
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _SkillType, _SkillElement, _MagicType)
THEN
NOT DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _SkillType, _SkillElement, _MagicType);
LLWEAPONEX_Grimoire_OnSkillCast(_Caster, _Target, _Skill, _SkillType, _SkillElement, _MagicType);

IF
StoryEvent((CHARACTERGUID)_Caster, _Skill)
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement, _MagicType)
THEN
NOT DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement, _MagicType);
LLWEAPONEX_Grimoire_OnSkillCast(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement, _MagicType);

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement, (STRING)_MagicType)
AND
NOT LeaderLib_Timers_QRY_ObjectTimerStarted(_Caster, "LLWEAPONEX_Timers_Grimoire_ResetOpenFlag_")
THEN
LeaderLib_Timers_StartObjectTimer(_Caster, 1000, "LLWEAPONEX_Timers_Grimoire_ResetOpenFlag_", "LLWEAPONEX_Events_GrimoireFired");

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement, (STRING)_MagicType)
AND
NOT LeaderLib_Timers_QRY_ObjectTimerStarted(_Caster, "LLWEAPONEX_Timers_Grimoire_ResetOpenFlag_")
THEN
LeaderLib_Timers_StartObjectTimer(_Caster, 1000, "LLWEAPONEX_Timers_Grimoire_ResetOpenFlag", "LLWEAPONEX_Events_GrimoireFired");
//END_REGION

//REGION GRIMOIRE_SKILL_MAGIC_MATCH
QRY
LLWEAPONEX_Grimoire_Internal_QRY_SkillPropertyMatch((STRING)_CheckSkillType, (STRING)_SkillType, (STRING)_CheckSkillElement, (STRING)_SkillElement)
AND
_CheckSkillElement == ""
AND
_CheckSkillType == _SkillType
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_Internal_QRY_SkillPropertyMatch((STRING)_CheckSkillType, (STRING)_SkillType, (STRING)_CheckSkillElement, (STRING)_SkillElement)
AND
_CheckSkillType == ""
AND
_CheckSkillElement == _SkillElement
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_Internal_QRY_SkillPropertyMatch((STRING)_CheckSkillType, (STRING)_SkillType, (STRING)_CheckSkillElement, (STRING)_SkillElement)
AND
_CheckSkillType != ""
AND
_CheckSkillElement != ""
AND
_CheckSkillType == _SkillType
AND
_CheckSkillElement == _SkillElement
THEN
DB_NOOP(1);

//Skip matching
QRY
LLWEAPONEX_Grimoire_QRY_TargetPriorityMatch((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_TargetType, (INTEGER)_TargetPriority)
AND
ObjectIsItem(_Target, _IsItem)
AND
StringContains(_TargetType, "Position", _IsPositionTarget)
AND
// 1 (true) * -1 = -1, a.k.a. no target priority
IntegerProduct(_IsItem, -1, _SkipCheck1)
AND
IntegerProduct(_IsPositionTarget, -1, _SkipCheck2)
AND
IntegerSum(_SkipCheck1, _SkipCheck2, _SkipChecks)
AND
//If any of these values are less than 0, there's no target priority
IntegerMin(_TargetPriority, _SkipChecks, _ShouldSkipChecks)
AND
_ShouldSkipChecks < 0
THEN
DB_LLWEAPONEX_Grimoire_TargetPriorityMatched(_Caster, _Target);

QRY
LLWEAPONEX_Grimoire_QRY_TargetPriorityMatch((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, "Target", (INTEGER)_TargetPriority)
AND
NOT DB_LLWEAPONEX_Grimoire_TargetPriorityMatched(_Caster, _Target)
AND
ObjectIsCharacter((CHARACTERGUID)_Target, 1)
AND
CharacterIsEnemy(_Caster, _Target, _TargetPriority)
THEN
DB_LLWEAPONEX_Grimoire_TargetPriorityMatched(_Caster, _Target);

QRY
LLWEAPONEX_Grimoire_QRY_TargetPriorityMatch((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_TargetType, (INTEGER)_TargetPriority)
AND
DB_LLWEAPONEX_Grimoire_TargetPriorityMatched(_Caster, _Target)
THEN
NOT DB_LLWEAPONEX_Grimoire_TargetPriorityMatched(_Caster, _Target);

QRY
LLWEAPONEX_Grimoire_QRY_SkillMagicMatch((CHARACTERGUID)_Caster, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement, (STRING)_TargetType, (GUIDSTRING)_Target)
AND
DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, _Type)
AND
DB_LLWEAPONEX_Grimoire_MagicWhitelist(_Type, _Status, _CheckSkillType, _CheckSkillElement, _TargetPriority)
AND
HasActiveStatus(_Caster, _Status, 1)
AND
LLWEAPONEX_Grimoire_QRY_TargetPriorityMatch(_Caster, _Target, _TargetType, _TargetPriority)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_SkillMagicMatch((CHARACTERGUID)_Caster, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement, (STRING)_TargetType, (GUIDSTRING)_Target)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, _)
AND
DB_LLWEAPONEX_Grimoire_MagicWhitelist(_MagicType, _Status, _CheckSkillType, _CheckSkillElement, _TargetPriority)
AND
HasActiveStatus(_Caster, _Status, 1)
AND
LLWEAPONEX_Grimoire_QRY_TargetPriorityMatch(_Caster, _Target, _TargetType, _TargetPriority)
AND
LeaderLog_QRY_Log("DEBUG", "[LLWEAPONEX:Grimoire] Checking for skill match: ",_CheckSkillType," | ",_SkillType," | ",_CheckSkillElement," | ",_SkillElement)
AND
LLWEAPONEX_Grimoire_Internal_QRY_SkillPropertyMatch(_CheckSkillType, _SkillType, _CheckSkillElement, _SkillElement)
THEN
DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, _MagicType);
LLWEAPONEX_Grimoire_BlockMagicMatch(_MagicType, _Skill, _SkillType, _SkillElement, _TargetType);

PROC
LLWEAPONEX_Grimoire_BlockMagicMatch((STRING)_MagicType, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement, (STRING)_TargetType)
THEN
DB_NOOP(1);

PROC
LLWEAPONEX_Grimoire_OnUsedSkillOnTarget((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
LLWEAPONEX_Grimoire_QRY_SkillMagicMatch(_Caster, _Skill, _SkillType, _SkillElement, "Target", _Target)
AND
DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, _MagicType)
THEN
//NOT DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, _Type);
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _SkillType, _SkillElement, _MagicType);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:OnUsedSkillOnTarget] Matched Skill [",_Skill,"] to Magic Type [",_MagicType,"]");

PROC
LLWEAPONEX_Grimoire_OnUsedSkillAtPosition((CHARACTERGUID)_Caster, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
LLWEAPONEX_Grimoire_QRY_SkillMagicMatch(_Caster, _Skill, _SkillType, _SkillElement, "Position", NULL_00000000-0000-0000-0000-000000000000)
AND
DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, _MagicType)
THEN
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement, _MagicType);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:OnUsedSkillOnTarget] Matched Skill [",_Skill,"] to Magic Type [",_MagicType,"]");
//END_REGION

//REGION WIND_GRIMOIRE_BONUS
PROC
LLWEAPONEX_Grimoire_BlockMagicMatch("Wind", (STRING)_Skill, "shout", (STRING)_SkillElement, "Position")
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, "Wind");

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement, "Wind")
AND
ObjectIsCharacter((CHARACTERGUID)_Target, 1)
AND
CharacterIsEnemy(_Caster, _Target, 1)
THEN
CharacterCharacterSetEvent(_Caster, _Target, "LLWEAPONEX_Grimoire_ShootWindMagic");

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement, "Wind")
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _SkillType, _SkillElement, "Wind")
AND
ObjectIsItem((ITEMGUID)_Target, 1)
THEN
CharacterItemSetEvent(_Caster, _Target, "LLWEAPONEX_Grimoire_ShootWindMagic");

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement, "Wind")
THEN
SetVarFloat3(_Caster, "LLWEAPOENX_GrimoireTargetPosition", _x, _y, _z);
SetStoryEvent(_Caster, "LLWEAPONEX_Grimoire_ShootWindMagic");
//END_REGION

//REGION SWAP_GRIMOIRE_BONUS
//Swap status applying is handled in LLWEAPONEX_Grimoires.gameScript, using the CharacterTeleported event.

PROC
LLWEAPONEX_Grimoire_OnUsedSkillOnTarget((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, "jump", (STRING)_SkillElement)
AND
HasActiveStatus(_Caster, "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", 1)
THEN
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Caster, _Skill, "jump", _SkillElement, "Swap");

PROC
LLWEAPONEX_Grimoire_OnUsedSkillAtPosition((CHARACTERGUID)_Caster, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Skill, "jump", (STRING)_SkillElement)
AND
HasActiveStatus(_Caster, "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", 1)
THEN
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Caster, _Skill, "jump", _SkillElement, "Swap");

IF
CharacterStatusAttempt(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_DAMAGE", (CHARACTERGUID)_Caster)
AND
HasActiveStatus(_Caster, "UNSHEATHED", _Unsheathed)
THEN
LLWEAPONEX_Grimoire_ShootBeamFX(_Caster, _Target, "RS3_FX_GP_Beams_ControlBeam_01", "Dummy_BodyFX", _Unsheathed);

IF
ItemStatusAttempt(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_DAMAGE", (CHARACTERGUID)_Caster)
AND
HasActiveStatus(_Caster, "UNSHEATHED", _Unsheathed)
THEN
LLWEAPONEX_Grimoire_ShootBeamFX(_Caster, _Target, "RS3_FX_GP_Beams_ControlBeam_01", "Dummy_Root", _Unsheathed);

IF
CharacterStatusAttempt(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_SURGE", (CHARACTERGUID)_Caster)
AND
HasActiveStatus(_Caster, "UNSHEATHED", _Unsheathed)
THEN
LLWEAPONEX_Grimoire_ShootBeamFX(_Caster, _Target, "RS3_FX_GP_Beams_VoidBeam_01", "Dummy_BodyFX", _Unsheathed);

//Scramble Grimoire Positioning
IF
CharacterUsedSkill(_Caster, "Target_LLWEAPONEX_Scramble", _, _)
THEN
SetStoryEvent(_Caster, "LLWEAPONEX_Events_GrimoirePreparingToFire");

IF
SkillCast(_Caster, "Target_LLWEAPONEX_Scramble", _, _)
AND
NOT LeaderLib_Timers_QRY_ObjectTimerStarted(_Caster, "LLWEAPONEX_Timers_Grimoire_ResetOpenFlag_")
THEN
LeaderLib_Timers_StartObjectTimer(_Caster, 1000, "LLWEAPONEX_Timers_Grimoire_ResetOpenFlag_", "LLWEAPONEX_Events_GrimoireFired");

//Delay so exploding projectiles won't miss from teleporting positions
IF
CharacterStatusApplied(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_CHECK", (CHARACTERGUID)_Caster)
AND
HasActiveStatus(_Caster, "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", 1)
THEN
LeaderLib_Timers_StartCharacterCharacterTimer(_Caster, _Target, 500, "LLWEAPONEX_Timers_Grimoire_ApplySwapMagic_", "LLWEAPONEX_Grimoire_ApplySwapMagic");

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_CHECK_INSTANT", (CHARACTERGUID)_Caster)
AND
HasActiveStatus(_Caster, "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", 1)
THEN
CharacterCharacterSetEvent(_Caster, _Target, "LLWEAPONEX_Grimoire_ApplySwapMagic");
//END_REGION

//REGION MAGIC_AUTO_LEVELING
/*
//Auto-Leveling
IF
ItemEquipped(_Magic, _Character)
AND
IsTagged(_Magic, "LLWEAPONEX_Grimoire_Magic", 1)
AND
NOT DB_LLWEAPONEX_Grimoire_MagicLink(_, _Magic)
AND
CharacterGetEquippedItem(_Character, "Shield", (ITEMGUID)_Grimoire)
THEN
DB_LLWEAPONEX_Grimoire_MagicLink(_Grimoire, _Magic);
SetVarString(_Grimoire, "LeaderLib_ItemVariablesSetEvent", "LLWEAPONEX_Grimoires_VariablesSet");
SetStoryEvent(_Grimoire, "LeaderLib_Commands_SetItemVariables");

IF
StoryEvent((ITEMGUID)_Grimoire, "LLWEAPONEX_Grimoires_VariablesSet")
AND
IsTagged(_Grimoire, "LLWEAPONEX_Grimoire", 1)
AND
GetVarInteger(_Grimoire, "LeaderLib_Level", _Level)
AND
ItemGetOwner(_Grimoire, _Owner)
AND
CharacterGetEquippedItem(_Owner, "Weapon", (ITEMGUID)_Magic)
THEN
ItemLevelUpTo(_Magic, _Level);
SetVarInteger(_Magic, "LeaderLib_Level", _Level);

IF
ItemUnEquipped(_Grimoire, _Character)
AND
DB_LLWEAPONEX_Grimoire_MagicLink(_Grimoire, _Magic)
THEN
NOT DB_LLWEAPONEX_Grimoire_MagicLink(_Grimoire, _Magic);
ItemRemove(_Magic);

IF
ItemDestroyed(_Magic)
AND
DB_LLWEAPONEX_Grimoire_MagicLink(_Grimoire, _Magic)
THEN
NOT DB_LLWEAPONEX_Grimoire_MagicLink(_Grimoire, _Magic);
*/
/*
IF
CharacterStartAttackObject(_, _, _Character)
AND
CharacterGetEquippedItem(_Owner, "Weapon", (ITEMGUID)_Magic)
THEN
PlayEffect(_Character, "RS3_FX_Skills_Air_Wind_Cast_Hand_Horizontal_01", "Dummy_R_HandFX");
*/
//END_REGION

//REGION TRANSIT
IF
CharacterUsedSkillAtPosition(_Character, _x, _y, _z, "Target_LLWEAPONEX_Grimoire_StartTransit", _, _)
THEN
CharacterUseSkillAtPosition(_Character, "Projectile_LLWEAPONEX_Grimoire_Transit", _x, _y, _z, 0, 1);

IF
CharacterUsedSkillOnTarget(_Character, _Target, "Target_LLWEAPONEX_Grimoire_StartTransit", _, _)
THEN
CharacterUseSkill(_Character, "Projectile_LLWEAPONEX_Grimoire_Transit", _Target, 0, 1, 1);

IF
CharacterUsedSkill(_Character, "Projectile_LLWEAPONEX_Grimoire_Transit", _, _)
AND
DB_CurrentLevel(_Region)
THEN
SetStoryEvent(_Character, "LLWEAPONEX_UsedTransitSkill");
PROC_LoopEffect("LLWEAPONEX_FX_Projectiles_Skills_Transit_01", _Character, "LLWEAPONEX_TransitLoopEffect_A", _Region, "Dummy_FrontFX");
ApplyStatus(_Character, "LLWEAPONEX_GRIMOIRE_TRANSIT", 6.0, 0, _Character);

IF
SkillCast(_Character, "Projectile_LLWEAPONEX_Grimoire_Transit", _, _)
THEN
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_RemoveTransitEffect", 500);
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_RemoveTransitStatus", 1000);

PROC
ProcObjectTimerFinished(_Character, "LLWEAPONEX_Timers_RemoveTransitEffect")
THEN
PROC_StopLoopEffect(_Character, "LLWEAPONEX_TransitLoopEffect_A");

PROC
ProcObjectTimerFinished(_Character, "LLWEAPONEX_Timers_RemoveTransitStatus")
THEN
RemoveStatus(_Character, "LLWEAPONEX_GRIMOIRE_TRANSIT");
//END_REGION

//REGION CUSTOM_SWAP_PLACES
IF
SkillCast(_Character, "Target_LLWEAPONEX_Scramble", _, _)
THEN
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_ResolveScrambledPositions", 250);

IF
CharacterStatusAttempt(_Object, "LLWEAPONEX_GRIMOIRE_SCRAMBLE_CHECK", (CHARACTERGUID)_Cause)
AND
GetPosition(_Object, _x, _y, _z)
THEN
DB_LLWEAPONEX_Grimoire_Temp_SwapCharactersList(_Cause, _Object);
DB_LLWEAPONEX_Grimoire_Temp_SwapPosition(_Cause, _x, _y, _z);
PlayEffectAtPosition("RS3_FX_Skills_Void_Netherswap_Reappear_01", _x, _y, _z);
PlayEffect(_Object, "LLWEAPONEX_FX_Skills_Cast_Scramble_Overlay_01");

IF
ItemStatusAttempt(_Item, "LLWEAPONEX_GRIMOIRE_SCRAMBLE_CHECK", (CHARACTERGUID)_Cause)
THEN
CharacterItemSetEvent(_Cause, _Item, "LLWEAPONEX_Grimoire_Scramble_CheckMovable");

IF
CharacterItemEvent(_Cause, _Object, "LLWEAPONEX_Grimoire_Scramble_ItemIsMovable")
AND
GetPosition(_Object, _x, _y, _z)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:Scramble] Added item to the list of scrambled objects.");
DB_LLWEAPONEX_Grimoire_Temp_SwapItemList(_Cause, _Object);
DB_LLWEAPONEX_Grimoire_Temp_SwapPosition(_Cause, _x, _y, _z);
PlayEffectAtPosition("RS3_FX_Skills_Void_Netherswap_Reappear_01", _x, _y, _z);
PlayEffect(_Object, "LLWEAPONEX_FX_Skills_Cast_Scramble_Overlay_01");

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapCharactersList(_Cause, _Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapPosition(_Cause, _x, _y, _z)
AND
NOT LLWEAPONEX_Grimoire_QRY_Internal_CharacterSwapResolved(_Cause, _Character)
AND
GetDistanceToPosition(_Character, _x, _y, _z, _Dist)
/*
AND
CharacterGetDisplayName(_Character, _, _Name)
AND
StringConcatenate("[LLWEAPONEX:Grimoire:Scramble] [", _Name, _Str1)
AND
StringConcatenate(_Str1, "] distance from spot: [", _Prefix)
AND
LeaderLog_QRY_RealToString(_Dist, _Prefix, "].")
*/
AND
_Dist <= 0.01
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:Scramble] Character is in recorded spot. Removing spot from DB.");
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapPosition(_Cause, _x, _y, _z);
LLWEAPONEX_Grimoire_Internal_SwapResolved(_Cause, _Character);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapItemList(_Cause, _Object)
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapPosition(_Cause, _x, _y, _z)
AND
NOT LLWEAPONEX_Grimoire_QRY_Internal_ItemSwapResolved(_Cause, _Object)
AND
GetTemplate(_Object, _UUID)
AND
StringConcatenate("[LLWEAPONEX:Grimoire:Scramble] Teleporting item [", _UUID, _Str1)
AND
StringConcatenate(_Str1, "] to unoccupied position: [", _Prefix)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapPosition(_Cause, _x, _y, _z);
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapItemList(_Cause, _Object);
LLWEAPONEX_Grimoire_Internal_SwapResolved(_Cause, _Object);
LeaderLog_TracePositionWithoutObject(_x, _y, _z, _Prefix, "].");
TeleportToPosition(_Object, _x, _y, _z, "LLWEAPONEX_Scramble_Reappear", 0);

//Failsafe
PROC
ProcObjectTimerFinished((CHARACTERGUID)_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapItemList(_Cause, _Object)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapPosition(_Cause, _, _, _)
AND
GetPosition(_Object, _x, _y, _z)
AND
GetTemplate(_Object, _UUID)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:Scramble] No empty spots found. Teleporting item [",_UUID,"] to same position.");
TeleportToPosition(_Object, _x, _y, _z, "LLWEAPONEX_Scramble_Reappear", 0);
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapItemList(_Cause, _Object);

PROC
LLWEAPONEX_Grimoire_Internal_SwapResolved((CHARACTERGUID)_Cause, (GUIDSTRING)_Object)
THEN
DB_LLWEAPONEX_Grimoire_Temp_SwapResolved(_Cause, _Object);

QRY
LLWEAPONEX_Grimoire_QRY_Internal_ItemSwapResolved((CHARACTERGUID)_Cause, (ITEMGUID)_Object)
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapResolved(_Cause, (GUIDSTRING)_Object)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_Internal_CharacterSwapResolved((CHARACTERGUID)_Cause, (CHARACTERGUID)_Object)
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapResolved(_Cause, (GUIDSTRING)_Object)
THEN
DB_NOOP(1);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapResolved(_Cause, _Object)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapResolved(_Cause, _Object);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapCharactersList(_Cause, _Object)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapCharactersList(_Cause, _Object);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapItemList(_Cause, _Object)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapItemList(_Cause, _Object);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapPosition(_Cause, _x, _y, _z)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapPosition(_Cause, _x, _y, _z);

IF
StoryEvent((CHARACTERGUID)_Object, "LLWEAPONEX_Scramble_Reappear")
THEN
//PlayEffect(_Object, "RS3_FX_Skills_Void_Netherswap_Reappear_01");
DB_NOOP(1);
//END_REGION

//REGION MIMICRY_GRIMOIRE_LAST_SKILL
PROC
LLWEAPONEX_Grimoire_OnGrimoireUnEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
GetTemplate(_Item, "WPN_UNIQUE_LLWEAPONEX_Grimoire_Mimicry_c9fcc947-4423-40b9-9629-ae2d1e156dfc")
AND
DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill)
THEN
NOT DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill);
CharacterRemoveSkill(_Character, _Skill);

PROC
LLWEAPONEX_Grimoire_RemoveCopiedSkill((CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill)
THEN
NOT DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill);
CharacterRemoveSkill(_Character, _Skill);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_COPYLASTSKILL", (CHARACTERGUID)_Character)
AND
GetVarString(_Target, "LLWEAPONEX_LastUsedSkill", _Skill)
AND
GetVarString(_Target, "LLWEAPONEX_LastUsedSkill_Type", _SkillType)
AND
GetVarString(_Target, "LLWEAPONEX_LastUsedSkill_Element", _SkillElement)
AND
LLWEAPONEX_Grimoire_QRY_CanMimicSkill(_Skill, _SkillType, _SkillElement)
AND
CharacterHasSkill(_Character, _Skill, 0)
THEN
LLWEAPONEX_Grimoire_RemoveCopiedSkill(_Character);
CharacterAddSkill(_Character, _Skill);
DB_LLWEAPONEX_Grimoire_SkillJustCopied(_Character, _Skill);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_RemoveCopiedSkill")
THEN
LLWEAPONEX_Grimoire_RemoveCopiedSkill(_Character);
//END_REGION

//REGION GRIMOIRE_MIMIC
/*
IF
ObjectTurnEnded(_Character)
AND
HasActiveStatus(_Character, "LLWEAPONEX_GRIMOIRE_MIMIC_READY", 1)
THEN
RemoveStatus(_Character, "LLWEAPONEX_GRIMOIRE_MIMIC_READY");
*/
PROC
LLWEAPONEX_Grimoire_Internal_AddMimicSkill((CHARACTERGUID)_Character, (STRING)_Skill, (GUIDSTRING)_Target)
AND
HasActiveStatus(_Character, "UNSHEATHED", _Unsheathed)
THEN
DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Skill, _Target);
LLWEAPONEX_Grimoire_StartMimicking(_Character, _Skill, _Target);
LLWEAPONEX_Grimoire_Internal_StartMimicEffects(_CHaracter, _Unsheathed);

PROC
LLWEAPONEX_Grimoire_Internal_StartMimicEffects((CHARACTERGUID)_Character, 0)
THEN
PROC_StopLoopEffect(_Character, "LLWEAPONEX.Grimoires.FX.MimicSkill.Loop");
PROC_LoopEffect("LLWEAPONEX_FX_Skills_Grimoire_MimicSkill_Prepare_Root_01", _Character, "LLWEAPONEX.Grimoires.FX.MimicSkill.Loop", "__ANY__", "Dummy_BackFX_L");

PROC
LLWEAPONEX_Grimoire_Internal_StartMimicEffects((CHARACTERGUID)_Character, 1)
THEN
PROC_StopLoopEffect(_Character, "LLWEAPONEX.Grimoires.FX.MimicSkill.Loop");
PROC_LoopEffect("LLWEAPONEX_FX_Skills_Grimoire_MimicSkill_Prepare_Root_01", _Character, "LLWEAPONEX.Grimoires.FX.MimicSkill.Loop", "__ANY__", "Dummy_FrontFX_L");

QRY
LLWEAPONEX_Grimoire_QRY_CanMimicSkill((STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
_Skill != "Target_LLWEAPONEX_CopyLastSkill"
AND
IsSourceSkill(_Skill, 0)
AND
LeaderUpdater_QRY_ModIsActive("Mimicry", "LaughingLeader")
AND
LLMIME_Mimicking_QRY_SkillIsAllowed(_Skill, _SkillType, _SkillElement)
THEN
DB_NOOP(1);

//Never true, but needed so we can use Mimicry's query.
QRY
LLMIME_Mimicking_QRY_SkillIsAllowed((STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
DB_GlobalFlag("LLWEAPONEX_Grimoire_MimicBlacklistDisabled")
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_CanMimicSkill((STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
_Skill != "Target_LLWEAPONEX_CopyLastSkill"
AND
IsSourceSkill(_Skill, 0)
AND
NOT LeaderUpdater_QRY_ModIsActive("Mimicry", "LaughingLeader")
AND
StringContains(_Skill, "_Quest_", 0)
AND
LLWEAPONEX_Grimoire_QRY_MimicryDisabled_SkillIsAllowed(_Skill, _SkillType, _SkillElement)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_MimicryDisabled_SkillIsAllowed((STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
DB_LLMIME_Mimicking_Whitelist_Skills(_Skill)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_MimicryDisabled_SkillIsAllowed((STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
NOT DB_LLMIME_Mimicking_Blacklist_Skills(_, _Skill)
AND
NOT DB_LLMIME_Mimicking_Blacklist_SkillElements(_SkillType, _SkillElement)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_MimicSkillQueued((CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Skill, _Target)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_MimicSkillQueued((CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Grimoire, _Skill, _Target)
THEN
DB_NOOP(1);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Grimoire, "LLWEAPONEX_Timers_Grimoire_MimicSkillPosition")
AND
DB_LLWEAPONEX_Grimoire_MimicSkillPosition(_Character, _Skill, _x, _y, _z)
AND
LLWEAPONEX_Grimoire_QRY_MimicSkillQueued(_Character)
THEN
NOT DB_LLWEAPONEX_Grimoire_MimicSkillPosition(_Character, _Skill, _x, _y, _z);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Grimoire, "LLWEAPONEX_Timers_Grimoire_MimicSkillPosition")
AND
DB_LLWEAPONEX_Grimoire_MimicSkillPosition(_Character, _Skill, _x, _y, _z)
AND
NOT LLWEAPONEX_Grimoire_QRY_MimicSkillQueued(_Character)
AND
GetUUID(_Character, _ID)
AND
LeaderLib_Skills_QRY_CreateTargetDummy(_ID, _x, _y, _z, "", 5000, 1, 0)
AND
DB_LeaderLib_Skills_TargetDummies(_ID, _Target)
THEN
NOT DB_LLWEAPONEX_Grimoire_MimicSkillPosition(_Character, _Skill, _x, _y, _z);
LLWEAPONEX_Grimoire_Internal_AddMimicSkill(_Character, _Skill, _Target);

//oe llweap_grimoiredebug_castskillself Shout_Whirlwind
IF
TextEventSet("llweap_grimoiredebug_castskillself")
AND
GetTextEventParamString(1, _Skill)
AND
CharacterGetHostCharacter(_Character)
THEN
LLWEAPONEX_Grimoire_Internal_AddMimicSkill(_Character, _Skill, _Character);

//oe llweap_grimoiredebug_castskilltarget Projectile_Fireball -10 0 0
//oe llweap_grimoiredebug_castskilltarget Projectile_PyroclasticRock -10 0 0
IF
TextEventSet("llweap_grimoiredebug_castskilltarget")
AND
GetTextEventParamString(1, _Skill)
AND
GetTextEventParamReal(2, _xSum)
AND
GetTextEventParamReal(3, _ySum)
AND
GetTextEventParamReal(4, _zSum)
AND
CharacterGetHostCharacter(_Character)
AND
GetPosition(_Character, _x, _y, _z)
AND
RealSum(_x, _xSum, _tx)
AND
RealSum(_y, _ySum, _ty)
AND
RealSum(_z, _zSum, _tz)
AND
GetUUID(_Character, _ID)
AND
LeaderLib_Skills_QRY_CreateTargetDummy(_ID, _tx, _ty, _tz, "", 5000, 1, 0)
AND
DB_LeaderLib_Skills_TargetDummies(_ID, _Target)
THEN
LLWEAPONEX_Grimoire_Internal_AddMimicSkill(_Character, _Skill, _Target);

PROC
LLWEAPONEX_Grimoire_StartMimicking((CHARACTERGUID)_Character, (STRING)_Skill, (GUIDSTRING)_Target)
AND
DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Skill, _Target)
AND
LLWEAPONEX_Grimoire_GetGrimoirePosition(_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_GrimoirePosition(_Character, _x, _y, _z)
AND
TemporaryCharacterCreateAtPosition(_x, _y, _z, "LLWEAPONEX_Grimoire_Dummy_9e0450df-20bf-419d-86b6-18e5ba8a8944", 0, _Grimoire)
AND
GetUUID(_Grimoire, _UUID)
AND
LeaderLIb_Platforms_QRY_SpawnPlatform(_UUID, "Small", 5000, _x, _y, _z)
AND
RealProduct(_y, 2.0, _ty)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_GrimoirePosition(_Character, _x, _y, _z);
NOT DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Skill, _Target);
DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Grimoire, _Skill, _Target);
LeaderLib_Helper_SetupDummy(_Grimoire);
//CharacterTransformFromCharacter(_Grimoire, _Character, 0, 0, 1, 1, 0, 0, 0);
LeaderLib_Helper_CopyEquipment(_Grimoire, _Character, 1);
LeaderLib_Helper_CopyStats(_Grimoire, _Character, 1, 1, 1, 1);
LeaderLib_Helper_CopyFaction(_Grimoire, _Character);
SetVarObject(_Grimoire, "LLWEAPONEX_Grimoire_Owner", _Character);
TeleportToPosition(_Grimoire, _x, _ty, _z, "", 0, 1);
CharacterMoveToPosition(_Grimoire, _x, _ty, _z, 1, "");

PROC
LeaderLib_Helper_OnCopyEquipmentFinished((CHARACTERGUID)_Grimoire, (CHARACTERGUID)_Character)
THEN
ProcObjectTimer(_Grimoire, "LLWEAPONEX_Timers_CastGrimoireMimicSkill", 50);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Grimoire, "LLWEAPONEX_Timers_CastGrimoireMimicSkill")
AND
DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Grimoire, _Skill, _Target)
THEN
NOT DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Grimoire, _Skill, _Target);
//LeaderLib_Skills_UseSkillOnTarget(_Character, _Target, _Skill, 1, 0);
//LeaderLib_Skills_UseSkillOnTargetFromPosition(_Caster, _Target, _Skill, _x, _y, _z, 1, 0);
DB_LLWEAPONEX_Grimoires_Temp_CastingSkill(_Character, _Grimoire);
ProcObjectTimer(_Grimoire, "LLWEAPONEX_Timers_RemoveSkillGrimoire", 4000);
CharacterUseSkill(_Grimoire, _Skill, _Target, 1, 1, 1);
RemoveStatus(_Character, "LLWEAPONEX_GRIMOIRE_MIMIC_READY");

PROC
LLWEAPONEX_Grimoire_Internal_RemoveSkillPlatform((CHARACTERGUID)_Grimoire)
AND
GetUUID(_Grimoire, _UUID)
AND
DB_LeaderLib_Platforms(_UUID, _Platform)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:RemoveSkillPlatform] Removed mimicked skill platform.");
LeaderLib_Platforms_RemovePlatform(_Platform);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Grimoire, "LLWEAPONEX_Timers_RemoveSkillGrimoire")
AND
DB_LLWEAPONEX_Grimoires_Temp_CastingSkill(_Caster, _Grimoire)
THEN
NOT DB_LLWEAPONEX_Grimoires_Temp_CastingSkill(_Caster, _Grimoire);
RemoveTemporaryCharacter(_Grimoire);
PROC_StopLoopEffect(_Caster, "LLWEAPONEX.Grimoires.FX.MimicSkill.Loop");
LLWEAPONEX_Grimoire_Internal_RemoveSkillPlatform(_Grimoire);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:LLWEAPONEX_Timers_RemoveSkillGrimoire] Cleaning up mimic dummy and stopping effects.");

QRY
LLWEAPONEX_Grimoire_GetGrimoirePosition((CHARACTERGUID)_Caster)
AND
HasActiveStatus(_Caster, "UNSHEATHED", _Unsheathed)
AND
DB_LLWEAPONEX_Grimoire_PositionOffset(_Unsheathed, _BoneX, _BoneZ)
AND
GetPosition(_Caster, _cx, _y, _cz)
AND
GetRotation(_Caster, _, _ry, _)
AND
Integer(_ry, _AngleInt)
AND
LeaderLib_Math_QRY_RotatePoint(_BoneX, _BoneZ, _ry, 0)
AND
DB_LeaderLib_Math_RotatedPoint(_BoneX, _BoneZ, _ry, _x2, _z2)
AND
RealSum(_cx, _x2, _x)
AND
RealSubtract(_cz, _z2, _z)
THEN
NOT DB_LeaderLib_Math_RotatedPoint(_BoneX, _BoneZ, _ry, _x2, _z2);
DB_LLWEAPONEX_Grimoire_Temp_GrimoirePosition(_Caster, _x, _y, _z);

IF
TextEventSet("llweap_grimoiredebug_setoffset")
AND
DB_LLWEAPONEX_Grimoire_PositionOffset(_Unsheathed, _BoneX, _BoneZ)
THEN
NOT DB_LLWEAPONEX_Grimoire_PositionOffset(_Unsheathed, _BoneX, _BoneZ);

IF
TextEventSet("llweap_grimoiredebug_setoffset")
AND
GetTextEventParamReal(1, _BoneBackX)
AND
GetTextEventParamReal(2, _BoneBackZ)
AND
GetTextEventParamReal(3, _BoneFrontX)
AND
GetTextEventParamReal(4, _BoneFrontZ)
THEN
DB_LLWEAPONEX_Grimoire_PositionOffset(0, _BoneBackX, _BoneBackZ);
DB_LLWEAPONEX_Grimoire_PositionOffset(1, _BoneFrontX, _BoneFrontZ);
//END_REGION

//REGION GRIMOIRE_DUMMY_PREVENTION
QRY
LLWEAPONEX_Grimoire_QRY_PreventEquipping((CHARACTERGUID)_Character)
AND
IsTagged(_Character, "LeaderLib_Dummy", 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_PreventEquipping((CHARACTERGUID)_Character)
AND
IsTagged(_Character, "LLWEAPONEX_Revenant", 1)
THEN
DB_NOOP(1);


//Prevent grimoire mimics from equipping Grimoires
PROC
ProcBlockUseOfItem(_Character, _Grimoire)
AND
IsTagged(_Grimoire, "LLWEAPONEX_Grimoire", 1)
AND
LLWEAPONEX_Grimoire_QRY_PreventEquipping(_Character)
AND
GetPosition(_Character, _x, _y, _z)
AND
CreateItemTemplateAtPosition("LLWEAPONEX_Shield_HiddenScriptShield_d027e8a5-f51b-4a0b-b5dc-f39ef6ba79b1", _x, _y, _z, _Shield)
THEN
DB_CustomUseItemResponse(_Character, _Grimoire, 0);
//ItemRemove(_Grimoire);
ProcObjectTimer(_Grimoire, "LLWEAPONEX_Timers_DeleteMimickedItem", 250);
CharacterEquipItem(_Character, _Shield);

//Prevent grimoire mimics from equipping Grimoires
PROC
LLWEAPONEX_Grimoire_OnGrimoireEquipped((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
LLWEAPONEX_Grimoire_QRY_PreventEquipping(_Character)
AND
GetPosition(_Character, _x, _y, _z)
AND
CreateItemTemplateAtPosition("LLWEAPONEX_Shield_HiddenScriptShield_d027e8a5-f51b-4a0b-b5dc-f39ef6ba79b1", _x, _y, _z, _Shield)
THEN
ProcObjectTimer(_Item, "LLWEAPONEX_Timers_DeleteMimickedItem", 250);
CharacterEquipItem(_Character, _Shield);

PROC
ProcObjectTimerFinished((ITEMGUID)_Item, "LLWEAPONEX_Timers_DeleteMimickedItem")
THEN
ItemRemove(_Item);

//END_REGION

//REGION GRIMOIRE_FOLLOW_TEST
/*
IF
TextEventSet("llweap_grimoiredebug_setoffset")
AND
DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _Interval)
THEN
LLWEAPONEX_Grimoire_UpdatePosition(_Player, _Grimoire);

IF
TextEventSet("llweap_rotationtest")
AND
CharacterGetHostCharacter(_Player)
THEN
LeaderLog_TracePosition(_Player, "[LLWEAPONEX:Debug:RotationTest] Player position: ", ".");
ProcObjectTimer(_Player, "LLWEAPONEX_Debug_GetRotatedPosition", 50);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLWEAPONEX_Debug_GetRotatedPosition")
AND
LLWEAPONEX_Grimoire_GetGrimoirePosition(_Player)
THEN
ProcObjectTimer(_Player, "LLWEAPONEX_Debug_TraceRotatedPosition", 50);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Player, "LLWEAPONEX_Debug_TraceRotatedPosition")
AND
DB_LLWEAPONEX_Grimoire_Temp_GrimoirePosition(_Player, _tx, _ty, _tz)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_GrimoirePosition(_Player, _tx, _ty, _tz);
PlayEffectAtPosition("LLWEAPONEX_FX_Grimoire_Equipped_Sheathed_Wind_A", _tx, 1.5, _tz);
LeaderLog_TracePosition(_Player, _tx, _ty, _tz, "[LLWEAPONEX:Debug:RotationTest] Rotated position: ", ".");

IF
TextEventSet("llweap_grimoirecharteststop")
AND
DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _Interval)
THEN
LLWEAPONED_Grimoire_RemoveGrimoire(_Player, _Grimoire);

IF
TextEventSet("llweap_grimoirechartest")
AND
DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _Interval)
THEN
LLWEAPONED_Grimoire_RemoveGrimoire(_Player, _Grimoire);

PROC
LLWEAPONED_Grimoire_RemoveGrimoire((CHARACTERGUID)_Player, (CHARACTERGUID)_Grimoire)
AND
DB_LLWEAPONEX_Grimoire_Temp_LastPlayerPosition(_Player, _x, _y, _z, _Rotation)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_LastPlayerPosition(_Player, _x, _y, _z, _Rotation);
NOT DB_LLWEAPONEX_Grimoire_Temp_PositionUpdated(_Player);

PROC
LLWEAPONED_Grimoire_RemoveGrimoire((CHARACTERGUID)_Player, (CHARACTERGUID)_Grimoire)
AND
DB_LLWEAPONEX_Debug_Grimoire_QueuedPositions(_Grimoire, _QueueID, _tx, _ty, _tz)
THEN
NOT DB_LLWEAPONEX_Debug_Grimoire_QueuedPositions(_Grimoire, _QueueID, _tx, _ty, _tz);

PROC
LLWEAPONED_Grimoire_RemoveGrimoire((CHARACTERGUID)_Player, (CHARACTERGUID)_Grimoire)
AND
DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _Interval)
THEN
RemoveTemporaryCharacter(_Grimoire);
NOT DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _Interval);
PROC_StopLoopEffect(_Grimoire, "LLWEAPONEX_FX_GrimoireLoopTest");

IF
StoryEvent((CHARACTERGUID)_Grimoire, "LLWEAPONEX_Commands_CleanupGrimoire")
AND
NOT DB_LLWEAPONEX_Debug_ActiveGrimoires(_, _Grimoire, _)
THEN
RemoveTemporaryCharacter(_Grimoire);

IF
StoryEvent((CHARACTERGUID)_Grimoire, "LLWEAPONEX_Commands_CleanupGrimoire")
AND
DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _Interval)
THEN
LLWEAPONED_Grimoire_RemoveGrimoire(_Player, _Grimoire);

IF
TextEventSet("llweap_grimoirechartest")
AND
GetTextEventParamInteger(1, _Interval)
AND
DB_CurrentLevel(_Region)
AND
CharacterGetHostCharacter(_Player)
AND
LLWEAPONEX_Grimoire_GetGrimoirePosition(_Player)
AND
DB_LLWEAPONEX_Grimoire_Temp_GrimoirePosition(_Player, _x, _y, _z)
AND
TemporaryCharacterCreateAtPosition(_x, _y, _z, "LLWEAPONEX_Grimoire_CharacterTest_9e0450df-20bf-419d-86b6-18e5ba8a8944", 0, _Grimoire)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_GrimoirePosition(_Player, _x, _y, _z);
SetVarObject(_Grimoire, "LLWEAPONEX_Grimoire_Owner", _Player);
PROC_LoopEffect("LLWEAPONEX_FX_Grimoire_Equipped_Sheathed_Wind_A", _Grimoire, "LLWEAPONEX_FX_GrimoireLoopTest", _Region, "Dummy_BodyFX");
DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _Interval);
ProcObjectTimer(_Grimoire, "LLWEAPONEX_Timers_Debug_GrimoireFollowPlayer", _Interval);

IF
CharacterCharacterEvent(_Player, _Grimoire, "LLWEAPONEX_Commands_RelinkGrimoire")
AND
NOT DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _)
AND
DB_CurrentLevel(_Region)
THEN
DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, 500);
PROC_StopLoopEffect(_Grimoire, "LLWEAPONEX_FX_GrimoireLoopTest");
PROC_LoopEffect("LLWEAPONEX_FX_Grimoire_Equipped_Sheathed_Wind_A", _Grimoire, "LLWEAPONEX_FX_GrimoireLoopTest", _Region, "Dummy_BodyFX");
ProcObjectTimer(_Grimoire, "LLWEAPONEX_Timers_Debug_GrimoireFollowPlayer", 500);

QRY
LLWEPAONEX_Grimoire_QRY_PositionMismatch((CHARACTERGUID)_Player, (REAL)_x, (REAL)_y, (REAL)_z, (REAL)_tx, (REAL)_ty, (REAL)_tz)
AND
_x != _tx
THEN
DB_NOOP(1);

QRY
LLWEPAONEX_Grimoire_QRY_PositionMismatch((CHARACTERGUID)_Player, (REAL)_x, (REAL)_y, (REAL)_z, (REAL)_tx, (REAL)_ty, (REAL)_tz)
AND
_y != _ty
THEN
DB_NOOP(1);

QRY
LLWEPAONEX_Grimoire_QRY_PositionMismatch((CHARACTERGUID)_Player, (REAL)_x, (REAL)_y, (REAL)_z, (REAL)_tx, (REAL)_ty, (REAL)_tz)
AND
_z != _tz
THEN
DB_NOOP(1);

QRY
LLWEPAONEX_Grimoire_QRY_PlayerMoved((CHARACTERGUID)_Player)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_PositionUpdated(_Player)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_LastPlayerPosition(_Player, _, _, _, _)
AND
GetPosition(_Player, _x, _y, _z)
AND
GetRotation(_Player, _, _Rotation, _)
THEN
DB_LLWEAPONEX_Grimoire_Temp_LastPlayerPosition(_Player, _x, _y, _z, _Rotation);
DB_LLWEAPONEX_Grimoire_Temp_PositionUpdated(_Player);

QRY
LLWEPAONEX_Grimoire_QRY_PlayerMoved((CHARACTERGUID)_Player)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_PositionUpdated(_Player)
AND
DB_LLWEAPONEX_Grimoire_Temp_LastPlayerPosition(_Player, _tx, _ty, _tz, _LastRotation)
AND
GetPosition(_Player, _x, _y, _z)
AND
LLWEPAONEX_Grimoire_QRY_PositionMismatch(_Player, _x, _y, _z, _tx, _ty, _tz)
AND
GetRotation(_Player, _, _Rotation, _)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_LastPlayerPosition(_Player, _tx, _ty, _tz, _LastRotation);
DB_LLWEAPONEX_Grimoire_Temp_LastPlayerPosition(_Player, _x, _y, _z, _Rotation);
DB_LLWEAPONEX_Grimoire_Temp_PositionUpdated(_Player);

QRY
LLWEPAONEX_Grimoire_QRY_PlayerMoved((CHARACTERGUID)_Player)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_PositionUpdated(_Player)
AND
DB_LLWEAPONEX_Grimoire_Temp_LastPlayerPosition(_Player, _tx, _ty, _tz, _LastRotation)
AND
GetPosition(_Player, _x, _y, _z)
AND
GetRotation(_Player, _, _Rotation, _)
AND
_LastRotation != _Rotation
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_LastPlayerPosition(_Player, _tx, _ty, _tz, _LastRotation);
DB_LLWEAPONEX_Grimoire_Temp_LastPlayerPosition(_Player, _x, _y, _z, _Rotation);
DB_LLWEAPONEX_Grimoire_Temp_PositionUpdated(_Player);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Grimoire, "LLWEAPONEX_Timers_Debug_GrimoireFollowPlayer")
AND
DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _Interval)
AND
LLWEPAONEX_Grimoire_QRY_PlayerMoved(_Player)
THEN
LLWEAPONEX_Grimoire_UpdatePosition(_Player, _Grimoire);

IF
CharacterStatusApplied(_Player, "UNSHEATHED", _)
AND
DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _Interval)
THEN
LLWEAPONEX_Grimoire_UpdatePosition(_Player, _Grimoire);

IF
CharacterStatusRemoved(_Player, "UNSHEATHED", _)
AND
DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _Interval)
THEN
LLWEAPONEX_Grimoire_UpdatePosition(_Player, _Grimoire);

PROC
LLWEAPONEX_Grimoire_UpdatePosition((CHARACTERGUID)_Player, (CHARACTERGUID)_Grimoire)
AND
LLWEAPONEX_Grimoire_GetGrimoirePosition(_Player)
AND
DB_LLWEAPONEX_Grimoire_Temp_GrimoirePosition(_Player, _tx, _ty, _tz)
AND
SysCount("DB_LLWEAPONEX_Debug_Grimoire_QueuedPositions", 5, _ID)
AND
IntegertoString(_ID, _IDStr)
AND
Random(500, _Ran)
AND
IntegertoString(_Ran, _RanStr)
AND
GetUUID(_Grimoire, _GrimoireID)
AND
LeaderLog_QRY_Log("COMBINE", "LLWEAPONEX_GrimoireMovingToPosition_", _GrimoireID, "_",_IDStr, "_", _RanStr)
AND
DB_LeaderLog_Temp_CombinedString(_QueueID)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_QueueID);
NOT DB_LLWEAPONEX_Grimoire_Temp_GrimoirePosition(_Player, _tx, _ty, _tz);
LeaderLib_Array_AddToArray(_GrimoireID, _QueueID);
DB_LLWEAPONEX_Debug_Grimoire_QueuedPositions(_Grimoire, _QueueID, _tx, _ty, _tz);
*/

/* Commented out
ProcObjectTimerFinished((CHARACTERGUID)_Grimoire, "LLWEAPONEX_Timers_Debug_GrimoirePositionChecker")
AND
DB_LLWEAPONED_Grimoire_Temp_GrimoireMoving(_Grimoire)
AND
GetUUID(_Grimoire, _ArrayID)
AND
DB_LeaderLib_Array_Length(_ArrayID, _Length)
AND
_Length > 1
AND
DB_LLWEAPONEX_Debug_Grimoire_NextPosition(_Grimoire, _QueueID, _tx, _ty, _tz)
AND
GetDistanceToPosition(_Grimoire, _tx, _ty, _tz, _Dist)
AND
LeaderLog_QRY_RealToString(_Dist, "[LLWEAPONEX:Debug:GrimoireTest] Grimoire's distance to target position: ", "")
AND
_Dist <= 1.0
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Debug:GrimoireTest] Grimoire close to position, with a new position queued. Purging queue.");
CharacterPurgeQueue(_Grimoire);
SetStoryEvent(_Grimoire, _QueueID);
*/

/*
IF
DB_LLWEAPONEX_Debug_Grimoire_QueuedPositions(_Grimoire, _NewQueueID, _x, _y, _z)
AND
NOT DB_LLWEAPONED_Grimoire_Temp_GrimoireMoving(_Grimoire)
THEN
LLWEAPONED_Grimoire_MoveToNextPosition(_Grimoire);

IF
DB_LLWEAPONEX_Debug_Grimoire_QueuedPositions(_Grimoire, _NewQueueID, _x, _y, _z)
AND
DB_LLWEAPONED_Grimoire_Temp_GrimoireMoving(_Grimoire)
AND
DB_LLWEAPONEX_Debug_Grimoire_NextPosition(_Grimoire, _QueueID, _tx, _ty, _tz)
AND
_NewQueueID != _QueueID
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Debug:GrimoireTest] New position queued while already moving. Purging queue.");
NOT DB_LLWEAPONEX_Debug_Grimoire_NextPosition(_Grimoire, _QueueID, _tx, _ty, _tz);
CharacterPurgeQueue(_Grimoire);
NOT DB_LLWEAPONED_Grimoire_Temp_GrimoireMoving(_Grimoire);
LLWEAPONED_Grimoire_MoveToNextPosition(_Grimoire);

IF
StoryEvent((CHARACTERGUID)_Grimoire, _QueueID)
AND
DB_LLWEAPONEX_Debug_Grimoire_NextPosition(_Grimoire, _QueueID, _tx, _ty, _tz)
AND
GetUUID(_Grimoire, _ArrayID)
THEN
NOT DB_LLWEAPONEX_Debug_Grimoire_NextPosition(_Grimoire, _QueueID, _tx, _ty, _tz);
NOT DB_LLWEAPONED_Grimoire_Temp_GrimoireMoving(_Grimoire);
LLWEAPONED_Grimoire_MoveToNextPosition(_Grimoire);

PROC
LLWEAPONED_Grimoire_MoveToNextPosition((CHARACTERGUID)_Grimoire)
AND
NOT DB_LLWEAPONED_Grimoire_Temp_GrimoireMoving(_Grimoire)
AND
GetUUID(_Grimoire, _ArrayID)
AND
LeaderLib_Array_QRY_ArrayIsPopulated(_ArrayID)
AND
LeaderLib_Array_QRY_GetFirstEntry(_ArrayID)
AND
DB_LeaderLib_Array_Temp_FirstEntry(_ID, _Index, _QueueID)
AND
DB_LLWEAPONEX_Debug_Grimoire_QueuedPositions(_Grimoire, _QueueID, _tx, _ty, _tz)
THEN
NOT DB_LLWEAPONEX_Debug_Grimoire_QueuedPositions(_Grimoire, _QueueID, _tx, _ty, _tz);
NOT DB_LeaderLib_Array_Temp_FirstEntry(_ID, _Index, _QueueID);
LeaderLib_Array_RemoveFromArrayAtIndex(_ArrayID, _Index);
DB_LLWEAPONED_Grimoire_Temp_GrimoireMoving(_Grimoire);
DB_LLWEAPONEX_Debug_Grimoire_NextPosition(_Grimoire, _QueueID, _tx, _ty, _tz);
CharacterMoveToPosition(_Grimoire, _tx, _ty, _tz, 1, _QueueID);
//ProcObjectTimer(_Grimoire, "LLWEAPONEX_Timers_Debug_GrimoirePositionChecker", 100);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Grimoire, "LLWEAPONEX_Timers_Debug_GrimoirePositionChecker")
AND
GetUUID(_Grimoire, _ArrayID)
AND
LeaderLib_Array_QRY_ArrayIsPopulated(_ArrayID)
THEN
ProcObjectTimer(_Grimoire, "LLWEAPONEX_Timers_Debug_GrimoirePositionChecker", 100);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Grimoire, "LLWEAPONEX_Timers_Debug_GrimoireFollowPlayer")
AND
DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _Interval)
AND
DB_LLWEAPONEX_Grimoire_Temp_PositionUpdated(_Player)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_PositionUpdated(_Player);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Grimoire, "LLWEAPONEX_Timers_Debug_GrimoireFollowPlayer")
AND
DB_LLWEAPONEX_Debug_ActiveGrimoires(_Player, _Grimoire, _Interval)
THEN
ProcObjectTimer(_Grimoire, "LLWEAPONEX_Timers_Debug_GrimoireFollowPlayer", _Interval);
*/
//END_REGION

PROC
LLWEAPONEX_Grimoire_Death_ClearData()
THEN
SysClear("DB_LLWEAPONEX_Grimoire_Temp_DeathEvent", 3);
SysClear("DB_LLWEAPONEX_Grimoire_Temp_CreateGhostAfterCast", 2);
SysClear("DB_LLWEAPONEX_Grimoire_Death_Temp_ClaimedSoul", 2);

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_00_PostCC"
