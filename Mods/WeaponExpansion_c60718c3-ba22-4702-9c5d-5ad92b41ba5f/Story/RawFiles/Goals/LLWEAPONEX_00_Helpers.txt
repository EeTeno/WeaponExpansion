Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION
//REGION QUERIES
/*
QRY
LLWEAPONEX_QRY_IgnoreWeapon((ITEMGUID)_Weapon)
AND
IsTagged(_Weapon, "LLMIME_MIMICKED_WEAPON", 1)
THEN
DB_NOOP(1);
*/

QRY
LLWEAPONEX_QRY_CharacterIsNpcOrGM((CHARACTERGUID)_Char)
AND
CharacterIsPlayer(_Char, 0)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_CharacterIsNpcOrGM((CHARACTERGUID)_Char)
AND
CharacterGameMaster(_Char, 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_ObjectIsGlobalOrExists((GUIDSTRING)_Obj)
AND
ObjectIsGlobal(_Obj, 0)
AND
ObjectExists(_Obj, 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_ObjectIsGlobalOrExists((GUIDSTRING)_Obj)
AND
ObjectIsGlobal(_Obj, 1)
AND
ObjectIsCharacter((CHARACTERGUID)_Obj, 1)
AND
CharacterIsDead(_Obj, 0)
AND
HasActiveStatus(_Obj, "DYING", 0)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_ObjectIsGlobalOrExists((GUIDSTRING)_Obj)
AND
ObjectIsGlobal(_Obj, 1)
AND
ObjectIsItem((ITEMGUID)_Obj, 1)
AND
ItemIsDestroyed(_Obj, 0)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_ItemIsWeapon((CHARACTERGUID)_Char, (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
NOT CharacterGetEquippedShield(_Char, _Item)
AND
GetTemplate(_Item, _Template)
AND
GetStatString(_Item, _Stat)
AND
StringContains(_Template, "WPN_", _a)
AND
StringContains(_Stat, "WPN_", _b)
AND
IntegerSum(_a, _b, _c)
AND
_c > 0
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_ItemIsWeapon((CHARACTERGUID)_Char, (ITEMGUID)_Item, (STRING)_Template)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
NOT CharacterGetEquippedShield(_Char, _Item)
AND
StringContains(_Template, "WPN_", 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_ItemIsWeaponOrShield((CHARACTERGUID)_Char, (ITEMGUID)_Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
CharacterGetEquippedShield(_Char, _Item)
THEN
DB_LLWEAPONEX_Helper_Temp_CheckedWeapon(_Char, _Item);

QRY
LLWEAPONEX_QRY_ItemIsWeaponOrShield((CHARACTERGUID)_Char, (ITEMGUID)_Item)
AND
NOT DB_LLWEAPONEX_Helper_Temp_CheckedWeapon(_Char, _Item)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
GetTemplate(_Item, _Template)
AND
StringContains(_Template, "WPN_", 1)
THEN
DB_LLWEAPONEX_Helper_Temp_CheckedWeapon(_Char, _Item);

QRY
LLWEAPONEX_QRY_ItemIsWeaponOrShield((CHARACTERGUID)_Char, (ITEMGUID)_Item)
AND
DB_LLWEAPONEX_Helper_Temp_CheckedWeapon(_Char, _Item)
THEN
NOT DB_LLWEAPONEX_Helper_Temp_CheckedWeapon(_Char, _Item);

QRY
LLWEAPONEX_QRY_ItemIsWeaponOrShield((CHARACTERGUID)_Char, (ITEMGUID)_Item, (STRING)_Template)
AND
_Item != NULL_00000000-0000-0000-0000-000000000000
AND
StringContains(_Template, "WPN_", 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_CharacterIsUnarmed((CHARACTERGUID)_Char)
AND
LLWEAPONEX_QRY_CharacterIsUnarmed(_Char, 0)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_CharacterIsUnarmed((CHARACTERGUID)_Char, 0)
AND
NOT CharacterGetEquippedWeapon(_Char, _)
AND
NOT CharacterGetEquippedShield(_Char, _)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_CharacterIsUnarmed((CHARACTERGUID)_Char, 1)
AND
NOT CharacterGetEquippedWeapon(_Char, _)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_WeaponTypeEquipped((CHARACTERGUID)_Char, (STRING)_WeaponType)
AND
CharacterGetEquippedItem(_Char, "Weapon", _Item)
AND
IsTagged(_Item, _WeaponType, 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_WeaponTypeEquipped((CHARACTERGUID)_Char, (STRING)_WeaponType)
AND
CharacterGetEquippedItem(_Char, "Shield", _Item)
AND
IsTagged(_Item, _WeaponType, 1)
THEN
DB_NOOP(1);

//IsTagged(_Item, "LLWEAPONEX_WeaponMasteryComplete", 0)
QRY
LLWEAPONEX_QRY_WeaponTypeMasteryEnabled((CHARACTERGUID)_Char, (STRING)_WeaponType)
AND
CharacterGetEquippedItem(_Char, "Weapon", _Item)
AND
IsTagged(_Item, _WeaponType, 1)
AND
IsTagged(_Item, "LLWEAPONEX_WeaponMasteryDisabled", 0)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_WeaponTypeMasteryEnabled((CHARACTERGUID)_Char, (STRING)_WeaponType)
AND
CharacterGetEquippedItem(_Char, "Shield", _Item)
AND
IsTagged(_Item, _WeaponType, 1)
AND
IsTagged(_Item, "LLWEAPONEX_WeaponMasteryDisabled", 0)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_HasWeaponExpansionWeapon((CHARACTERGUID)_Character)
AND
CharacterGetEquippedItem(_Character, "Weapon", _Weapon)
AND
CharacterGetEquippedItem(_Character, "Shield", _Shield)
AND
GetTemplate(_Weapon, _WeaponTemplate)
AND
StringContains(_WeaponTemplate, "LLWEAPONEX", 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_HasWeaponExpansionWeapon((CHARACTERGUID)_Character)
AND
CharacterGetEquippedItem(_Character, "Shield", _Weapon)
AND
GetTemplate(_Weapon, _WeaponTemplate)
AND
StringContains(_WeaponTemplate, "LLWEAPONEX", 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_IsEquippedWeapon((CHARACTERGUID)_Char, (ITEMGUID)_Item)
AND
CharacterGetEquippedItem(_Char, "Weapon", _Item)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_QRY_IsEquippedWeapon((CHARACTERGUID)_Char, (ITEMGUID)_Item)
AND
CharacterGetEquippedItem(_Char, "Shield", _Item)
THEN
DB_NOOP(1);
//END_REGION

//REGION BEHAVIOR_HELPERS
QRY
LLWEAPONEX_QRY_SetItemAmount((ITEMGUID)_Item)
THEN
LLWEAPONEX_SetItemAmount(_Item);

PROC
LLWEAPONEX_SetItemAmount((ITEMGUID)_Item)
AND
NOT ItemGetAmount(_Item, _)
THEN
SetVarInteger(_Item, "LLWEAPONEX_ItemAmount", 1);

PROC
LLWEAPONEX_SetItemAmount((ITEMGUID)_Item)
AND
ItemGetAmount(_Item, _Amount)
THEN
SetVarInteger(_Item, "LLWEAPONEX_ItemAmount", _Amount);

PROC
LLWEAPONEX_SetItemAmount((ITEMGUID)_Item, (INTEGER)_Amount)
THEN
SetVarInteger(_Item, "LLWEAPONEX_ItemAmount", _Amount);

IF
StoryEvent((ITEMGUID)_Item, "LLWEAPONEX_SetItemAmount")
THEN
LLWEAPONEX_SetItemAmount(_Item);
//END_REGION

//REGION CHARACTER_CREATION
IF
RegionStarted(_Level)
AND
IsCharacterCreationLevel(_Level, 1)
THEN
DB_LLWEAPONEX_PostCCEnabled(1);

IF
GameStarted(_Level, _)
AND
DB_LLWEAPONEX_PostCCEnabled(1)
AND
IsGameLevel(_Level, 1)
THEN
TimerCancel("LLWEAPONEX_Timers_PostCCTimer_ResetDB");
TimerLaunch("LLWEAPONEX_Timers_PostCCTimer_ResetDB", 500);

IF
TimerFinished("LLWEAPONEX_Timers_PostCCTimer_ResetDB")
AND
DB_IsPlayer(_Char)
THEN
LLWEAPONEX_OnCharacterCreationFinished(_Char);

//Some PostCC scripts have rules for when an item is equipped, so re-equip WEAPONEX weapons after CC
PROC
LLWEAPONEX_OnCharacterCreationFinished((CHARACTERGUID)_Char)
AND
LLWEAPONEX_QRY_HasWeaponExpansionWeapon(_Char)
THEN
LeaderLib_Helper_RefreshWeapons(_Char, 250, 500);

IF
TimerFinished("LLWEAPONEX_Timers_PostCCTimer_ResetDB")
AND
DB_LLWEAPONEX_PostCCEnabled(1)
THEN
NOT DB_LLWEAPONEX_PostCCEnabled(1);
//END_REGION

//REGION SET_OVERRIDES
PROC
LLWEAPONEX_AnimationSetOverride_Set((CHARACTERGUID)_Char, (STRING)_OverrideSet)
THEN
LLWEAPONEX_AnimationSetOverride_ClearData(_Char);
CharacterSetAnimationSetOverride(_Char, _OverrideSet);
DB_LLWEAPONEX_Temp_AnimationSetOverride(_Char, _OverrideSet);

PROC
LLWEAPONEX_AnimationSetOverride_Clear((CHARACTERGUID)_Char)
THEN
LLWEAPONEX_AnimationSetOverride_ClearData(_Char);
CharacterSetAnimationSetOverride(_Char, "");

PROC
LLWEAPONEX_AnimationSetOverride_ClearData((CHARACTERGUID)_Char)
AND
DB_LLWEAPONEX_Temp_AnimationSetOverride(_Char, _OverrideSet)
THEN
NOT DB_LLWEAPONEX_Temp_AnimationSetOverride(_Char, _OverrideSet);

// Called when exiting the respec mirror
// Since the respec mirror uses its own set override, we need to reset this
PROC
Proc_HomesteadTeleportAfterMirror((CHARACTERGUID)_Char,(ITEMGUID)_Mirror,(TRIGGERGUID)_Trigger)
AND
DB_LLWEAPONEX_Temp_AnimationSetOverride(_Char, _OverrideSet)
THEN
CharacterSetAnimationSetOverride(_Char, _OverrideSet);
//END_REGION

//REGION SKILL_USE
//These are helpers so alternate versions of skills (enemy variants) can still trigger the same logic
PROC
LLWEAPONEX_Skills_CharacterUsedSkill((CHARACTERGUID)_Char, (STRING)_Skill)
THEN
DB_NOOP(1);

PROC
LLWEAPONEX_Skills_CharacterUsedSkillAtPosition((CHARACTERGUID)_Char, (STRING)_Skill, (REAL)_x, (REAL)_y, (REAL)_z)
THEN
LLWEAPONEX_Skills_CharacterUsedSkill(_Char, _Skill);

PROC
LLWEAPONEX_Skills_CharacterUsedSkillOnTarget((CHARACTERGUID)_Char, (STRING)_Skill, (GUIDSTRING)_Target)
AND
GetPosition(_Target, _x, _y, _z)
THEN
LLWEAPONEX_Skills_CharacterUsedSkill(_Char, _Skill);
LLWEAPONEX_Skills_CharacterUsedSkillAtPosition(_Char, _Skill, _x, _y, _z);

PROC
LLWEAPONEX_Skills_CharacterCastSkill((CHARACTERGUID)_Char, (STRING)_Skill)
THEN
DB_NOOP(1);
//END_REGION

//REGION NPC_EQUIPMENT_FIX
IF
StoryEvent((CHARACTERGUID)_Npc, "LLWEAPONEX_Npc_EquipInventoryContents")
THEN
InventoryLaunchIterator(_Npc, "LLWEAPONEX_Iterator_Npc_EquipInventory", "");
/*
ProcObjectTimer(_Npc, "LLWEAPONEX_Timers_Iterator_Npc_RefreshEquipment", 1000);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Npc, "LLWEAPONEX_Timers_Iterator_Npc_RefreshEquipment")
AND
DB_LeaderLib_EquipmentSlots(_Slot)
AND
CharacterGetEquippedItem(_Npc, _Slot, (ITEMGUID)_Item)
THEN
CharacterUnequipItem(_Npc, _Item);
CharacterEquipItem(_Npc, _Item);
*/

IF
StoryEvent((ITEMGUID)_Item, "LLWEAPONEX_Iterator_Npc_EquipInventory")
AND
GetInventoryOwner(_Item, _Owner)
AND
ObjectIsCharacter((CHARACTERGUID)_Owner, 1)
AND
ItemIsEquipable(_Item, 1)
AND
NOT LeaderLib_Helper_QRY_ItemIsEquipped(_Owner, _Item)
AND
String(_Item, _ItemStr)
AND
String(_Owner, _OwnerStr)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_00_Helpers:Iterator_Npc_EquipInventory] Equipping item [",_ItemStr,"] on NPC [",_OwnerStr,"].");
CharacterEquipItem(_Owner, _Item);
//END_REGION

//REGION BASIC_ATTACK_TRACKING
IF
CharacterStartAttackObject(_Defender, _, _Char)
THEN
ObjectSetFlag(_Char, "LLWEAPONEX_IsBasicAttacking", 0);
LeaderLib_Timers_StartObjectTimer(_Char, 1800, "LLWEAPONEX_Timers_ClearBasicAttackFlag", "LLWEAPONEX_ClearBasicAttackFlag");

IF
CharacterStartAttackPosition(_x, _y, _z, _, _Char)
THEN
ObjectSetFlag(_Char, "LLWEAPONEX_IsBasicAttacking", 0);
LeaderLib_Timers_StartObjectTimer(_Char, 1800, "LLWEAPONEX_Timers_ClearBasicAttackFlag", "LLWEAPONEX_ClearBasicAttackFlag");

IF
StoryEvent((CHARACTERGUID)_Char, "LLWEAPONEX_ClearBasicAttackFlag")
THEN
ObjectClearFlag(_Char, "LLWEAPONEX_IsBasicAttacking", 0);

IF
AttackedByObject(_Defender, _, (CHARACTERGUID)_Char, _, _)
AND
ObjectGetFlag(_Char, "LLWEAPONEX_IsBasicAttacking", 1)
THEN
LeaderLib_Timers_StartObjectTimer(_Char, 250, "LLWEAPONEX_Timers_ClearBasicAttackFlag", "LLWEAPONEX_ClearBasicAttackFlag");

IF
CharacterMissedBy(_Defender, _, _Char)
AND
ObjectGetFlag(_Char, "LLWEAPONEX_IsBasicAttacking", 1)
THEN
LeaderLib_Timers_StartObjectTimer(_Char, 250, "LLWEAPONEX_Timers_ClearBasicAttackFlag", "LLWEAPONEX_ClearBasicAttackFlag");
//END_REGION

//REGION HIT_TYPE_FILTERING
QRY
LLWEAPONEX_Helper_IntMatch((INTEGER)_HitType, (INTEGER)_Match1, (INTEGER)_Match2)
AND
_HitType == _Match1
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Helper_IntMatch((INTEGER)_HitType, (INTEGER)_Match1, (INTEGER)_Match2)
AND
_HitType == _Match2
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Helper_IntMatch((INTEGER)_HitType, (INTEGER)_Match1, (INTEGER)_Match2, (INTEGER)_Match3)
AND
LLWEAPONEX_Helper_IntMatch(_HitType, _Match1, _Match2)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Helper_IntMatch((INTEGER)_HitType, (INTEGER)_Match1, (INTEGER)_Match2, (INTEGER)_Match3)
AND
_HitType == _Match3
THEN
DB_NOOP(1);
//END_REGION

//REGION NRD_HELPERS
/* [OSITOOLS_ONLY]
QRY
LLWEAPONEX_NRD_ClearAllDamage((INTEGER64)_Handle)
THEN
NRD_HitClearAllDamage(_Handle);

QRY
LLWEAPONEX_NRD_StoreHandle((CHARACTERGUID)_Target, (CHARACTERGUID)_Attacker, (INTEGER64)_Handle)
THEN
DB_LLWEAPONEX_Temp_HitHandle(_Target, _Attacker, _Handle);
*/

// [BEGIN_NO_OSITOOLS]
QRY
LLWEAPONEX_NRD_ClearAllDamage((INTEGER64)_Handle)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_NRD_StoreHandle((CHARACTERGUID)_Target, (CHARACTERGUID)_Attacker, (INTEGER64)_Handle)
THEN
DB_NOOP(1);
// [END_NO_OSITOOLS]
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_WeaponExpansion"