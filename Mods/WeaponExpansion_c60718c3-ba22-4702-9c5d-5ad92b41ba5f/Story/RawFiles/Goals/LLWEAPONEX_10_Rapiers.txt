Version 1
SubGoalCombiner SGC_AND
INITSECTION
LeaderLib_Skills_Register_StatusToggleSkill("Shout_LLWEAPONEX_Rapier_DuelistStance", "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST");
LeaderLib_Statuses_Register_PermanentStatus("WeaponExpansion", "MasteryPassives", "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", "LLWEAPONEX_DuelistStanceWasEnabled");

KBSECTION

//REGION OFFHAND_QRY
QRY
LLWEAPONEX_Rapiers_QRY_HasFullHands((CHARACTERGUID)_Player)
AND
CharacterGetEquippedItem(_Player, "Weapon", _Weapon)
AND
_Weapon != NULL_00000000-0000-0000-0000-000000000000
AND
CharacterGetEquippedItem(_Player, "Shield", _Shield)
AND
_Shield != NULL_00000000-0000-0000-0000-000000000000
AND
IsTagged(_Shield, "LLWEAPONEX_Grimoire", 0)
THEN
DB_NOOP(1);
//END_REGION

//REGION DUELIST_EMPTY_HAND
PROC
LLWEAPONEX_WeaponMastery_UnlockSkill((CHARACTERGUID)_Player, "LLWEAPONEX_Rapier", "DuelistStance")
AND
NOT LLWEAPONEX_Rapiers_QRY_HasFullHands(_Player)
THEN
LLWEAPONEX_WeaponMastery_Rapiers_OnEmptyHandGained(_Player);

PROC
LLWEAPONEX_WeaponMastery_Rapiers_OnEmptyHandGained((CHARACTERGUID)_Player)
AND
ObjectGetFlag(_Player, "LLWEAPONEX_DuelistStanceWasEnabled", 1) // Set/cleared by LeaderLib when the toggle skill is used
AND
NOT LeaderLib_Helper_QRY_HasPermanentStatus(_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST")
THEN
ApplyStatus(_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", -1.0, 0, _Player);

PROC
LLWEAPONEX_WeaponMastery_Rapiers_OnEmptyHandLost((CHARACTERGUID)_Player)
THEN
//CharacterStatusText(_Player, "LLWEAPONEX_Status_DuelistStance_Warning");
ShowNotification(_Player, "LLWEAPONEX_Status_DuelistStance_Warning");
RemoveStatus(_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST");

PROC
LeaderLib_Skills_BlockStatusToggle((CHARACTERGUID)_Player, "Shout_LLWEAPONEX_Rapier_DuelistStance", "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST")
AND
LLWEAPONEX_Rapiers_QRY_HasFullHands(_Player)
THEN
ShowNotification(_Player, "LLWEAPONEX_Status_DuelistStance_Failed");
DB_LeaderLib_Skills_BlockStatusToggle(_Player, "Shout_LLWEAPONEX_Rapier_DuelistStance", "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST");

PROC
LeaderLib_Statuses_BlockPermanentStatus((CHARACTERGUID)_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", "LLWEAPONEX_DuelistStanceWasEnabled")
AND
NOT LLWEAPONEX_WeaponMastery_QRY_HasActiveMastery(_Player, "LLWEAPONEX_Rapier")
THEN
DB_LeaderLib_Statuses_PermanentStatusBlocked(_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", "LLWEAPONEX_DuelistStanceWasEnabled");

PROC
LeaderLib_Statuses_BlockPermanentStatus((CHARACTERGUID)_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", "LLWEAPONEX_DuelistStanceWasEnabled")
AND
NOT DB_LeaderLib_Statuses_PermanentStatusBlocked(_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", "LLWEAPONEX_DuelistStanceWasEnabled")
AND
LLWEAPONEX_Rapiers_QRY_HasFullHands(_Player)
THEN
DB_LeaderLib_Statuses_PermanentStatusBlocked(_Player, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", "LLWEAPONEX_DuelistStanceWasEnabled");
//END_REGION

//REGION DUELIST_STANCE_WEAPON_BUFF
IF
CharacterStatusApplied(_Character, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", _)
THEN
ApplyStatus(_Character, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST_WEAPON", -1.0, 1, _Character);

IF
CharacterStatusRemoved(_Character, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST", _)
THEN
RemoveStatus(_Character, "LLWEAPONEX_RAPIER_MASTERY_STANCE_DUELIST_WEAPON");
//END_REGION

//REGION SUCKER_PUNCH_COMBO
IF
CharacterUsedSkillOnTarget(_Character, _Target, "Target_LLWEAPONEX_ScriptStart_Rapier_SuckerCombo1", _, _)
THEN
DB_LLWEAPONEX_Rapiers_Temp_CastSuckerCombo1(_Character, _Target);
//CharacterPurgeQueue(_Character);
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_CastSuckerCombo1", 50);

/*
IF
SkillCast(_Character, "Target_LLWEAPONEX_Rapier_SuckerCombo1_Start", _, _)
THEN
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_CastSuckerCombo1", 200);
*/

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_CastSuckerCombo1")
AND
DB_LLWEAPONEX_Rapiers_Temp_CastSuckerCombo1(_Character, _Target)
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_CastSuckerCombo1(_Character, _Target);
RemoveStatus(_Character, "LLWEAPONEX_WS_RAPIER_SUCKERCOMBO1");
CharacterUseSkill(_Character, "Target_LLWEAPONEX_Rapier_SuckerCombo1", _Target, 1, 1, 1);

//END_REGION
/*
//REGION EMPTY_HAND_EVENTS
PROC
LLWEAPONEX_WeaponMastery_BlockUnlockingSkill((CHARACTERGUID)_Player, "LLWEAPONEX_Rapier", "DuelistStance")
AND
NOT LLWEAPONEX_Rapiers_QRY_HasFullHands(_Player)
THEN
DB_LLWEAPONEX_WeaponMastery_BlockUnlockingSkill(_Player, "LLWEAPONEX_Rapier", "DuelistStance");

PROC
LLWEAPONEX_WeaponMastery_OnWeaponEquipped((CHARACTERGUID)_Player, (ITEMGUID)_Item, "LLWEAPONEX_Rapier")
AND
DB_LLWEAPONEX_WeaponMastery_Learned(_Player, "LLWEAPONEX_Rapier", "DuelistStance")
AND
NOT LLWEAPONEX_Rapiers_QRY_HasFullHands(_Player)
THEN
LLWEAPONEX_WeaponMastery_UnlockSkill(_Player, "LLWEAPONEX_Rapier", "DuelistStance");
//END_REGION
*/

//REGION SUCKER_PUNCH_COMBOS
//Rapier Mastery Sucker Punch Knockdown
IF
CharacterStatusApplied(_Target, "LLWEAPONEX_SUCKER_PUNCH", _Source)
AND
GetStatusTurns(_Target, "LLWEAPONEX_SUCKER_PUNCH", _CurrentTurns)
AND
IsTagged(_Source, "LLWEAPONEX_Rapier_SuckerComboEnabled", _AddTurns)
AND
IntegerSum(_CurrentTurns, _AddTurns, _Turns)
AND
Real(_Turns, _Duration)
THEN
ApplyStatus(_Target, "KNOCKED_DOWN", _Duration, 0, _Source);
RemoveStatus(_Target, "LLWEAPONEX_SUCKER_PUNCH");
//END_REGION

//REGION FLICKER_STRIKE
/*
IF
CharacterStatusApplied(_Char, "LLWEAPONEX_RAPIER_FRENZY_CHARGE", _)
THEN
LLWEAPONEX_Rapiers_Internal_IncreaseFrenzyCharges(_Char);

PROC
LLWEAPONEX_Rapiers_Internal_IncreaseFrenzyCharges((CHARACTERGUID)_Char)
AND
NOT DB_LLWEAPONEX_Rapiers_Temp_FrenzyCharges(_Char, _)
THEN
DB_LLWEAPONEX_Rapiers_Temp_FrenzyCharges(_Char, 0);

PROC
LLWEAPONEX_Rapiers_Internal_IncreaseFrenzyCharges((CHARACTERGUID)_Char)
AND
DB_LLWEAPONEX_Rapiers_Temp_FrenzyCharges(_Char, _Charges)
AND
IntegerSum(_Charges, 1, _NextCharges)
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_FrenzyCharges(_Char, _Charges);
DB_LLWEAPONEX_Rapiers_Temp_FrenzyCharges(_Char, _NextCharges);

IF
CharacterStatusRemoved(_Char, "LLWEAPONEX_RAPIER_FRENZY_CHARGE", _)
AND
HasActiveStatus(_Char, "LLWEAPONEX_RAPIER_FRENZY_CHARGE", _AnyActive)
THEN
LLWEAPONEX_Rapiers_Internal_DecreaseFrenzyCharges(_Char, _AnyActive);

PROC
LLWEAPONEX_Rapiers_Internal_DecreaseFrenzyCharges((CHARACTERGUID)_Char, 1)
AND
DB_LLWEAPONEX_Rapiers_Temp_FrenzyCharges(_Char, _Charges)
AND
IntegerSubtract(_Charges, 1, _NextCharges)
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_FrenzyCharges(_Char, _Charges);
DB_LLWEAPONEX_Rapiers_Temp_FrenzyCharges(_Char, _NextCharges);

PROC
LLWEAPONEX_Rapiers_Internal_DecreaseFrenzyCharges((CHARACTERGUID)_Char, 1)
AND
DB_LLWEAPONEX_Rapiers_Temp_FrenzyCharges(_Char, _Charges)
AND
_Charges <= 0
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_FrenzyCharges(_Char, _Charges);

//No charges
PROC
LLWEAPONEX_Rapiers_Internal_DecreaseFrenzyCharges((CHARACTERGUID)_Char, 0)
AND
DB_LLWEAPONEX_Rapiers_Temp_FrenzyCharges(_Char, _Charges)
THEN
NOT DB_LLWEAPONEX_Rapiers_Temp_FrenzyCharges(_Char, _Charges);
*/

//Frenzy charge consuming
IF
CharacterStatusApplied(_Target, "LLWEAPONEX_RAPIER_FLICKER_HIT", (CHARACTERGUID)_Source)
THEN
LeaderLib_Timers_CancelObjectObjectTimer(_Source, "LLWEAPONEX_Timers_FlickerStrike_CheckForContinue");
LeaderLib_Timers_StartObjectObjectTimer(_Source, _Target, 800, "LLWEAPONEX_Timers_FlickerStrike_CheckForContinue", "LLWEAPONEX_FlickerStrike_CheckForContinue");

PROC
LeaderLib_Timers_ObjectObjectTimerFinished((CHARACTERGUID)_Source, (CHARACTERGUID)_Target, "LLWEAPONEX_FlickerStrike_CheckForContinue")
AND
HasActiveStatus(_Source, "LLWEAPONEX_RAPIER_FRENZY_CHARGE", 1)
THEN
PlayAnimation(_Source, "");
RemoveStatus(_Source, "LLWEAPONEX_RAPIER_FRENZY_CHARGE");
CharacterUseSkill(_Source, "MultiStrike_LLWEAPONEX_Rapier_FlickerStrike_FrenzyBonus", _Target, 1, 1, 1);
//END_REGION

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_00_PostCC"