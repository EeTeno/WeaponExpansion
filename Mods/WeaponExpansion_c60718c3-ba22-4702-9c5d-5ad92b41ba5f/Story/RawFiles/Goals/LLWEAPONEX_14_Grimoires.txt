Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLWEAPONEX_Grimoire_InitSettings();

KBSECTION
//REGION SETTINGS
PROC
LLWEAPONEX_Grimoire_InitSettings()
THEN
DB_LLWEAPONEX_Grimoire_LoopFX("WPN_Shield_LLWEAPONEX_Grimoire_Wind_A_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216", "LLWEAPONEX_FX_Items_Grimoire_Wind_A", "LLWEAPONEX_FX_Grimoire_Equipped_Sheathed_Wind_A", "LLWEAPONEX_FX_Grimoire_Equipped_Unsheathed_Wind_A", "LLWEAPONEX_FX_Grimoire_Equipped_Transition_Wind_A");
DB_LLWEAPONEX_Grimoire_LoopFX("WPN_Shield_LLWEAPONEX_Grimoire_Swap_A_f4227e7f-86df-498f-817c-fc00896eb040", "LLWEAPONEX_FX_Items_Grimoire_Swap_A", "LLWEAPONEX_FX_Grimoire_Equipped_Sheathed_Swap_A", "LLWEAPONEX_FX_Grimoire_Equipped_Unsheathed_Swap_A", "LLWEAPONEX_FX_Grimoire_Equipped_Transition_Swap_A");
DB_LLWEAPONEX_Grimoire_LoopFX("WPN_Shield_LLWEAPONEX_Grimoire_Mimicry_Unique_c9fcc947-4423-40b9-9629-ae2d1e156dfc", "LLWEAPONEX_FX_Items_Grimoire_Mimicry_A", "LLWEAPONEX_FX_Grimoire_Equipped_Sheathed_Mimicry_A", "LLWEAPONEX_FX_Grimoire_Equipped_Unsheathed_Mimicry_A", "LLWEAPONEX_FX_Grimoire_Equipped_Transition_Mimicry_A");

DB_LLWEAPONEX_Grimoire_MagicWhitelist("Wind", "LLWEAPONEX_GRIMOIRE_WIND_ACTIVE", "", "Air");
DB_LLWEAPONEX_Grimoire_MagicWhitelist("Swap", "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", "teleportation", "");
//DB_LLWEAPONEX_Grimoire_MagicWhitelist("Swap", "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", "jump", "");

LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Wind", 3, "Boost_LLWEAPONEX_Grimoire_Attribute_Intelligence_Small", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Wind_A_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Wind", 4, "Boost_LLWEAPONEX_Grimoire_Ability_Air_Small", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Wind_A_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Wind", 5, "Boost_LLWEAPONEX_Grimoire_Armor_All_Small", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Wind_A_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Wind", 6, "Boost_LLWEAPONEX_Grimoire_Innate_DeflectProjectiles", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Wind_A_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Wind", 7, "Boost_LLWEAPONEX_Grimoire_Armor_Magic_Small", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Wind_A_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Wind", 10, "Boost_LLWEAPONEX_Grimoire_EmptyRuneSlot", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Wind_A_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Wind", 11, "Boost_LLWEAPONEX_Grimoire_Attribute_Intelligence_Medium", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Wind_A_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Wind", 12, "Boost_LLWEAPONEX_Grimoire_Armor_Magic_Medium", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Wind_A_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Wind", 14, "Boost_LLWEAPONEX_Grimoire_Ability_Air_Medium", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Wind_A_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Wind", 16, "Boost_LLWEAPONEX_Grimoire_EmptyRuneSlot", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Wind_A_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216");

LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Swap", 3, "Boost_LLWEAPONEX_Grimoire_Skill_Teleportation", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Swap_A_f4227e7f-86df-498f-817c-fc00896eb040");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Swap", 5, "Boost_LLWEAPONEX_Grimoire_Armor_Magic_Small", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Swap_A_f4227e7f-86df-498f-817c-fc00896eb040");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Swap", 6, "Boost_LLWEAPONEX_Grimoire_Attribute_Intelligence_Small", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Swap_A_f4227e7f-86df-498f-817c-fc00896eb040");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Swap", 8, "Boost_LLWEAPONEX_Grimoire_Armor_All_Small", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Swap_A_f4227e7f-86df-498f-817c-fc00896eb040");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Swap", 8, "Boost_LLWEAPONEX_Grimoire_Skill_Swap_Adept", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Swap_A_f4227e7f-86df-498f-817c-fc00896eb040");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Swap", 10, "Boost_LLWEAPONEX_Grimoire_EmptyRuneSlot", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Swap_A_f4227e7f-86df-498f-817c-fc00896eb040");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Swap", 11, "Boost_LLWEAPONEX_Grimoire_Skill_Swap_Master", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Swap_A_f4227e7f-86df-498f-817c-fc00896eb040");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Swap", 13, "Boost_LLWEAPONEX_Grimoire_Attribute_Intelligence_Large", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Swap_A_f4227e7f-86df-498f-817c-fc00896eb040");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Swap", 16, "Boost_LLWEAPONEX_Grimoire_EmptyRuneSlot", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Swap_A_f4227e7f-86df-498f-817c-fc00896eb040");

LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Mimicry", 3, "Boost_LLWEAPONEX_Grimoire_Armor_Magic_Small", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Mimicry_Unique_c9fcc947-4423-40b9-9629-ae2d1e156dfc");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Mimicry", 5, "Boost_LLWEAPONEX_Grimoire_Attribute_Intelligence_Small", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Mimicry_Unique_c9fcc947-4423-40b9-9629-ae2d1e156dfc");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Mimicry", 6, "Boost_LLWEAPONEX_Grimoire_Armor_Physical_Small", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Mimicry_Unique_c9fcc947-4423-40b9-9629-ae2d1e156dfc");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Mimicry", 8, "Boost_LLWEAPONEX_Grimoire_Armor_All_Small", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Mimicry_Unique_c9fcc947-4423-40b9-9629-ae2d1e156dfc");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Mimicry", 8, "Boost_LLWEAPONEX_Grimoire_Attribute_Intelligence_Medium", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Mimicry_Unique_c9fcc947-4423-40b9-9629-ae2d1e156dfc");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Mimicry", 10, "Boost_LLWEAPONEX_Grimoire_EmptyRuneSlot", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Mimicry_Unique_c9fcc947-4423-40b9-9629-ae2d1e156dfc");
//LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Mimicry", 11, "", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Mimicry_Unique_c9fcc947-4423-40b9-9629-ae2d1e156dfc");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Mimicry", 13, "Boost_LLWEAPONEX_Grimoire_Attribute_Intelligence_Large", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Mimicry_Unique_c9fcc947-4423-40b9-9629-ae2d1e156dfc");
LeaderLib_Growth_Items_Register_DeltaMod("WeaponExpansion.Grimoire.Mimicry", 16, "Boost_LLWEAPONEX_Grimoire_EmptyRuneSlot", "Template", "WPN_Shield_LLWEAPONEX_Grimoire_Mimicry_Unique_c9fcc947-4423-40b9-9629-ae2d1e156dfc");

//END_REGION

IF
CharacterUsedSkillAtPosition(_Character, _x, _y, _z, "Target_LLWEAPONEX_Grimoire_StartTransit", _, _)
THEN
CharacterUseSkillAtPosition(_Character, "Projectile_LLWEAPONEX_Grimoire_Transit", _x, _y, _z, 0, 1);

IF
CharacterUsedSkillOnTarget(_Character, _Target, "Target_LLWEAPONEX_Grimoire_StartTransit", _, _)
THEN
CharacterUseSkill(_Character, "Projectile_LLWEAPONEX_Grimoire_Transit", _Target, 0, 1, 1);

IF
CharacterUsedSkill(_Character, "Projectile_LLWEAPONEX_Grimoire_Transit", _, _)
AND
DB_CurrentLevel(_Region)
THEN
SetStoryEvent(_Character, "LLWEAPONEX_UsedTransitSkill");
PROC_LoopEffect("LLWEAPONEX_FX_Projectiles_Skills_Transit_01", _Character, "LLWEAPONEX_TransitLoopEffect_A", _Region, "Dummy_FrontFX");
ApplyStatus(_Character, "LLWEAPONEX_GRIMOIRE_TRANSIT", 6.0, 0, _Character);

IF
SkillCast(_Character, "Projectile_LLWEAPONEX_Grimoire_Transit", _, _)
THEN
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_RemoveTransitEffect", 500);
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_RemoveTransitStatus", 1000);

PROC
ProcObjectTimerFinished(_Character, "LLWEAPONEX_Timers_RemoveTransitEffect")
THEN
PROC_StopLoopEffect(_Character, "LLWEAPONEX_TransitLoopEffect_A");

PROC
ProcObjectTimerFinished(_Character, "LLWEAPONEX_Timers_RemoveTransitStatus")
THEN
RemoveStatus(_Character, "LLWEAPONEX_GRIMOIRE_TRANSIT");

//REGION EQUIPPED_FLAG
IF
ItemUnEquipped(_Item, _Character)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire", 1)
THEN
ObjectClearFlag(_Character, "LLWEAPONEX_GrimoireEquipped");

IF
ItemEquipped(_Item, _Character)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire", 1)
THEN
ObjectSetFlag(_Character, "LLWEAPONEX_GrimoireEquipped");
/*
ITEMGUID_WPN_Shield_LLWEAPONEX_Grimoire_Mimicry_Unique_c9fcc947-4423-40b9-9629-ae2d1e156dfc
ITEMGUID_WPN_Shield_LLWEAPONEX_Grimoire_Swap_A_f4227e7f-86df-498f-817c-fc00896eb040
ITEMGUID_WPN_Shield_LLWEAPONEX_Grimoire_Wind_A_c12e4d82-a6a5-4b3b-b29d-9e7810ff3216
*/
//END_REGION

//REGION LOOP_FX
IF
StoryEvent((ITEMGUID)_Item, "LLWEAPONEX_Grimoire_StartItemEffect")
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire", 1)
AND
GetTemplate(_Item, _Template)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
AND
PlayLoopEffect(_Item, _ItemFX, "", _Handle)
THEN
DB_LLWEAPONEX_Grimoire_ItemLoopFX(_Item, _Handle);

IF
ItemDropped(_Item)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire", 1)
AND
GetTemplate(_Item, _Template)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
AND
PlayLoopEffect(_Item, _ItemFX, "", _Handle)
THEN
DB_LLWEAPONEX_Grimoire_ItemLoopFX(_Item, _Handle);

IF
ItemDestroyed(_Item)
AND
DB_LLWEAPONEX_Grimoire_ItemLoopFX(_Item, _Handle)
THEN
StopLoopEffect(_Handle);
NOT DB_LLWEAPONEX_Grimoire_ItemLoopFX(_Item, _Handle);

IF
ItemAddedToCharacter(_Item, _Character)
AND
DB_LLWEAPONEX_Grimoire_ItemLoopFX(_Item, _Handle)
THEN
StopLoopEffect(_Handle);
NOT DB_LLWEAPONEX_Grimoire_ItemLoopFX(_Item, _Handle);

IF
ItemEquipped(_Item, _Character)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire", 1)
AND
GetTemplate(_Item, _Template)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
LLWEAPONEX_Grimoire_PlayEquippedFX(_Character, _Item, _Template, _SheathedFX, _UnsheathedFX);

//Sheathed
PROC
LLWEAPONEX_Grimoire_PlayEquippedFX((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, (STRING)_SheathedFX, (STRING)_UnsheathedFX)
AND
ObjectGetFlag(_Character, "LLWEAPONEX_GrimoireOpened", 0)
THEN
SetVarString(_Character, "LLWEAPONEX_Grimoire_NextLoopFX", _SheathedFX);
SetVarFixedString(_Character, "LLWEAPONEX_Grimoire_NextBone", "Dummy_BackFX_L");
SetStoryEvent(_Character, "LLWEAPONEX_Grimoire_PlaySheathedFX");
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _SheathedFX);

//Unsheathed
PROC
LLWEAPONEX_Grimoire_PlayEquippedFX((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Template, (STRING)_SheathedFX, (STRING)_UnsheathedFX)
AND
ObjectGetFlag(_Character, "LLWEAPONEX_GrimoireOpened", 1)
THEN
SetVarString(_Character, "LLWEAPONEX_Grimoire_NextLoopFX", _UnsheathedFX);
SetVarFixedString(_Character, "LLWEAPONEX_Grimoire_NextBone", "Dummy_FrontFX_L");
SetStoryEvent(_Character, "LLWEAPONEX_Grimoire_PlayUnsheathedFX");
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _UnsheathedFX);
LeaderLib_StartObjectTimer(_Character, 30, "LLWEAPONEX_Timers_StopGrimoireSheathedFX", "LLWEAPONEX_Grimoire_StopSheathedFX");

IF
CharacterStatusApplied(_Character, "UNSHEATHED", _)
AND
ObjectGetFlag(_Character, "LLWEAPONEX_GrimoireOpened", 0)
THEN
ObjectSetFlag(_Character, "LLWEAPONEX_GrimoireOpened");

IF
CharacterStatusRemoved(_Character, "UNSHEATHED", _)
AND
ObjectGetFlag(_Character, "LLWEAPONEX_GrimoireOpened", 1)
THEN
ObjectClearFlag(_Character, "LLWEAPONEX_GrimoireOpened");

IF
ObjectFlagSet("LLWEAPONEX_GrimoireOpened", (CHARACTERGUID)_Character, _)
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _FX)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _FX);
LLWEAPONEX_Grimoire_PlayEquippedFX(_Character, _Item, _Template, _SheathedFX, _UnsheathedFX);

IF
ObjectFlagCleared("LLWEAPONEX_GrimoireOpened", (CHARACTERGUID)_Character, _)
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _FX)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
PlayEffect(_Character, _TransitionFX, "Dummy_FrontFX_L");
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_Grimoires_PlaySheathedFX", 1700);
//PlayBeamEffect(_Character, _Character, _TransitionFX, "Dummy_FrontFX_L", "Dummy_BackFX_L");
//So the book doesn't blink as the next effect starts
LeaderLib_StartObjectTimer(_Character, 30, "LLWEAPONEX_Timers_StopGrimoireUnsheathedFX", "LLWEAPONEX_Grimoire_StopUnsheathedFX");
//SetStoryEvent(_Character, "LLWEAPONEX_Grimoire_StopUnsheathedFX");

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_Grimoires_PlaySheathedFX")
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _FX)
AND
DB_LLWEAPONEX_Grimoire_LoopFX(_Template, _ItemFX, _SheathedFX, _UnsheathedFX, _TransitionFX)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _FX);
LLWEAPONEX_Grimoire_PlayEquippedFX(_Character, _Item, _Template, _SheathedFX, _UnsheathedFX);

IF
ItemUnEquipped(_Item, _Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _FX)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _FX);
SetStoryEvent(_Character, "LLWEAPONEX_Grimoire_StopEquippedFX");

IF
RegionEnded(_)
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _FX)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _FX);
SetStoryEvent(_Character, "LLWEAPONEX_Grimoire_StopEquippedFX");

IF
RegionEnded(_)
AND
DB_LLWEAPONEX_Grimoire_ItemLoopFX(_Item, _Handle)
THEN
StopLoopEffect(_Handle);
NOT DB_LLWEAPONEX_Grimoire_ItemLoopFX(_Item, _Handle);

PROC
LLWEAPONEX_Grimoire_StopLoopFX((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _FX)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_ActiveFX(_Character, _Item, _Template, _FX);
SetStoryEvent(_Character, "LLWEAPONEX_Grimoire_StopEquippedFX");
//END_REGION

//REGION MAGIC_REMOVAL
IF
ItemUnEquipped(_Item, _Character)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire_Magic", 1)
AND
CharacterGetEquippedItem(_Character, "Weapon", (ITEMGUID)_Magic)
AND
IsTagged(_Magic, "LLWEAPONEX_Grimoire_Magic", 1)
THEN
ItemDestroy(_Magic);

IF
ItemDropped(_Item)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire_Magic", 1)
THEN
ItemDestroy(_Item);

IF
ItemMovedFromTo(_Item, _From, _To, _IsTrade)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire_Magic", 1)
AND
ObjectIsCharacter((CHARACTERGUID)_To, 1)
AND
ObjectIsCharacter((CHARACTERGUID)_From, 1)
AND
ItemGetOriginalOwner(_Item, _From)
AND
_To != _From
THEN
ItemDestroy(_Item);

PROC
ProcBlockUseOfItem((CHARACTERGUID)_Character, (ITEMGUID)_Item)
AND
IsTagged(_Item, "LLWEAPONEX_Grimoire_Magic", 1)
AND
NOT ItemGetOriginalOwner(_Item, _Character)
THEN
DB_CustomUseItemResponse(_Character, _Item, 0);
CharacterStatusText(_Character, "LLWEAPONEX_Error_GrimoireMagicOwnerMismatch");

IF
ItemUnEquipped(_Grimoire, _Character)
AND
IsTagged(_Grimoire, "LLWEAPONEX_Grimoire", 1)
THEN
RemoveStatus(_Character, "LLWEAPONEX_GRIMOIRE_WIND_ACTIVE");
RemoveStatus(_Character, "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE");
//END_REGION

//REGION SKILL_TYPE_EVENTS
IF
CharacterUsedSkillOnTarget(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
ObjectGetFlag(_Caster, "LLWEAPONEX_GrimoireEquipped", 1)
AND
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement)
THEN
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement);

IF
CharacterUsedSkillOnZoneWithTarget(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
ObjectGetFlag(_Caster, "LLWEAPONEX_GrimoireEquipped", 1)
AND
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement)
THEN
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement);

IF
CharacterUsedSkill(_Caster, _Skill, _SkillType, _SkillElement)
AND
ObjectGetFlag(_Caster, "LLWEAPONEX_GrimoireEquipped", 1)
AND
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _, _Skill, _SkillType, _SkillElement)
THEN
DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement);
ProcObjectTimer(_Caster, "LLWEAPONEX_Timers_Grimoire_SkillSelfDelay", 50);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Caster, "LLWEAPONEX_Timers_Grimoire_SkillSelfDelay")
AND
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement)
AND
DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Caster, "LLWEAPONEX_Timers_Grimoire_SkillSelfDelay")
AND
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Caster, "LLWEAPONEX_Timers_Grimoire_SkillSelfDelay")
AND
DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillSelfEvent(_Caster, _Skill, _SkillType, _SkillElement);
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Caster, _Skill, _SkillType, _SkillElement);

IF
CharacterUsedSkillAtPosition(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement)
AND
ObjectGetFlag(_Caster, "LLWEAPONEX_GrimoireEquipped", 1)
AND
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _, _Skill, _SkillType, _SkillElement)
THEN
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement);
ProcObjectTimer(_Caster, "LLWEAPONEX_Timers_Grimoire_SkillPositionDelay", 250);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Caster, "LLWEAPONEX_Timers_Grimoire_SkillPositionDelay")
AND
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Caster, "LLWEAPONEX_Timers_Grimoire_SkillPositionDelay")
AND
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoires:SkillEvent] Character used skill on position. Skill[",_Skill,"] Type[",_SkillType,"] Element[",_SkillElement,"]");
LLWEAPONEX_Grimoire_OnUsedSkillAtPosition(_Caster, _x, _y, _z, _Skill, _SkillType, _SkillElement);

IF
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement)
THEN
LLWEAPONEX_Grimoire_Internal_OnSkillEventAdded(_Caster, _Target, _Skill, _SkillType, _SkillElement);

PROC
LLWEAPONEX_Grimoire_Internal_OnSkillEventAdded((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
NOT LeaderLib_QRY_ObjectObjectTimerStarted(_Caster, _Target, "LLWEAPONEX_Timers_ResetSkillEventEntry_")
AND
GetUUID(_Target, _Str)
AND
LeaderLog_QRY_Log("COMBINE", "LLWEAPONEX_ResetSkillEvent_", _Skill, _SkillType, _SkillElement)
AND
DB_LeaderLog_Temp_CombinedString(_Event)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_Event);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoires:SkillEvent] Character used skill on target [",_Str,"]. Skill[",_Skill,"] Type[",_SkillType,"] Element[",_SkillElement,"]");
LLWEAPONEX_Grimoire_OnUsedSkillOnTarget(_Caster, _Target, _Skill, _SkillType, _SkillElement);
DB_LLWEAPONEX_Grimoire_ResetSkillEvent(_Event, _Caster, _Target, _Skill, _SkillType, _SkillElement);
LeaderLib_StartObjectObjectTimer(_Caster, _Target, 250, "LLWEAPONEX_Timers_ResetSkillEventEntry_", _Event);

PROC
LeaderLib_ObjectObjectTimerFinished((CHARACTERGUID)_Caster, _Target, _Event)
AND
DB_LLWEAPONEX_Grimoire_ResetSkillEvent(_Event, _Caster, _Target, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_ResetSkillEvent(_Event, _Caster, _Target, _Skill, _SkillType, _SkillElement);
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement);

/*
PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_Type)
AND
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _Target, _Skill, _SkillType, _SkillElement);

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Skill, (STRING)_Type)
AND
DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _tx, _ty, _tz, _Skill, _SkillType, _SkillElement)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillEvent(_Caster, _tx, _ty, _tz, _Skill, _SkillType, _SkillElement);
*/
//END_REGION

//REGION GRIMOIRE_ACTIVATE_BASE
PROC
LLWEAPONEX_Grimoire_OnUsedSkillOnTarget((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
THEN
DB_NOOP(1);

PROC
LLWEAPONEX_Grimoire_OnUsedSkillAtPosition((CHARACTERGUID)_Caster, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
THEN
DB_NOOP(1);

IF
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _Type)
AND
NOT LeaderLib_QRY_ObjectTimerStarted(_Caster, "LLWEAPONEX_Timers_GrimoireSkillCastFailsafe_")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoires:ActivateMagic] Character activated grimoire magic on target, and is preparing to fire. Skill[",_Skill,"] Magic Type[",_Type,"]");
SetStoryEvent(_Caster, "LLWEAPONEX_Events_GrimoirePreparingToFire");
LeaderLib_StartObjectTimer(_Caster, 1500, "LLWEAPONEX_Timers_GrimoireSkillCastFailsafe_", _Skill);

IF
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _Type)
AND
NOT LeaderLib_QRY_ObjectTimerStarted(_Caster, "LLWEAPONEX_Timers_GrimoireSkillCastFailsafe_")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoires:ActivateMagic] Character activated grimoire magic at position, and is preparing to fire. Skill[",_Skill,"] Magic Type[",_Type,"]");
SetStoryEvent(_Caster, "LLWEAPONEX_Events_GrimoirePreparingToFire");
LeaderLib_StartObjectTimer(_Caster, 3000, "LLWEAPONEX_Timers_GrimoireSkillCastFailsafe_", _Skill);

QRY
LLWEAPONEX_Grimoire_QRY_ActivationQueued((CHARACTERGUID)_Caster, (STRING)_Skill)
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _Type)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_ActivationQueued((CHARACTERGUID)_Caster, (STRING)_Skill)
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _Type)
THEN
DB_NOOP(1);

IF
SkillCast(_Caster, _Skill, _, _)
AND
LLWEAPONEX_Grimoire_QRY_ActivationQueued(_Caster, _Skill)
AND
GetUUID(_Caster, _UUID)
AND
LeaderLog_QRY_Log("COMBINE", "LLWEAPONEX_Timers_ActivateGrimoire_", _UUID, "_", _Skill)
AND
DB_LeaderLog_Temp_CombinedString(_TimerName)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_TimerName);
DB_LLWEAPONEX_Grimoire_Temp_OnSkillCast(_Caster, _Skill, _TimerName);
TimerLaunch(_TimerName, 1000);

IF
TimerFinished(_TimerName)
AND
DB_LLWEAPONEX_Grimoire_Temp_OnSkillCast(_Caster, _Skill, _TimerName)
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _Type)
THEN
NOT DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _Type);
LeaderLib_CancelObjectTimerByEvent(_Caster, _Skill);
LLWEAPONEX_Grimoire_OnSkillCast(_Caster, _Target, _Skill, _Type);

IF
TimerFinished(_TimerName)
AND
DB_LLWEAPONEX_Grimoire_Temp_OnSkillCast(_Caster, _Skill, _TimerName)
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _Type)
THEN
NOT DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _Type);
LeaderLib_CancelObjectTimerByEvent(_Caster, _Skill);
LLWEAPONEX_Grimoire_OnSkillCast(_Caster, _x, _y, _z, _Skill, _Type);

IF
TimerFinished(_TimerName)
AND
DB_LLWEAPONEX_Grimoire_Temp_OnSkillCast(_Caster, _Skill, _TimerName)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_OnSkillCast(_Caster, _Skill, _TimerName);

IF
StoryEvent((CHARACTERGUID)_Caster, _Skill)
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _Type)
THEN
NOT DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _Type);
LLWEAPONEX_Grimoire_OnSkillCast(_Caster, _Target, _Skill, _Type);

IF
StoryEvent((CHARACTERGUID)_Caster, _Skill)
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _Type)
THEN
NOT DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _Type);
LLWEAPONEX_Grimoire_OnSkillCast(_Caster, _x, _y, _z, _Skill, _Type);

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_Type)
AND
NOT LeaderLib_QRY_ObjectTimerStarted(_Caster, "LLWEAPONEX_Timers_Grimoire_ResetOpenFlag_")
THEN
LeaderLib_StartObjectTimer(_Caster, 1000, "LLWEAPONEX_Timers_Grimoire_ResetOpenFlag_", "LLWEAPONEX_Events_GrimoireFired");

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Skill, (STRING)_Type)
AND
NOT LeaderLib_QRY_ObjectTimerStarted(_Caster, "LLWEAPONEX_Timers_Grimoire_ResetOpenFlag_")
THEN
LeaderLib_StartObjectTimer(_Caster, 1000, "LLWEAPONEX_Timers_Grimoire_ResetOpenFlag", "LLWEAPONEX_Events_GrimoireFired");

IF
CharacterStatusApplied(_Caster, "UNSHEATHED", _)
AND
ObjectGetFlag(_Caster, "LLWEAPONEX_GrimoireOpened", 1)
THEN
LeaderLib_CancelObjectTimerByEvent(_Caster, "LLWEAPONEX_Events_GrimoireFired");
//END_REGION

//REGION GRIMOIRE_ACTIVATE_ELEMENTS

QRY
LLWEAPONEX_Grimoire_Internal_QRY_SkillPropertyMatch((STRING)_CheckSkillType, (STRING)_SkillType, (STRING)_CheckSkillElement, (STRING)_SkillElement)
AND
_CheckSkillElement == ""
AND
_CheckSkillType == _SkillType
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_Internal_QRY_SkillPropertyMatch((STRING)_CheckSkillType, (STRING)_SkillType, (STRING)_CheckSkillElement, (STRING)_SkillElement)
AND
_CheckSkillType == ""
AND
_CheckSkillElement == _SkillElement
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_Internal_QRY_SkillPropertyMatch((STRING)_CheckSkillType, (STRING)_SkillType, (STRING)_CheckSkillElement, (STRING)_SkillElement)
AND
_CheckSkillType != ""
AND
_CheckSkillElement != ""
AND
_CheckSkillType == _SkillType
AND
_CheckSkillElement == _SkillElement
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_SkillMagicMatch((CHARACTERGUID)_Caster, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, _Type)
AND
DB_LLWEAPONEX_Grimoire_MagicWhitelist(_Type, _Status, _CheckSkillType, _CheckSkillElement)
AND
HasActiveStatus(_Caster, _Status, 1)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Grimoire_QRY_SkillMagicMatch((CHARACTERGUID)_Caster, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, _)
AND
DB_LLWEAPONEX_Grimoire_MagicWhitelist(_Type, _Status, _CheckSkillType, _CheckSkillElement)
AND
HasActiveStatus(_Caster, _Status, 1)
AND
LeaderLog_QRY_Log("DEBUG", "[LLWEAPONEX:Grimoire] Checking for skill match: ",_CheckSkillType," | ",_SkillType," | ",_CheckSkillElement," | ",_SkillElement)
AND
LLWEAPONEX_Grimoire_Internal_QRY_SkillPropertyMatch(_CheckSkillType, _SkillType, _CheckSkillElement, _SkillElement)
THEN
DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, _Type);

PROC
LLWEAPONEX_Grimoire_OnUsedSkillOnTarget((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
LLWEAPONEX_Grimoire_QRY_SkillMagicMatch(_Caster, _Skill, _SkillType, _SkillElement)
AND
DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, _Type)
THEN
//NOT DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, _Type);
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, _Type);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:OnUsedSkillOnTarget] Matched Skill [",_Skill,"] to Magic Type [",_Type,"]");

PROC
LLWEAPONEX_Grimoire_OnUsedSkillAtPosition((CHARACTERGUID)_Caster, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Skill, (STRING)_SkillType, (STRING)_SkillElement)
AND
LLWEAPONEX_Grimoire_QRY_SkillMagicMatch(_Caster, _Skill, _SkillType, _SkillElement)
AND
DB_LLWEAPONEX_Grimoire_Temp_MagicMatch(_Skill, _Type)
THEN
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _x, _y, _z, _Skill, _Type);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:OnUsedSkillOnTarget] Matched Skill [",_Skill,"] to Magic Type [",_Type,"]");

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, "Wind")
AND
ObjectIsCharacter((CHARACTERGUID)_Target, 1)
AND
CharacterIsEnemy(_Caster, _Target, 1)
THEN
CharacterCharacterSetEvent(_Caster, _Target, "LLWEAPONEX_Grimoire_ShootWindMagic");

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, "Wind")
AND
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Target, _Skill, "Wind")
AND
ObjectIsItem((ITEMGUID)_Target, 1)
THEN
CharacterItemSetEvent(_Caster, _Target, "LLWEAPONEX_Grimoire_ShootWindMagic");

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Skill, "Wind")
THEN
SetVarFloat3(_Caster, "LLWEAPOENX_GrimoireTargetPosition", _x, _y, _z);
SetStoryEvent(_Caster, "LLWEAPONEX_Grimoire_ShootWindMagic");

/*
PROC
LLWEAPONEX_Grimoire_OnUsedSkillOnTarget((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, "teleportation", (STRING)_SkillElement)
AND
ObjectIsItem(_Target, 1)
AND
HasActiveStatus(_Caster, "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", 1)
THEN
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Caster, _Skill, "Swap");
*/

PROC
LLWEAPONEX_Grimoire_OnUsedSkillOnTarget((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, "jump", (STRING)_SkillElement)
AND
HasActiveStatus(_Caster, "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", 1)
THEN
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Caster, _Skill, "Swap");

PROC
LLWEAPONEX_Grimoire_OnUsedSkillAtPosition((CHARACTERGUID)_Caster, (REAL)_x, (REAL)_y, (REAL)_z, (STRING)_Skill, "jump", (STRING)_SkillElement)
AND
HasActiveStatus(_Caster, "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", 1)
THEN
DB_LLWEAPONEX_Grimoire_ActivateMagic(_Caster, _Caster, _Skill, "Swap");

/*
PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, "Swap")
AND
ObjectIsCharacter((CHARACTERGUID)_Target, 1)
AND
CharacterIsEnemy(_Caster, _Target, 1)
THEN
ApplyStatus(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_DAMAGE", 0.0, 0, _Caster);

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, "Swap")
AND
ObjectIsItem((ITEMGUID)_Target, 1)
AND
ItemIsStoryItem(_Target, 0)
THEN
ApplyStatus(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_DAMAGE", 0.0, 0, _Caster);

PROC
LLWEAPONEX_Grimoire_OnSkillCast((CHARACTERGUID)_Caster, (GUIDSTRING)_Target, (STRING)_Skill, "Swap")
AND
ObjectIsCharacter((CHARACTERGUID)_Target, 1)
AND
CharacterIsEnemy(_Caster, _Target, 0)
THEN
ApplyStatus(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_SURGE", 6.0, 0, _Caster);
*/

IF
CharacterStatusAttempt(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_DAMAGE", (CHARACTERGUID)_Caster)
THEN
PlayBeamEffect(_Caster, _Target, "RS3_FX_GP_Beams_ControlBeam_01", "Dummy_FrontFX_L", "Dummy_BodyFX");

IF
ItemStatusAttempt(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_DAMAGE", (CHARACTERGUID)_Caster)
THEN
PlayBeamEffect(_Caster, _Target, "RS3_FX_GP_Beams_ControlBeam_01", "Dummy_FrontFX_L", "Dummy_BodyFX");

IF
CharacterStatusAttempt(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_SURGE", (CHARACTERGUID)_Caster)
THEN
PlayBeamEffect(_Caster, _Target, "RS3_FX_GP_Beams_VoidBeam_01", "Dummy_FrontFX_L", "Dummy_BodyFX");

//Scramble Grimoire Positioning
IF
CharacterUsedSkill(_Caster, "Target_LLWEAPONEX_Scramble", _, _)
THEN
SetStoryEvent(_Caster, "LLWEAPONEX_Events_GrimoirePreparingToFire");

IF
SkillCast(_Caster, "Target_LLWEAPONEX_Scramble", _, _)
AND
NOT LeaderLib_QRY_ObjectTimerStarted(_Caster, "LLWEAPONEX_Timers_Grimoire_ResetOpenFlag_")
THEN
LeaderLib_StartObjectTimer(_Caster, 1000, "LLWEAPONEX_Timers_Grimoire_ResetOpenFlag_", "LLWEAPONEX_Events_GrimoireFired");

//Delay so exploding projectiles won't miss from teleporting positions
IF
CharacterStatusApplied(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_CHECK", (CHARACTERGUID)_Caster)
AND
HasActiveStatus(_Caster, "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", 1)
THEN
LeaderLib_StartCharacterCharacterTimer(_Caster, _Target, 500, "LLWEAPONEX_Timers_Grimoire_ApplySwapMagic_", "LLWEAPONEX_Grimoire_ApplySwapMagic");

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_GRIMOIRE_SWAP_CHECK_INSTANT", (CHARACTERGUID)_Caster)
AND
HasActiveStatus(_Caster, "LLWEAPONEX_GRIMOIRE_SWAP_ACTIVE", 1)
THEN
CharacterCharacterSetEvent(_Caster, _Target, "LLWEAPONEX_Grimoire_ApplySwapMagic");
//END_REGION

//REGION MAGIC_AUTO_LEVELING
//Auto-Leveling
IF
ItemEquipped(_Magic, _Character)
AND
IsTagged(_Magic, "LLWEAPONEX_Grimoire_Magic", 1)
AND
NOT DB_LLWEAPONEX_Grimoire_MagicLink(_, _Magic)
AND
CharacterGetEquippedItem(_Character, "Shield", (ITEMGUID)_Grimoire)
THEN
SetStoryEvent(_Grimoire, "LeaderLib_Commands_GetItemLevel");
DB_LLWEAPONEX_Grimoire_MagicLink(_Grimoire, _Magic);

IF
StoryEvent((ITEMGUID)_Grimoire, "LeaderLib_Events_ItemLevelStored")
AND
IsTagged(_Grimoire, "LLWEAPONEX_Grimoire", 1)
AND
GetVarInteger(_Grimoire, "LeaderLib_ItemLevel", _Level)
AND
ItemGetOwner(_Grimoire, _Owner)
AND
CharacterGetEquippedItem(_Owner, "Weapon", (ITEMGUID)_Magic)
THEN
ItemLevelUpTo(_Magic, _Level);
SetVarInteger(_Magic, "LeaderLib_ItemLevel", _Level);

IF
ItemUnEquipped(_Grimoire, _Character)
AND
DB_LLWEAPONEX_Grimoire_MagicLink(_Grimoire, _Magic)
THEN
NOT DB_LLWEAPONEX_Grimoire_MagicLink(_Grimoire, _Magic);
ItemRemove(_Magic);

IF
ItemDestroyed(_Magic)
AND
DB_LLWEAPONEX_Grimoire_MagicLink(_Grimoire, _Magic)
THEN
NOT DB_LLWEAPONEX_Grimoire_MagicLink(_Grimoire, _Magic);

/*
IF
CharacterStartAttackObject(_, _, _Character)
AND
CharacterGetEquippedItem(_Owner, "Weapon", (ITEMGUID)_Magic)
THEN
PlayEffect(_Character, "RS3_FX_Skills_Air_Wind_Cast_Hand_Horizontal_01", "Dummy_R_HandFX");
*/
//END_REGION

//REGION LAST_SKILL
IF
CharacterUsedSkill(_Character, _Skill, _, _)
THEN
SetVarString(_Character, "LLWEAPONEX_LastUsedSkill", _Skill);

IF
ItemUnEquipped(_Grimoire, _Character)
AND
GetTemplate(_Grimoire, "WPN_Shield_LLWEAPONEX_Grimoire_Mimicry_Unique_c9fcc947-4423-40b9-9629-ae2d1e156dfc")
AND
DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill)
THEN
NOT DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill);
CharacterRemoveSkill(_Character, _Skill);

PROC
LLWEAPONEX_Grimoire_RemoveCopiedSkill((CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill)
THEN
NOT DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill);
CharacterRemoveSkill(_Character, _Skill);

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_COPYLASTSKILL", (CHARACTERGUID)_Character)
AND
GetVarString(_Target, "LLWEAPONEX_LastUsedSkill", _Skill)
AND
CharacterHasSkill(_Character, _Skill, 0)
THEN
LLWEAPONEX_Grimoire_RemoveCopiedSkill(_Character);
CharacterAddSkill(_Character, _Skill);
DB_LLWEAPONEX_Grimoire_SkillJustCopied(_Character, _Skill);

//In case a copied skill is learned
IF
SkillAdded(_Character, _Skill, 1)
AND
NOT DB_LLWEAPONEX_Grimoire_SkillJustCopied(_Character, _Skill)
AND
DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill)
THEN
NOT DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill);

IF
SkillAdded(_Character, _Skill, _)
AND
DB_LLWEAPONEX_Grimoire_SkillJustCopied(_Character, _Skill)
THEN
DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill);
NOT DB_LLWEAPONEX_Grimoire_SkillJustCopied(_Character, _Skill);

//Invalid skill safety check
IF
DB_LLWEAPONEX_Grimoire_SkillJustCopied(_Character, _Skill)
AND
CharacterHasSkill(_Character, _Skill, 0)
THEN
NOT DB_LLWEAPONEX_Grimoire_SkillJustCopied(_Character, _Skill);

IF
CharacterUsedSkill(_Character, _Skill, _, _)
AND
DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill)
THEN
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_RemoveCopiedSkill", 2000);

IF
SkillCast(_Character, _Skill, _, _)
AND
DB_LLWEAPONEX_Grimoire_CopiedSkill(_Character, _Skill)
AND
DB_ObjectTimer(_Character, _ObjectTimerName, "LLWEAPONEX_Timers_RemoveCopiedSkill")
THEN
ProcObjectTimerCancel(_Character, "LLWEAPONEX_Timers_RemoveCopiedSkill");
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_RemoveCopiedSkill", 2000);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_RemoveCopiedSkill")
THEN
LLWEAPONEX_Grimoire_RemoveCopiedSkill(_Character);

IF
CharacterUsedSkillOnZoneWithTarget(_Character, _Target, _Skill, _, _)
AND
HasActiveStatus(_Character, "LLWEAPONEX_GRIMOIRE_MIMIC_READY", 1)
AND
IsSourceSkill(_Skill, 0)
AND
NOT DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Skill, _)
THEN
DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Skill, _Target);
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_CastGrimoireMimicSkill", 1500);

IF
CharacterUsedSkillOnTarget(_Character, _Target, _Skill, _, _)
AND
HasActiveStatus(_Character, "LLWEAPONEX_GRIMOIRE_MIMIC_READY", 1)
AND
IsSourceSkill(_Skill, 0)
AND
NOT DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Skill, _)
THEN
DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Skill, _Target);
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_CastGrimoireMimicSkill", 1500);

IF
ObjectTurnEnded(_Character)
AND
HasActiveStatus(_Character, "LLWEAPONEX_GRIMOIRE_MIMIC_READY", 1)
THEN
RemoveStatus(_Character, "LLWEAPONEX_GRIMOIRE_MIMIC_READY");

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Character, "LLWEAPONEX_Timers_CastGrimoireMimicSkill")
AND
DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Skill, _Target)
THEN
NOT DB_LLWEAPONEX_Grimoire_MimicSkill(_Character, _Skill, _Target);
LeaderLib_Skills_UseSkillOnTarget(_Character, _Target, _Skill, 1, 0);
RemoveStatus(_Character, "LLWEAPONEX_GRIMOIRE_MIMIC_READY");

//END_REGION

//REGION CUSTOM_SWAP_PLACES
IF
SkillCast(_Character, "Target_LLWEAPONEX_Scramble", _, _)
THEN
ProcObjectTimer(_Character, "LLWEAPONEX_Timers_ResolveScrambledPositions", 250);

IF
CharacterStatusAttempt(_Object, "LLWEAPONEX_GRIMOIRE_SCRAMBLE_CHECK", _Cause)
AND
GetPosition(_Object, _x, _y, _z)
THEN
DB_LLWEAPONEX_Grimoire_Temp_SwapCharactersList(_Cause, _Object);
DB_LLWEAPONEX_Grimoire_Temp_SwapCharacters(_Cause, _Object, _x, _y, _z);
PlayEffectAtPosition("RS3_FX_Skills_Void_Netherswap_Reappear_01", _x, _y, _z);
PlayEffect(_Object, "LLWEAPONEX_FX_Skills_Cast_Scramble_Overlay_01");

IF
ItemStatusChange(_Object, "LLWEAPONEX_GRIMOIRE_SCRAMBLE_CHECK", _Cause)
AND
ObjectGetFlag(_Object, "LLWEAPONEX_IsMovable", 1)
AND
GetPosition(_Object, _x, _y, _z)
THEN
DB_LLWEAPONEX_Grimoire_Temp_SwapItems(_Cause, _Object, _x, _y, _z);
PlayEffectAtPosition("RS3_FX_Skills_Void_Netherswap_Reappear_01", _x, _y, _z);
PlayEffect(_Object, "LLWEAPONEX_FX_Skills_Cast_Scramble_Overlay_01");

PROC
ProcObjectTimerFinished(_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapCharactersList(_Cause, _Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapCharacters(_Cause, _OtherCharacter, _cx, _cy, _cz)
AND
_Character != _OtherCharacter
AND
GetDistanceToPosition(_Character, _cx, _cy, _cz, _Dist)
AND
_Dist < 1.0
THEN
LLWEAPONEX_Grimoire_Internal_RemoveFromPreviousScrambleSpot(_Cause, _Character);
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapCharacters(_Cause, _OtherCharacter, _cx, _cy, _cz);
DB_LLWEAPONEX_Grimoire_Temp_SwapCharacters(_Cause, _Character, _cx, _cy, _cz);

PROC
ProcObjectTimerFinished(_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapCharactersList(_Cause, _Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapItems(_Cause, _Item, _cx, _cy, _cz)
AND
GetDistanceToPosition(_Character, _cx, _cy, _cz, _Dist)
AND
_Dist < 1.0
THEN
LLWEAPONEX_Grimoire_Internal_RemoveFromPreviousScrambleSpot(_Cause, _Character);

PROC
LLWEAPONEX_Grimoire_Internal_RemoveFromPreviousScrambleSpot((GUIDSTRING)_Cause, (CHARACTERGUID)_Character)
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapCharacters(_Cause, _Character, _tx, _ty, _tz)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapCharacters(_Cause, _Character, _tx, _ty, _tz);
DB_LLWEAPONEX_Grimoire_Temp_SwapCharacters(_Cause, NULL_00000000-0000-0000-0000-000000000000, _tx, _ty, _tz);

PROC
ProcObjectTimerFinished(_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapItems(_Cause, _Item, _ix, _iy, _iz)
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapCharacters(_Cause, NULL_00000000-0000-0000-0000-000000000000, _x, _y, _z)
AND
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapResolved(_Cause, _Item)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Grimoire:Scramble] Teleporting item to unoccupied position.");
TeleportToPosition(_Item, _x, _y, _z, "LLWEAPONEX_Scramble_Reappear", 0);
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapItems(_Cause, _Item, _ix, _iy, _iz);
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapCharacters(_Cause, NULL_00000000-0000-0000-0000-000000000000, _x, _y, _z);
DB_LLWEAPONEX_Grimoire_Temp_SwapResolved(_Cause, _Item);

PROC
ProcObjectTimerFinished(_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapResolved(_Cause, _Item)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapResolved(_Cause, _Item);

PROC
ProcObjectTimerFinished(_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapCharactersList(_Cause, _Object)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapCharactersList(_Cause, _Object);

PROC
ProcObjectTimerFinished(_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapCharacters(_Cause, _Object, _x, _y, _z)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapCharacters(_Cause, _Object, _x, _y, _z);

PROC
ProcObjectTimerFinished(_Cause, "LLWEAPONEX_Timers_ResolveScrambledPositions")
AND
DB_LLWEAPONEX_Grimoire_Temp_SwapItems(_Cause, _Item, _x, _y, _z)
THEN
NOT DB_LLWEAPONEX_Grimoire_Temp_SwapItems(_Cause, _Item, _x, _y, _z);
/*RealSubtract(_tx, _x, _xVar)
AND
LeaderLib_Math_QRY_AbsoluteValue(_xVar)
AND
DB_LeaderLib_Math_AbsoluteValue(_xVar, _xDist)
AND
RealSubtract(_tz, _z, _zVar)
AND
LeaderLib_Math_QRY_AbsoluteValue(_zVar)
AND
DB_LeaderLib_Math_AbsoluteValue(_zVar, _zDist)
AND
RealSubtract(_xDist, _zDist, _DistVar)
AND
LeaderLib_Math_QRY_AbsoluteValue(_DistVar)
AND
DB_LeaderLib_Math_AbsoluteValue(_DistVar, _TotalDist)

PROC
ProcObjectTimerFinished((ITEMGUID)_Item, "LLWEAPONEX_Timers_CheckSwapPosition")
THEN
LeaderLib_Math_ClearAbsoluteValues();
*/

IF
StoryEvent(_Object, "LLWEAPONEX_Scramble_Reappear")
THEN
//PlayEffect(_Object, "RS3_FX_Skills_Void_Netherswap_Reappear_01");
DB_NOOP(1);
//END_REGION

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_WeaponExpansion"
