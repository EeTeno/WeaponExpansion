Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_GameHour(300000); //5 minutes
/*
SysClear("DB_GameHour", 1);
DB_GameHour(120000);

SysClear("DB_Time", 3);
DB_Time(1,11,11);

SysClear("DB_HalfHour", 3);
DB_HalfHour(22,22);

TimerCancel("TimeOfDay");
StartTimeOfDayTimerLoop();

TriggerResetAtmosphere(TRIGGERGUID_S_LLWEAPONEX_Debug_DayNightAtmoTrigger_85e62279-a4fd-4573-a287-062f46c96fe1);
*/
//TRIGGERGUID_LLWEAPONEX_Debug_DayNightAtmoTrigger_85e62279-a4fd-4573-a287-062f46c96fe1
//ATMOSPHERERESOURCEGUID_LLWEAPONEX_ATM_Desert_01_CameraEdit_57690f2e-466a-4d38-a071-74b109cedef4
//ATMOSPHERERESOURCEGUID_LLWEAPONEX_ATM_PBR_DOS2_Night_Blue_CameraEdit_f2e42e22-7126-47cc-9ded-5770cc83507c

DB_LLWEAPONEX_Debug_TimeAtmospheres("Midnight", "9d066ac1-715d-4a9c-810c-f7d380a1d4bd", 0, 3);
DB_LLWEAPONEX_Debug_TimeAtmospheres("Morning", "54db744e-8227-451a-9540-94877f0598f1", 4, 10);
DB_LLWEAPONEX_Debug_TimeAtmospheres("Afternoon", "57690f2e-466a-4d38-a071-74b109cedef4", 11, 16);
DB_LLWEAPONEX_Debug_TimeAtmospheres("Evening", "36eae440-f603-4bdd-9343-2d6ba7d87eb1", 17, 19);
DB_LLWEAPONEX_Debug_TimeAtmospheres("Night", "293f6672-6fa0-4895-a0e7-c1a963c6b650", 20, 24);
//DB_LLWEAPONEX_Debug_TimeAtmospheres("Midnight", "9d066ac1-715d-4a9c-810c-f7d380a1d4bd", 0, 4);
//DB_LLWEAPONEX_Debug_TimeAtmospheres("Morning", "54db744e-8227-451a-9540-94877f0598f1", 5, 11);
//DB_LLWEAPONEX_Debug_TimeAtmospheres("Afternoon", "57690f2e-466a-4d38-a071-74b109cedef4", 12, 17);
//DB_LLWEAPONEX_Debug_TimeAtmospheres("Evening", "36eae440-f603-4bdd-9343-2d6ba7d87eb1", 18, 20);
//DB_LLWEAPONEX_Debug_TimeAtmospheres("Night", "293f6672-6fa0-4895-a0e7-c1a963c6b650", 21, 23);
//DB_LLWEAPONEX_Debug_Atmospheres("Storm", "09edc0f3-c27e-414a-a053-a4c1d2d1271a");
//DB_LLWEAPONEX_Debug_Atmospheres("BloodForest", "4b41cfe5-35bc-4473-b50c-59301e38ef9f");
KBSECTION
/*
IF
GameStarted(_,_)
AND
DB_Time(_,_Hour,_)
THEN
LLWEAPONEX_Debug_SetTimeOfDay(_Hour);

PROC
NewHour((INTEGER)_Hour)
AND
IntegertoString(_Hour, _HourStr)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Debug:NewHour] The hour is now [",_HourStr,"].");

PROC
NewHour((INTEGER)_Hour)
THEN
LLWEAPONEX_Debug_SetTimeOfDay(_Hour);

PROC
LLWEAPONEX_Debug_SetTimeOfDay((INTEGER)_Hour)
AND
DB_LLWEAPONEX_Debug_TimeAtmospheres(_TimeOfDay, _Atmosphere, _StartHour, _EndHour)
AND
NOT DB_LLWEAPONEX_Debug_TimeChanged(_)
AND
NOT DB_LLWEAPONEX_Debug_TimeOfDay(_TimeOfDay)
AND
_Hour >= _StartHour
AND
_Hour <= _EndHour
THEN
DB_LLWEAPONEX_Debug_TimeChanged(1);
//LeaderLib_SendEvent("LLWEAPONEX_Debug_SetAtmosphereToNight");
TriggerSetAtmosphere(TRIGGERGUID_S_LLWEAPONEX_Debug_DayNightAtmoTrigger_85e62279-a4fd-4573-a287-062f46c96fe1, _Atmosphere);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Debug:NewHour] Transitioning atmosphere to [",_TimeOfDay,"].");
SysClear("DB_LLWEAPONEX_Debug_TimeOfDay", 1);
DB_LLWEAPONEX_Debug_TimeOfDay(_TimeOfDay);

PROC
LLWEAPONEX_Debug_SetTimeOfDay((INTEGER)_Hour)
AND
DB_LLWEAPONEX_Debug_TimeChanged(_Val)
THEN
NOT DB_LLWEAPONEX_Debug_TimeChanged(_Val);
*/

IF
TextEventSet("llweap_runepreview")
AND
CharacterGetHostCharacter(_Host)
THEN
CharacterTransformAppearanceToWithEquipmentSet(_Host, _Host, "Class_LLWEAPONEX_RunicKnight_Debug", 0);

IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
THEN
CharacterSetCustomName(_Host, "Morghul");
CharacterAddGold(_Host, 9999);

IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
AND
GetPosition(_Host, _x, _y, _z)
AND
CharacterGetLevel(_Host, _Level)
AND
_Level < 5
THEN
//CharacterLevelUpTo(_Host, 5);
CharacterAddAttributePoint(_Host, 10);
CharacterAddCivilAbilityPoint(_Host, 10);
CharacterAddAbilityPoint(_Host, 10);
CharacterAddTalentPoint(_Host, 2);

/*
IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
AND
NOT CharacterGetEquippedItem(_Host, "Breast", _)
THEN
//CharacterApplyPreset(_Host, "Rogue_Act2");
CharacterTransformAppearanceToWithEquipmentSet(_Host, _Host, "Class_LLWEAPONEX_RunicKnight_Debug_Humans", 0);
*/

/*
IF
TextEventSet("llweap_tptrigger")
AND
CharacterGetHostCharacter(_Host)
THEN
TeleportTo(TRIGGERGUID_S_LLWEAPONEX_Debug_DayNightAtmoTrigger_85e62279-a4fd-4573-a287-062f46c96fe1, _Host);
*/

IF
CharacterUsedSkill(_Character, _, _, _)
AND
CharacterGetHostCharacter(_Character)
THEN
CharacterResetCooldowns(_Character);

/*
IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
AND
NOT CharacterGetEquippedItem(_Host, "Breast", _)
AND
CharacterGetEquippedWeapon(_Host, _Weapon)
AND
GetTemplate(_Weapon, _Template)
AND
StringContains(_Template, "Quarterstaff", 1)
THEN
//CharacterApplyPreset(_Host, "Rogue_Act2");
CharacterTransformAppearanceToWithEquipmentSet(_Host, _Host, "Class_Rogue_Act2", 0);

IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
AND
NOT CharacterGetEquippedItem(_Host, "Breast", _)
AND
CharacterGetEquippedWeapon(_Host, _Weapon)
AND
GetTemplate(_Weapon, _Template)
AND
StringContains(_Template, "Runeblade", 1)
THEN
//CharacterApplyPreset(_Host, "Battlemage_Act2");
CharacterTransformAppearanceToWithEquipmentSet(_Host, _Host, "Class_Battlemage_Act2", 0);

IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
AND
NOT CharacterGetEquippedItem(_Host, "Breast", _)
AND
CharacterGetEquippedWeapon(_Host, _Weapon)
AND
GetTemplate(_Weapon, _Template)
AND
StringContains(_Template, "Rod", 1)
THEN
//CharacterApplyPreset(_Host, "Wizard_Act2");
CharacterTransformAppearanceToWithEquipmentSet(_Host, _Host, "Class_Wizard_Act2", 0);

IF
StoryEvent(_, "LeaderLib_Initialized")
AND
CharacterGetHostCharacter(_Host)
AND
NOT CharacterGetEquippedWeapon(_Host, _)
THEN
//CharacterApplyPreset(_Host, "Inquisitor_Act2");
CharacterTransformAppearanceToWithEquipmentSet(_Host, _Host, "Class_Inquisitor_Act2", 0);
*/

/*
IF
ItemTemplateEquipped("WPN_LLWEAPONEX_Shield_DualShields_A_3150a9b9-49a7-4345-aacb-d1670b6fa7a6", _Player)
THEN
PROC_LoopEffect("LLWEAPONEX_FX_EQ_Lizards_CombatShield_C", _Player, "LLWEAPONEX.CombatShield", "__ANY__", "LowerArm_R_Twist_Bone");

IF
ItemTemplateUnEquipped("WPN_LLWEAPONEX_Shield_DualShields_A_3150a9b9-49a7-4345-aacb-d1670b6fa7a6", _Player)
THEN
PROC_StopLoopEffect(_Player, "LLWEAPONEX.CombatShield");
*/

IF
StoryEvent(_, "LeaderLib_Initialized")
THEN
ApplyStatus(CHARACTERGUID_Lizards_Hero_Male_000_e026f14d-6290-44c2-989d-984d03a42274, "LLWEAPONEX_DEBUG_IMMORTAL", -1.0, 1);
ApplyStatus(CHARACTERGUID_Lizards_Hero_Male_001_270b72cd-90e5-480e-9677-69040d566818, "LLWEAPONEX_DEBUG_IMMORTAL", -1.0, 1);
ApplyStatus(CHARACTERGUID_Lizards_Hero_Male_Undead_000_84f397e8-fdea-427a-a0ba-2e367a7eae45, "LLWEAPONEX_DEBUG_IMMORTAL", -1.0, 1);

IF
TextEventSet("llweap_preset")
AND
GetTextEventParamString(1, _Preset)
AND
CharacterGetHostCharacter(_Host)
THEN
CharacterApplyPreset(_Host, _Preset);
CharacterTransform(_Host, "Humans_Hero_Male_Undead_5ab5d036-4606-4265-962e-c2e4d2d2408b", 0, 1, 0, 0, 0, 1, 0);
CharacterLevelUpTo(_Host, 5);
CharacterAddAttribute(_Host, "Intelligence", 5);
CharacterAddAttribute(_Host, "Strength", 5);
CharacterAddAttribute(_Host, "Finesse", 5);

IF
TextEventSet("llweap_die")
AND
CharacterGetHostCharacter(_Host)
THEN
CharacterDieImmediate(_Host, 0, "", _Host);

//REGION STATUSES
/*
IF
CharacterStatusAttempt(_Character, _Status, _Causee)
AND
String(_Causee, _Cause)
AND
CharacterGetDisplayName(_Character, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[WeaponExpansion:Debug:CharacterStatusAttempt] Status [",_Status,"] attempt on [",_Name,"] via [",_Cause,"].");

IF
CharacterStatusApplied(_Character, _Status, _Causee)
AND
String(_Causee, _Cause)
AND
CharacterGetDisplayName(_Character, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[WeaponExpansion:Debug:CharacterStatusApplied] Status [",_Status,"] applied on [",_Name,"] via [",_Cause,"].");

IF
CharacterStatusRemoved(_Character, _Status, _Causee)
AND
String(_Causee, _Cause)
AND
CharacterGetDisplayName(_Character, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[WeaponExpansion:Debug:CharacterStatusRemoved] Status [",_Status,"] removed from [",_Name,"] via [",_Cause,"].");
*/

IF
CharacterStatusAttempt(_Character, _Status, (CHARACTERGUID)_Causee)
//AND
//CharacterGetHostCharacter(_Causee)
AND
CharacterGetDisplayName(_Causee, _, _Cause)
AND
CharacterGetDisplayName(_Character, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[WeaponExpansion:Debug:CharacterStatusAttempt] Status [",_Status,"] attempt on [",_Name,"] via [",_Cause,"].");

IF
CharacterStatusApplied(_Character, _Status, (CHARACTERGUID)_Causee)
//AND
//haracterGetHostCharacter(_Causee)
AND
CharacterGetDisplayName(_Causee, _, _Cause)
AND
CharacterGetDisplayName(_Character, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[WeaponExpansion:Debug:CharacterStatusApplied] Status [",_Status,"] applied on [",_Name,"] via [",_Cause,"].");

IF
CharacterStatusRemoved(_Character, _Status, _)
AND
CharacterGetDisplayName(_Character, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[WeaponExpansion:Debug:CharacterStatusRemoved] Status [",_Status,"] removed from [",_Name,"].");

IF
ItemStatusAttempt(_Item, _Status, (CHARACTERGUID)_Causee)
//AND
//CharacterGetHostCharacter(_Causee)
AND
CharacterGetDisplayName(_Causee, _, _Cause)
AND
GetTemplate(_Item, _Name)
THEN
LeaderLog_Log("DEBUG", "[WeaponExpansion:Debug:ItemStatusAttempt] Status [",_Status,"] attempt on [",_Name,"] via [",_Cause,"].");

IF
ItemStatusChange(_Item, _Status, (CHARACTERGUID)_Causee)
//AND
//CharacterGetHostCharacter(_Causee)
AND
CharacterGetDisplayName(_Causee, _, _Cause)
AND
GetTemplate(_Item, _Name)
THEN
LeaderLog_Log("DEBUG", "[WeaponExpansion:Debug:ItemStatusChange] Status [",_Status,"] applied on [",_Name,"] via [",_Cause,"].");

IF
ItemStatusRemoved(_Item, _Status, _)
AND
GetTemplate(_Item, _Name)
THEN
LeaderLog_Log("DEBUG", "[WeaponExpansion:Debug:ItemStatusRemoved] Status [",_Status,"] removed from [",_Name,"].");

IF
CharacterTeleported(_Character, _, _x, _y, _z, _tx, _ty, _tz, _Skill)
AND
CharacterGetDisplayName(_Character, _, _Name)
THEN
LeaderLog_Log("DEBUG", "[WeaponExpansion:Debug:CharacterTeleported] Character [",_Name,"] teleported via [",_Skill,"].");
//END_REGION

//REGION SKILL_DEBUG
/*
IF
CharacterUsedSkill(_Caster, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
LeaderLog_QRY_Log("COMBINE","[",_Name,"] cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")].")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Debug:CharacterUsedSkill] ", _LogDetails);

IF
CharacterUsedSkillOnTarget(_Caster, _Target, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
GetUUID(_Target, _TargetID)
AND
LeaderLog_QRY_Log("COMBINE","[",_Name,"] cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")] on target [", _TargetID, "].")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Debug:CharacterUsedSkillOnTarget] ", _LogDetails);

IF
CharacterUsedSkillAtPosition(_Caster, _XReal, _YReal, _ZReal, _Skill, _SkillType, _SkillElement)
AND
Integer(_XReal, _TargetX)
AND
Integer(_YReal, _TargetY)
AND
Integer(_ZReal, _TargetZ)
AND
GetPosition(_Caster, _XCastReal, _YCastReal, _ZCastReal)
AND
Integer(_XCastReal, _CastX)
AND
Integer(_YCastReal, _CastY)
AND
Integer(_ZCastReal, _CastZ)
AND
IntegertoString(_TargetX, _TargetXStr)
AND
IntegertoString(_TargetY, _TargetYStr)
AND
IntegertoString(_TargetZ, _TargetZStr)
AND
IntegertoString(_CastX, _CastXStr)
AND
IntegertoString(_CastY, _CastYStr)
AND
IntegertoString(_CastZ, _CastZStr)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
LeaderLog_QRY_Log("COMBINE","[",_Name,"] cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")] from position [")
AND
DB_LeaderLog_Temp_CombinedString(_SkillPrefix)
AND
LeaderLog_QRY_ClearCombinedString(_SkillPrefix)
AND
LeaderLog_QRY_Log("COMBINE",_CastXStr,",",_CastYStr,",",_CastZStr,"] to target position [")
AND
DB_LeaderLog_Temp_CombinedString(_CasterPosition)
AND
LeaderLog_QRY_ClearCombinedString(_CasterPosition)
AND
LeaderLog_QRY_Log("COMBINE",_TargetXStr,",",_TargetYStr,",",_TargetZStr,"].")
AND
DB_LeaderLog_Temp_CombinedString(_TargetPosition)
AND
LeaderLog_QRY_ClearCombinedString(_TargetPosition)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Debug:CharacterUsedSkillAtPosition] ", _SkillPrefix, _CasterPosition, _TargetPosition);

IF
CharacterUsedSkillOnZoneWithTarget(_Caster, (CHARACTERGUID)_Target, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
CharacterGetDisplayName(_Target, _, _TargetName)
AND
GetUUID(_Caster, _CasterID)
AND
GetUUID(_Target, _TargetID)
AND
LeaderLog_QRY_Log("COMBINE"," cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")] on target [",_TargetName,"](",_TargetID,").")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Debug:CharacterUsedSkillOnZoneWithTarget] [",_Name,"](",_CasterID,")",_LogDetails);

IF
CharacterUsedSkillOnZoneWithTarget(_Caster, (ITEMGUID)_Target, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
GetUUID(_Caster, _CasterID)
AND
GetUUID(_Target, _TargetID)
AND
LeaderLog_QRY_Log("COMBINE"," cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")] on target [Item](",_TargetID,").")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Debug:CharacterUsedSkillOnZoneWithTarget] [",_Name,"](",_CasterID,")",_LogDetails);

IF
SkillCast(_Caster, _Skill, _SkillType, _SkillElement)
AND
CharacterGetDisplayName(_Caster, _, _Name)
AND
LeaderLog_QRY_Log("COMBINE","[",_Name,"] cast skill [",_Skill,"(",_SkillType,",",_SkillElement,")]")
AND
DB_LeaderLog_Temp_CombinedString(_LogDetails)
THEN
NOT DB_LeaderLog_Temp_CombinedString(_LogDetails);
LeaderLog_Log("DEBUG", "[LLWEAPONEX:Debug:SkillCast] ", _LogDetails);
*/

//REGION DEBUG_FIND_COMBAT_SHIELD
IF
StoryEvent(_, "LeaderLib_Initialized")
AND
DB_IsPlayer(_Player)
AND
GetUUID(_Player, _ID)
AND
StringConcatenate("LLWEAPONEX_Debug_DualShieldsIteratorDone_", _ID, _GlobalFlag)
THEN
DB_LLWEAPONEX_Debug_Temp_FixingCombatShields(_Player, _GlobalFlag);
InventoryLaunchTagIterator(_Player, "LLWEAPONEX_DualShields", "", "LLWEAPONEX_Iterators_FoundDualShield", _GlobalFlag);

IF
StoryEvent((ITEMGUID)_Shield, "LLWEAPONEX_Iterators_FoundDualShield")
AND
DB_LLWEAPONEX_Debug_Temp_FixingCombatShields(_Player, _GlobalFlag)
THEN
LLWEAPONEX_DualShields_FindCombatShield(_Player, _Shield, 0);

IF
GlobalFlagSet(_GlobalFlag)
AND
DB_LLWEAPONEX_Debug_Temp_FixingCombatShields(_Player, _GlobalFlag)
THEN
NOT DB_LLWEAPONEX_Debug_Temp_FixingCombatShields(_Player, _GlobalFlag);
//END_REGION

//END_REGION

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_99_Debug"
