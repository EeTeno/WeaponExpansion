Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLWEAPONEX_Demolition_RegisterBonusSkills();
KBSECTION

//REGION SETTINGS_SKILLS
PROC
LLWEAPONEX_Demolition_RegisterBonusSkills()
THEN
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_ArmorPiercing", "LLWEAPONEX_DEMOLITION_BONUS_ARMORPIERCING", "Projectile_LLWEAPONEX_Status_Demolition_ArmorPiercing");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_Nailbomb", "LLWEAPONEX_DEMOLITION_BONUS_NAILBOMB", "Projectile_LLWEAPONEX_Status_Demolition_NailBomb");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_Flashbang", "LLWEAPONEX_DEMOLITION_BONUS_FLASHBANG", "Projectile_LLWEAPONEX_Status_Demolition_Flashbang");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_Molotov", "LLWEAPONEX_DEMOLITION_BONUS_MOLOTOV", "Projectile_LLWEAPONEX_Status_Demolition_Molotov");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_CursedMolotov", "LLWEAPONEX_DEMOLITION_BONUS_CURSEDMOLOTOV", "Projectile_LLWEAPONEX_Status_Demolition_CursedMolotov");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_Love", "LLWEAPONEX_DEMOLITION_BONUS_LOVE", "Projectile_LLWEAPONEX_Status_Demolition_Love");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_MindMaggot", "LLWEAPONEX_DEMOLITION_BONUS_MINDMAGGOT", "Projectile_LLWEAPONEX_Status_Demolition_MindMaggot");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_ChemicalWarfare", "LLWEAPONEX_DEMOLITION_BONUS_CHEMICALWARFARE", "Projectile_LLWEAPONEX_Status_Demolition_ChemicalWarfare");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_Terror", "LLWEAPONEX_DEMOLITION_BONUS_TERROR", "Projectile_LLWEAPONEX_Status_Demolition_Terror");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_Ice", "LLWEAPONEX_DEMOLITION_BONUS_ICE", "Projectile_LLWEAPONEX_Status_Demolition_Ice");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_BlessedIce", "LLWEAPONEX_DEMOLITION_BONUS_BLESSEDICE", "Projectile_LLWEAPONEX_Status_Demolition_BlessedIce");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_Holy", "LLWEAPONEX_DEMOLITION_BONUS_HOLY", "Projectile_LLWEAPONEX_Status_Demolition_Holy");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_Tremor", "LLWEAPONEX_DEMOLITION_BONUS_TREMOR", "Projectile_LLWEAPONEX_Status_Demolition_Tremor");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_Taser", "LLWEAPONEX_DEMOLITION_BONUS_TASER", "Projectile_LLWEAPONEX_Status_Demolition_Taser");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_WaterBalloon", "LLWEAPONEX_DEMOLITION_BONUS_WATERBALLOON", "Projectile_LLWEAPONEX_Status_Demolition_WaterBalloon");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_WaterBlessedBalloon", "LLWEAPONEX_DEMOLITION_BONUS_WATERBLESSEDBALLOON", "Projectile_LLWEAPONEX_Status_Demolition_WaterBlessedBalloon");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_SmokeBomb", "LLWEAPONEX_DEMOLITION_BONUS_SMOKEBOMB", "Projectile_LLWEAPONEX_Status_Demolition_SmokeBomb");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_MustardGas", "LLWEAPONEX_DEMOLITION_BONUS_MUSTARDGAS", "Projectile_LLWEAPONEX_Status_Demolition_MustardGas");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_OilFlask", "LLWEAPONEX_DEMOLITION_BONUS_OILFLASK", "Projectile_LLWEAPONEX_Status_Demolition_OilFlask");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_BlessedOilFlask", "LLWEAPONEX_DEMOLITION_BONUS_BLESSEDOILFLASK", "Projectile_LLWEAPONEX_Status_Demolition_BlessedOilFlask");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_PoisonFlask", "LLWEAPONEX_DEMOLITION_BONUS_POISONFLASK", "Projectile_LLWEAPONEX_Status_Demolition_PoisonFlask");
LLWEAPONEX_Demolition_AddSkillBonus("Shared.Grenades", "Projectile_Grenade_CursedPoisonFlask", "LLWEAPONEX_DEMOLITION_BONUS_CURSEDPOISONFLASK", "Projectile_LLWEAPONEX_Status_Demolition_CursedPoisonFlask");
//LLWEAPONEX_Demolition_AddSkillBonus("None", "None", "LLWEAPONEX_DEMOLITION_BONUS_DEFAULT");

LLWEAPONEX_Demolition_AddSkillBonus("Shared.Scrolls", "Projectile_Fireball", "LLWEAPONEX_DEMOLITION_BONUS_MOLOTOV", "Projectile_LLWEAPONEX_Status_Demolition_Molotov");

PROC
LLWEAPONEX_Demolition_AddSkillBonus((STRING)_Group, (STRING)_Skill, (STRING)_Status, (STRING)_BonusSkill)
AND
NOT DB_LLWEAPONEX_Demolition_SkillBonuses((INTEGER)_, _Group, _Skill, _Status, _BonusSkill)
THEN
DB_LLWEAPONEX_Demolition_SkillBonuses(0, _Group, _Skill, _Status, _BonusSkill);
LeaderLib_Array_AddToArray("LLWEAPONEX_Demolition_BonusSkillListQueue", _BonusSkill);
DB_LLWEAPONEX_Demolition_Temp_AddToList(1);
//END_REGION

//REGION UPDATES
/*
PROC
LeaderLib_Mods_OnVersionChanged(c60718c3-ba22-4702-9c5d-5ad92b41ba5f, (INTEGER)_LastVersion, (INTEGER)_NextVersion)
THEN
SysClear("DB_LLWEAPONEX_Demolition_SkillBonuses", 4);
LLWEAPONEX_Demolition_RegisterBonusSkills();
*/
//END_REGION

//REGION ADD_SKILL_TO_BEHAVIOR
IF
//GameStarted(_,_)
StoryEvent(_, "LeaderLib_Initialized")
AND
DB_LLWEAPONEX_Demolition_Temp_AddToList(1)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:GameStarted] Adding bonus skills to list after [1500]ms.");
TimerCancel("LLWEAPONEX_Timers_Demolition_AddBonusSkillsToList");
TimerLaunch("LLWEAPONEX_Timers_Demolition_AddBonusSkillsToList", 500);

IF
TimerFinished("LLWEAPONEX_Timers_Demolition_AddBonusSkillsToList")
THEN
NOT DB_LLWEAPONEX_Demolition_Temp_AddToList(1);

IF
TimerFinished("LLWEAPONEX_Timers_Demolition_AddBonusSkillsToList")
AND
ObjectExists(S_LLWEAPONEX_VendingMachine_A_680d2702-721c-412d-b083-4f5e816b945a, 0)
AND
NOT DB_LLWEAPONEX_Demolition_Temp_AddToListError(1)
THEN
DB_LLWEAPONEX_Demolition_Temp_AddToListError(1);
TimerLaunch("LLWEAPONEX_Timers_Demolition_AddBonusSkillsToList", 30000);

IF
TimerFinished("LLWEAPONEX_Timers_Demolition_AddBonusSkillsToList")
AND
ObjectExists(S_LLWEAPONEX_VendingMachine_A_680d2702-721c-412d-b083-4f5e816b945a, 0)
AND
DB_LLWEAPONEX_Demolition_Temp_AddToListError(1)
THEN
LeaderLog_Log("ERROR", "[LLWEAPONEX_12_Demolition_Bonuses:LLWEAPONEX_Timers_Demolition_AddBonusSkillsToList] [ERROR] Vending Machine doesn't exist! Help!");

/*
IF
TimerFinished("LLWEAPONEX_Timers_Demolition_AddBonusSkillsToList")
AND
ObjectExists(S_LLWEAPONEX_VendingMachine_A_680d2702-721c-412d-b083-4f5e816b945a, 0)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:LLWEAPONEX_Timers_Demolition_AddBonusSkillsToList] Vending Machine does not exist!");

IF
TimerFinished("LLWEAPONEX_Timers_Demolition_AddBonusSkillsToList")
AND
LeaderLib_Array_QRY_EmptyLength("LLWEAPONEX_Demolition_BonusSkillListQueue")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:LLWEAPONEX_Timers_Demolition_AddBonusSkillsToList] Array is empty!");
*/

IF
TimerFinished("LLWEAPONEX_Timers_Demolition_AddBonusSkillsToList")
AND
ObjectExists(S_LLWEAPONEX_VendingMachine_A_680d2702-721c-412d-b083-4f5e816b945a, 1)
AND
NOT LeaderLib_Array_QRY_EmptyLength("LLWEAPONEX_Demolition_BonusSkillListQueue")
THEN
NOT DB_LLWEAPONEX_Demolition_Temp_AddToListError(1);
LLWEAPONEX_Demolition_Internal_ProcessListQueue(S_LLWEAPONEX_VendingMachine_A_680d2702-721c-412d-b083-4f5e816b945a);

PROC
LLWEAPONEX_Demolition_Internal_ProcessListQueue((CHARACTERGUID)_Middleman)
AND
LeaderLib_Array_QRY_Pop("LLWEAPONEX_Demolition_BonusSkillListQueue")
AND
DB_LeaderLib_Array_Temp_PopValue("LLWEAPONEX_Demolition_BonusSkillListQueue", _BonusSkill)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:Internal_ProcessListQueue] Adding bonus skill [",_BonusSkill,"].");
CharacterAddSkill(_Middleman, _BonusSkill, 0);

/*
PROC
LLWEAPONEX_Demolition_Internal_ProcessListQueue((CHARACTERGUID)_Middleman)
AND
NOT DB_LeaderLib_Array_Temp_PopValue("LLWEAPONEX_Demolition_BonusSkillListQueue", _)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:Internal_ProcessListQueue] Pop error?");

IF
SkillAdded(S_LLWEAPONEX_VendingMachine_A_680d2702-721c-412d-b083-4f5e816b945a, _Skill, _learned)
THEN
LeaderLog_LogIntWithString("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:SkillAdded] (", _Skill, ") added to vending machine. Learned [",_learned,"].");

IF
StoryEvent(_VendingMachine, "LLWEAPONEX_VendingMachine_SkillJustAdded")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:StoryEvent_LLWEAPONEX_VendingMachine_SkillJustAdded] Skill just added event ran.");
*/

IF
StoryEvent(_Middleman, "LLWEAPONEX_Demolition_SkillAddedToList")
AND
GetVarInteger(_Middleman, "LLWEAPONEX_Demolition_LastListIndex", _Index)
AND
DB_LeaderLib_Array_Temp_PopValue("LLWEAPONEX_Demolition_BonusSkillListQueue", _BonusSkill)
AND
DB_LLWEAPONEX_Demolition_SkillBonuses(_UnsetIndex, _Group, _Skill, _Status, _BonusSkill)
THEN
NOT DB_LeaderLib_Array_Temp_PopValue("LLWEAPONEX_Demolition_BonusSkillListQueue", _BonusSkill);
NOT DB_LLWEAPONEX_Demolition_SkillBonuses(_UnsetIndex, _Group, _Skill, _Status, _BonusSkill);
DB_LLWEAPONEX_Demolition_SkillBonuses(_Index, _Group, _Skill, _Status, _BonusSkill);
LeaderLog_LogIntWithString("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:LLWEAPONEX_Demolition_SkillAddedToList] (", _BonusSkill, ") added to behavior list at index [",_Index,"].");

IF
StoryEvent(_Middleman, "LLWEAPONEX_Demolition_SkillAddedToList")
AND
LeaderLib_Array_QRY_EmptyLength("LLWEAPONEX_Demolition_BonusSkillListQueue")
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:SkillAddedToList] Skill added to list. Array is empty. All done!");

IF
StoryEvent(_Middleman, "LLWEAPONEX_Demolition_SkillAddedToList")
AND
NOT LeaderLib_Array_QRY_EmptyLength("LLWEAPONEX_Demolition_BonusSkillListQueue")
THEN
//LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:SkillAddedToList] Fetching next in list after [250]ms.");
ProcObjectTimer(_Middleman, "LLWEAPONEX_Timers_Demolition_AddNextToSkillList", 25);

PROC
ProcObjectTimerFinished((CHARACTERGUID)_Middleman, "LLWEAPONEX_Timers_Demolition_AddNextToSkillList")
AND
NOT LeaderLib_Array_QRY_EmptyLength("LLWEAPONEX_Demolition_BonusSkillListQueue")
THEN
//LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:AddNextToSkillList] Processing list queue.");
LLWEAPONEX_Demolition_Internal_ProcessListQueue(_Middleman);
//END_REGION

QRY
LLWEAPONEX_Demolition_QRY_IsBonusItem((ITEMGUID)_Item)
AND
IsTagged(_Item, "GRENADES", _IsGrenade)
AND
IsTagged(_Item, "Consumable", _IsConsumable)
AND
IntegerMax(_IsGrenade, _IsConsumable, 1)
THEN
DB_NOOP(1);

/*
QRY
LLWEAPONEX_Demolition_QRY_IsBonusItem((ITEMGUID)_Item)
AND
IsTagged(_Item, "GRENADES", _IsGrenade)
AND
IsTagged(_Item, "LLWEAPONEX_RemoteMine", _IsMine)
AND
IntegerMax(_IsGrenade, _IsMine, 1)
THEN
DB_NOOP(1);
*/

QRY
LLWEAPONEX_Demolition_QRY_SkillHasBonuses((STRING)_Skill)
AND
DB_LLWEAPONEX_Demolition_SkillBonuses(_Index, _Group, _Skill, _Status, _BonusSkill)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Demolition_QRY_ListeningForSkill((CHARACTERGUID)_Player, (STRING)_Skill)
AND
DB_LLWEAPONEX_Demolition_Temp_ListenForSkill(_Player, _Target, _Item, _Skill)
THEN
DB_NOOP(1);

QRY
LLWEAPONEX_Demolition_QRY_ListeningForSkill((CHARACTERGUID)_Player, (STRING)_Skill)
AND
DB_LLWEAPONEX_Demolition_Temp_ListenForSkillPosition(_Player, _Item, _Skill, _x, _y, _z)
THEN
DB_NOOP(1);

PROC
LLWEAPONEX_Demolition_ClearListeningEntries((CHARACTERGUID)_Player)
AND
DB_LLWEAPONEX_Demolition_Temp_ListenForSkill(_Player, _Item, _Skill)
THEN
NOT DB_LLWEAPONEX_Demolition_Temp_ListenForSkill(_Player, _Item, _Skill);

PROC
LLWEAPONEX_Demolition_ClearListeningEntries((CHARACTERGUID)_Player)
AND
DB_LLWEAPONEX_Demolition_Temp_ListenForSkill(_Player, _Target, _Item, _Skill)
THEN
NOT DB_LLWEAPONEX_Demolition_Temp_ListenForSkill(_Player, _Target, _Item, _Skill);

PROC
LLWEAPONEX_Demolition_ClearListeningEntries((CHARACTERGUID)_Player)
AND
DB_LLWEAPONEX_Demolition_Temp_ListenForSkillPosition(_Player, _Item, _Skill, _x, _y, _z)
THEN
NOT DB_LLWEAPONEX_Demolition_Temp_ListenForSkillPosition(_Player, _Item, _Skill, _x, _y, _z);

PROC
LLWEAPONEX_Demolition_OnItemSkillCast((CHARACTERGUID)_Player, (STRING)_Skill)
AND
DB_LLWEAPONEX_Demolition_Temp_ListenForSkill(_Player, _Item, _Skill)
THEN
NOT DB_LLWEAPONEX_Demolition_Temp_ListenForSkill(_Player, _Item, _Skill);

//REGION GRENADE_SKILL_BONUS
IF
StoryEvent((CHARACTERGUID)_Player, "LLWEAPONEX_Demolition_ApplySkillBonus")
AND
DB_LLWEAPONEX_Demolition_Temp_ListenForSkill(_Player, _Target, _Item, _Skill)
THEN
NOT DB_LLWEAPONEX_Demolition_Temp_ListenForSkill(_Player, _Target, _Item, _Skill);
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:ApplySkillBonus] Granting grenade bonus on target [",_Skill,"].");
LLWEAPONEX_Demolition_ClearListeningEntries(_Player);
LLWEAPONEX_Demolition_GrantBonus(_Player, _Target, _Item, _Skill);

IF
StoryEvent((CHARACTERGUID)_Player, "LLWEAPONEX_Demolition_ApplySkillBonus")
AND
DB_LLWEAPONEX_Demolition_Temp_ListenForSkillPosition(_Player, _Item, _Skill, _x, _y, _z)
THEN
NOT DB_LLWEAPONEX_Demolition_Temp_ListenForSkillPosition(_Player, _Item, _Skill, _x, _y, _z);
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:ApplySkillBonus] Granting grenade bonus at position [",_Skill,"].");
LLWEAPONEX_Demolition_ClearListeningEntries(_Player);
LLWEAPONEX_Demolition_GrantBonusAtPosition(_Player, _Item, _Skill, _x, _y, _z);

//Enhanced Demolition
PROC
LLWEAPONEX_Demolition_GrantBonus((CHARACTERGUID)_Player, (GUIDSTRING)_Target, (ITEMGUID)_Item, (STRING)_Skill)
AND
Leaderlog_QRY_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:GrantBonus] Checking if target is an enemy.")
AND
LeaderLib_Combat_QRY_IsEnemy(_Player, _Target, 1)
AND
LeaderLib_Roll_QRY(250)
THEN
ApplyStatus(_Target, "LLWEAPONEX_DEMOLITION_SABOTAGE_ENEMY", 0.0, 0, _Player);

PROC
LLWEAPONEX_Demolition_GrantBonus((CHARACTERGUID)_Player, (GUIDSTRING)_Target, (ITEMGUID)_Item, (STRING)_Skill)
AND
DB_LLWEAPONEX_Demolition_SkillBonuses(_Index, _Group, _Skill, _Status, _BonusSkill)
THEN
ApplyStatus(_Target, _Status, 0.0, 0, _Player);
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:GrantBonus] Exploding skill [",_BonusSkill,"] via status [",_Status,"].");

PROC
LLWEAPONEX_Demolition_GrantBonus((CHARACTERGUID)_Player, (GUIDSTRING)_Target, (ITEMGUID)_Item, (STRING)_Skill)
AND
NOT LLWEAPONEX_Demolition_QRY_SkillHasBonuses(_Skill)
THEN
ApplyStatus(_Target, "LLWEAPONEX_DEMOLITION_BONUS_DEFAULT", 0.0, 0, _Player);
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:GrantBonus] Using fallback status [LLWEAPONEX_DEMOLITION_BONUS_DEFAULT].");

PROC
LLWEAPONEX_Demolition_GrantBonusAtPosition((CHARACTERGUID)_Player, (ITEMGUID)_Item, (STRING)_Skill, (REAL)_x, (REAL)_y, (REAL)_z)
THEN
SetVarFloat3(_Player, "LLWEAPONEX_Demolition_BonusPosition", _x, _y, _z);

PROC
LLWEAPONEX_Demolition_GrantBonusAtPosition((CHARACTERGUID)_Player, (ITEMGUID)_Item, (STRING)_Skill, (REAL)_x, (REAL)_y, (REAL)_z)
AND
LeaderLib_Roll_QRY(250)
THEN
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:GrantBonusAtPosition] Applying sabotage via [Projectile_LLWEAPONEX_Status_Demolition_Sabotage_EnemyOnly] at position.");
SetStoryEvent(_Player, "LLWEAPONEX_DemolitionBonus_Sabotage");

PROC
LLWEAPONEX_Demolition_GrantBonusAtPosition((CHARACTERGUID)_Player, (ITEMGUID)_Item, (STRING)_Skill, (REAL)_x, (REAL)_y, (REAL)_z)
AND
DB_LLWEAPONEX_Demolition_SkillBonuses(_Index, _Group, _Skill, _Status, _BonusSkill)
THEN
LeaderLog_LogIntWithString("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:GrantBonusAtPosition] Exploding skill [",_BonusSkill,"] via index [",_Index,"].");
SetVarInteger(_Player, "LLWEAPONEX_Demolition_SkillIndex", _Index);
SetStoryEvent(_Player, "LLWEAPONEX_DemolitionBonus_SkillBonus");

PROC
LLWEAPONEX_Demolition_GrantBonusAtPosition((CHARACTERGUID)_Player, (ITEMGUID)_Item, (STRING)_Skill, (REAL)_x, (REAL)_y, (REAL)_z)
AND
NOT DB_LLWEAPONEX_Demolition_SkillBonuses(_, _, _Skill, _, _)
THEN
SetStoryEvent(_Player, "LLWEAPONEX_DemolitionBonus_DefaultGrenadeSkill");
LeaderLog_Log("DEBUG", "[LLWEAPONEX_12_Demolition_Bonuses:GrantBonusAtPosition] Using fallback explosion projectile.");
//END_REGION

IF
CharacterStatusApplied(_Target, "LLWEAPONEX_DEMOLITION_SABOTAGE_FX", _)
THEN
CharacterStatusText(_Target, "LLWEAPONEX_Status_Sabotage_Applied");

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLWEAPONEX_00_PostCC"